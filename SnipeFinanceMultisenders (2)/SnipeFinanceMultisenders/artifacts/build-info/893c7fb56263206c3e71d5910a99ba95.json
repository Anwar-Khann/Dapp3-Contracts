{
	"id": "893c7fb56263206c3e71d5910a99ba95",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n\n// File: SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\n\n// pragma solidity 0.8.13;\n\n// import \"./IBEP20.sol\";\n\n\ncontract SnipeFinanceMultisenders is Ownable{\n    uint256 public fee;\n    address payable public receiver;\n    uint256 public feeamounts;\n    mapping(address => bool) public authorizedusers;\n    IERC20 public tokenaddress; // HODL SNIPE token to use the tool for free\n    uint256 public quantity; // must HODL atleast tokens set\n    \n    constructor() {\n        receiver = payable(owner());\n        fee = 1 * 10 ** 14;\n    }\n\n    function BNBmultisender(address[] memory recipients, uint256[] memory values) external payable {\n        if(!authorizedusers[msg.sender] && tokenaddress.balanceOf(msg.sender) < quantity ) {\n            require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Multi bulk function\");\n            feeamounts += fee;\n            payable(receiver).transfer(fee);\n        }\n        for (uint256 i = 0; i < recipients.length; i++){\n            payable(recipients[i]).transfer(values[i]);\n        }\n    \n        uint256 balance = address(this).balance;\n    \n        if (balance > 0)\n            payable(msg.sender).transfer(balance);\n    }\n    \n   function TOKENmultisender(\n        IERC20 token,\n        address[] memory recipients,\n        uint256[] memory values\n    ) external payable {\n        //sub sy pehly values ko 18 decimal me convert karain gy\n        for (uint256 i = 0; i < values.length; i++) {\n            values[i] = values[i] * 10**18;\n        }\n        require(recipients.length == values.length, \"invalid input size\");\n        //run time comparison which token user want to sent\n        // address \n        // tokenaddress = token;\n\n        if (\n            !authorizedusers[msg.sender] &&\n            token.balanceOf(msg.sender) < quantity\n        ) {\n            feeamounts += fee;\n            payable(receiver).transfer(fee);\n            for (uint256 i = 0; i < values.length; i++) {\n                require(token.transferFrom(msg.sender, recipients[i], values[i]),\"error\");\n            }\n        } else if (\n            authorizedusers[msg.sender] &&\n            token.balanceOf(msg.sender) > quantity\n        ) {\n            for (uint256 i = 0; i < values.length; i++) {\n                require(token.transferFrom(msg.sender, recipients[i], values[i]),\"erro\");\n            }\n        }\n    }\n    // setfeeToUse  --- function 1\n    function setfeeToUse (uint256 newfee, address _receiver) onlyOwner external {\n        fee = newfee;\n        receiver = payable(_receiver);\n    }\n    // Simple BNB withdraw function  --- function 1\n    function withdraw() onlyOwner external {\n        if(feeamounts > 0)\n           payable(msg.sender).transfer(feeamounts);\n    }\n    // authorizetouse ---- function 2\n    function authorizeToUse(address _addr) onlyOwner external {\n        authorizedusers[_addr] = true;\n    }\n\n    // set authorised addresses  (owner can set address true or false ) \n    function setauthor(address _addr, bool _bool) onlyOwner external {\n        if(authorizedusers[_addr]) {\n            authorizedusers[_addr] = _bool;\n        }\n    }\n\n    // Set Token Address and Quantity\n    function SetTokenToholdAndQuantity (IERC20 token, uint256 _amount) onlyOwner external {\n        tokenaddress = token;\n        quantity = _amount;\n    }\n\n    function readAuthorizedUsers(address user) public view returns(bool){\n        return authorizedusers[user];\n    }\n\n    //function to return fee\n    function getFeeDetails()public view returns(uint256){\n        return fee;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":{\"keccak256\":\"0x9515749d2507e0d1104e4dceca6a10ebe466feb937ff10d63195f07a596e26ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fd6d7d8e7557d5883159d419877ad427dc3f04051d71078a2512a945b759433\",\"dweb:/ipfs/QmSWHWZwi6ZHGdKAusMK2QHZo9Evw97pDpPTqK5KvUpRmD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":{\"keccak256\":\"0x9515749d2507e0d1104e4dceca6a10ebe466feb937ff10d63195f07a596e26ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fd6d7d8e7557d5883159d419877ad427dc3f04051d71078a2512a945b759433\",\"dweb:/ipfs/QmSWHWZwi6ZHGdKAusMK2QHZo9Evw97pDpPTqK5KvUpRmD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":{\"keccak256\":\"0x9515749d2507e0d1104e4dceca6a10ebe466feb937ff10d63195f07a596e26ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fd6d7d8e7557d5883159d419877ad427dc3f04051d71078a2512a945b759433\",\"dweb:/ipfs/QmSWHWZwi6ZHGdKAusMK2QHZo9Evw97pDpPTqK5KvUpRmD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SnipeFinanceMultisenders": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "BNBmultisender",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "SetTokenToholdAndQuantity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TOKENmultisender",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "authorizeToUse",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "authorizedusers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeamounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFeeDetails",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "quantity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "readAuthorizedUsers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "receiver",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_bool",
									"type": "bool"
								}
							],
							"name": "setauthor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newfee",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								}
							],
							"name": "setfeeToUse",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenaddress",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6419:9853  contract SnipeFinanceMultisenders is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6757:6843  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1825:1857  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":772:782  msg.sender */\n  caller\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1825:1843  _transferOwnership */\n  tag_8\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1825:1857  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2136:2143  address */\n  0x00\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2162:2168  _owner */\n  sload\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6781:6789  receiver */\n  0x02\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6781:6808  receiver = payable(owner()) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2162:2168  _owner */\n  swap1\n  swap3\n  and\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6781:6808  receiver = payable(owner()) */\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6824:6836  1 * 10 ** 14 */\n  0x5af3107a4000\n  0x01\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6818:6836  fee = 1 * 10 ** 14 */\n  sstore\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6419:9853  contract SnipeFinanceMultisenders is Ownable{... */\n  jump(tag_12)\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3315:3502  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3388:3404  address oldOwner */\n  0x00\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3407:3413  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3423:3440  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3455:3495  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3407:3413  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3455:3495  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3388:3404  address oldOwner */\n  swap1\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3455:3495  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3378:3502  {... */\n  pop\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3315:3502  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6419:9853  contract SnipeFinanceMultisenders is Ownable{... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6419:9853  contract SnipeFinanceMultisenders is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9c8b9e7b\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xddca3f43\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe3cec849\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf7260d3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xfb520af2\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x9c8b9e7b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9cbd3433\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa4df0256\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb810c636\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x3feff76d\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x3feff76d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x44b6209d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4b4fb1b0\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x126ccd94\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x17fc45e2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2fc75eb0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8707:8851  function setfeeToUse (uint256 newfee, address _receiver) onlyOwner external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6691:6714  uint256 public quantity */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      sload(0x06)\n      dup2\n      jump\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":616:641   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":604:606   */\n      0x20\n        /* \"#utility.yul\":589:607   */\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6691:6714  uint256 public quantity */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9467:9618  function SetTokenToholdAndQuantity (IERC20 token, uint256 _amount) onlyOwner external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8908:9034  function withdraw() onlyOwner external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_24\n      tag_40\n      jump\t// in\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6614:6640  IERC20 public tokenaddress */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      sload(0x05)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_42:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1164:1196   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1146:1197   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1134:1136   */\n      0x20\n        /* \"#utility.yul\":1119:1137   */\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6614:6640  IERC20 public tokenaddress */\n      tag_31\n        /* \"#utility.yul\":986:1203   */\n      jump\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6561:6608  mapping(address => bool) public authorizedusers */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":1625:1639   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1618:1640   */\n      iszero\n        /* \"#utility.yul\":1600:1641   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1588:1590   */\n      0x20\n        /* \"#utility.yul\":1573:1591   */\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6561:6608  mapping(address => bool) public authorizedusers */\n      tag_31\n        /* \"#utility.yul\":1460:1647   */\n      jump\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9077:9181  function authorizeToUse(address _addr) onlyOwner external {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_24\n      tag_55\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2713:2814  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_24\n      tag_59\n      jump\t// in\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2090:2175  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2136:2143  address */\n      0x00\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2162:2168  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2090:2175  function owner() public view virtual returns (address) {... */\n      jump(tag_42)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6530:6555  uint256 public feeamounts */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_29\n      sload(0x03)\n      dup2\n      jump\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7500:8667  function TOKENmultisender(... */\n    tag_12:\n      tag_24\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9624:9737  function readAuthorizedUsers(address user) public view returns(bool){... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_47\n      tag_75\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9709:9730  authorizedusers[user] */\n      and\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9687:9691  bool */\n      0x00\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9709:9730  authorizedusers[user] */\n      swap1\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9709:9724  authorizedusers */\n      0x04\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9709:9730  authorizedusers[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9624:9737  function readAuthorizedUsers(address user) public view returns(bool){... */\n      jump\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9772:9851  function getFeeDetails()public view returns(uint256){... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9841:9844  fee */\n      sload(0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9772:9851  function getFeeDetails()public view returns(uint256){... */\n      jump(tag_29)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6469:6487  uint256 public fee */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_29\n      sload(0x01)\n      dup2\n      jump\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6849:7491  function BNBmultisender(address[] memory recipients, uint256[] memory values) external payable {... */\n    tag_16:\n      tag_24\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2963:3161  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_24\n      tag_92\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6493:6524  address payable public receiver */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      sload(0x02)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9260:9423  function setauthor(address _addr, bool _bool) onlyOwner external {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_24\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8707:8851  function setfeeToUse (uint256 newfee, address _receiver) onlyOwner external {... */\n    tag_27:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      tag_105\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1994  _checkOwner */\n      tag_106\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      jump\t// in\n    tag_105:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8793:8796  fee */\n      0x01\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8793:8805  fee = newfee */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8815:8823  receiver */\n      0x02\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8815:8844  receiver = payable(_receiver) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8707:8851  function setfeeToUse (uint256 newfee, address _receiver) onlyOwner external {... */\n      jump\t// out\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9467:9618  function SetTokenToholdAndQuantity (IERC20 token, uint256 _amount) onlyOwner external {... */\n    tag_37:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      tag_109\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1994  _checkOwner */\n      tag_106\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      jump\t// in\n    tag_109:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9563:9575  tokenaddress */\n      0x05\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9563:9583  tokenaddress = token */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9593:9601  quantity */\n      0x06\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9593:9611  quantity = _amount */\n      sstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9467:9618  function SetTokenToholdAndQuantity (IERC20 token, uint256 _amount) onlyOwner external {... */\n      jump\t// out\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8908:9034  function withdraw() onlyOwner external {... */\n    tag_40:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      tag_112\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1994  _checkOwner */\n      tag_106\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      jump\t// in\n    tag_112:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8960:8970  feeamounts */\n      sload(0x03)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8960:8974  feeamounts > 0 */\n      iszero\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8957:9027  if(feeamounts > 0)... */\n      tag_114\n      jumpi\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9016:9026  feeamounts */\n      sload(0x03)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8987:9027  payable(msg.sender).transfer(feeamounts) */\n      mload(0x40)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8995:9005  msg.sender */\n      caller\n      swap2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8987:9027  payable(msg.sender).transfer(feeamounts) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9016:9026  feeamounts */\n      dup6\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8995:9005  msg.sender */\n      dup9\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8987:9027  payable(msg.sender).transfer(feeamounts) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8957:9027  if(feeamounts > 0)... */\n    tag_114:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8908:9034  function withdraw() onlyOwner external {... */\n      jump\t// out\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9077:9181  function authorizeToUse(address _addr) onlyOwner external {... */\n    tag_56:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      tag_118\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1994  _checkOwner */\n      tag_106\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      jump\t// in\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9145:9167  authorizedusers[_addr] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9145:9160  authorizedusers */\n      0x04\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9145:9167  authorizedusers[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9145:9174  authorizedusers[_addr] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9170:9174  true */\n      0x01\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9145:9174  authorizedusers[_addr] = true */\n      or\n      swap1\n      sstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9077:9181  function authorizeToUse(address _addr) onlyOwner external {... */\n      jump\t// out\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2713:2814  function renounceOwnership() public virtual onlyOwner {... */\n    tag_59:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      tag_121\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1994  _checkOwner */\n      tag_106\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      jump\t// in\n    tag_121:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2777:2807  _transferOwnership(address(0)) */\n      tag_114\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2804:2805  0 */\n      0x00\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2777:2795  _transferOwnership */\n      tag_124\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2777:2807  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7500:8667  function TOKENmultisender(... */\n    tag_72:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7721:7730  uint256 i */\n      0x00\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7716:7815  for (uint256 i = 0; i < values.length; i++) {... */\n    tag_127:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7740:7746  values */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7740:7753  values.length */\n      mload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7736:7737  i */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7736:7753  i < values.length */\n      lt\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7716:7815  for (uint256 i = 0; i < values.length; i++) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7786:7792  values */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7793:7794  i */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7786:7795  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7798:7804  10**18 */\n      0x0de0b6b3a7640000\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7786:7804  values[i] * 10**18 */\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7774:7780  values */\n      dup3\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7781:7782  i */\n      dup3\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7774:7783  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_136\n      jumpi\n      tag_136\n      tag_132\n      jump\t// in\n    tag_136:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7774:7804  values[i] = values[i] * 10**18 */\n      mstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7755:7758  i++ */\n      dup1\n      tag_137\n      dup2\n      tag_138\n      jump\t// in\n    tag_137:\n      swap2\n      pop\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7716:7815  for (uint256 i = 0; i < values.length; i++) {... */\n      jump(tag_127)\n    tag_128:\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7853:7859  values */\n      dup1\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7853:7866  values.length */\n      mload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7832:7842  recipients */\n      dup3\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7832:7849  recipients.length */\n      mload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7832:7866  recipients.length == values.length */\n      eq\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7824:7889  require(recipients.length == values.length, \"invalid input size\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6731:6733   */\n      0x20\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7824:7889  require(recipients.length == values.length, \"invalid input size\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6713:6734   */\n      mstore\n        /* \"#utility.yul\":6770:6772   */\n      0x12\n        /* \"#utility.yul\":6750:6768   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6743:6773   */\n      mstore\n      shl(0x70, 0x696e76616c696420696e7075742073697a65)\n        /* \"#utility.yul\":6789:6807   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6782:6830   */\n      mstore\n        /* \"#utility.yul\":6847:6865   */\n      0x64\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7824:7889  require(recipients.length == values.length, \"invalid input size\") */\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8047:8057  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8031:8058  authorizedusers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8031:8046  authorizedusers */\n      0x04\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8031:8058  authorizedusers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8030:8058  !authorizedusers[msg.sender] */\n      iszero\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8030:8112  !authorizedusers[msg.sender] &&... */\n      dup1\n      iszero\n      tag_142\n      jumpi\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8104:8112  quantity */\n      sload(0x06)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8074:8101  token.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8090:8100  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8074:8101  token.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1146:1197   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8074:8089  token.balanceOf */\n      dup6\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1119:1137   */\n      0x24\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8074:8101  token.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8074:8112  token.balanceOf(msg.sender) < quantity */\n      lt\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8030:8112  !authorizedusers[msg.sender] &&... */\n    tag_142:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8013:8661  if (... */\n      iszero\n      tag_148\n      jumpi\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8151:8154  fee */\n      sload(0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8137:8147  feeamounts */\n      0x03\n      0x00\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8137:8154  feeamounts += fee */\n      dup3\n      dup3\n      sload\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8176:8184  receiver */\n      sload(0x02)\n      0x01\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8195:8198  fee */\n      sload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8168:8199  payable(receiver).transfer(fee) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8176:8184  receiver */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8168:8199  payable(receiver).transfer(fee) */\n      dup2\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8195:8198  fee */\n      swap1\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8176:8184  receiver */\n      0x00\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8168:8199  payable(receiver).transfer(fee) */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8176:8184  receiver */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8168:8199  payable(receiver).transfer(fee) */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8195:8198  fee */\n      dup6\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8176:8184  receiver */\n      dup9\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8168:8199  payable(receiver).transfer(fee) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8218:8227  uint256 i */\n      0x00\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8213:8363  for (uint256 i = 0; i < values.length; i++) {... */\n    tag_153:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8237:8243  values */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8237:8250  values.length */\n      mload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8233:8234  i */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8233:8250  i < values.length */\n      lt\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8213:8363  for (uint256 i = 0; i < values.length; i++) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8283:8288  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8283:8301  token.transferFrom */\n      and\n      0x23b872dd\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8302:8312  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8314:8324  recipients */\n      dup6\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8325:8326  i */\n      dup5\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8314:8327  recipients[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_157\n      jumpi\n      tag_157\n      tag_132\n      jump\t// in\n    tag_157:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8329:8335  values */\n      dup6\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8336:8337  i */\n      dup6\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8329:8338  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_159\n      jumpi\n      tag_159\n      tag_132\n      jump\t// in\n    tag_159:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8283:8339  token.transferFrom(msg.sender, recipients[i], values[i]) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup7\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7456:7471   */\n      swap4\n      dup5\n      and\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8283:8339  token.transferFrom(msg.sender, recipients[i], values[i]) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7438:7472   */\n      mstore\n        /* \"#utility.yul\":7508:7523   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7488:7506   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7481:7524   */\n      mstore\n        /* \"#utility.yul\":7540:7558   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7533:7567   */\n      mstore\n        /* \"#utility.yul\":7373:7391   */\n      0x64\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8283:8339  token.transferFrom(msg.sender, recipients[i], values[i]) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8275:8348  require(token.transferFrom(msg.sender, recipients[i], values[i]),\"error\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8030:8032   */\n      0x20\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8275:8348  require(token.transferFrom(msg.sender, recipients[i], values[i]),\"error\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8012:8033   */\n      mstore\n        /* \"#utility.yul\":8069:8070   */\n      0x05\n        /* \"#utility.yul\":8049:8067   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8042:8071   */\n      mstore\n      shl(0xd9, 0x32b93937b9)\n        /* \"#utility.yul\":8087:8105   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8080:8115   */\n      mstore\n        /* \"#utility.yul\":8132:8150   */\n      0x64\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8275:8348  require(token.transferFrom(msg.sender, recipients[i], values[i]),\"error\") */\n      tag_140\n        /* \"#utility.yul\":7828:8156   */\n      jump\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8275:8348  require(token.transferFrom(msg.sender, recipients[i], values[i]),\"error\") */\n    tag_166:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8252:8255  i++ */\n      dup1\n      tag_169\n      dup2\n      tag_138\n      jump\t// in\n    tag_169:\n      swap2\n      pop\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8213:8363  for (uint256 i = 0; i < values.length; i++) {... */\n      jump(tag_153)\n    tag_154:\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7500:8667  function TOKENmultisender(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8013:8661  if (... */\n    tag_148:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8412:8422  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8396:8423  authorizedusers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8396:8411  authorizedusers */\n      0x04\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8396:8423  authorizedusers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8396:8477  authorizedusers[msg.sender] &&... */\n      dup1\n      iszero\n      tag_171\n      jumpi\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8469:8477  quantity */\n      sload(0x06)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8439:8466  token.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8455:8465  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8439:8466  token.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1146:1197   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8439:8454  token.balanceOf */\n      dup6\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1119:1137   */\n      0x24\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8439:8466  token.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_175:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8439:8477  token.balanceOf(msg.sender) > quantity */\n      gt\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8396:8477  authorizedusers[msg.sender] &&... */\n    tag_171:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8379:8661  if (... */\n      iszero\n      tag_176\n      jumpi\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8507:8516  uint256 i */\n      0x00\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8502:8651  for (uint256 i = 0; i < values.length; i++) {... */\n    tag_177:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8526:8532  values */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8526:8539  values.length */\n      mload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8522:8523  i */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8522:8539  i < values.length */\n      lt\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8502:8651  for (uint256 i = 0; i < values.length; i++) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8572:8577  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8572:8590  token.transferFrom */\n      and\n      0x23b872dd\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8591:8601  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8603:8613  recipients */\n      dup6\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8614:8615  i */\n      dup5\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8603:8616  recipients[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_181\n      jumpi\n      tag_181\n      tag_132\n      jump\t// in\n    tag_181:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8618:8624  values */\n      dup6\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8625:8626  i */\n      dup6\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8618:8627  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_183\n      jumpi\n      tag_183\n      tag_132\n      jump\t// in\n    tag_183:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8572:8628  token.transferFrom(msg.sender, recipients[i], values[i]) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup7\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7456:7471   */\n      swap4\n      dup5\n      and\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8572:8628  token.transferFrom(msg.sender, recipients[i], values[i]) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7438:7472   */\n      mstore\n        /* \"#utility.yul\":7508:7523   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7488:7506   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7481:7524   */\n      mstore\n        /* \"#utility.yul\":7540:7558   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7533:7567   */\n      mstore\n        /* \"#utility.yul\":7373:7391   */\n      0x64\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8572:8628  token.transferFrom(msg.sender, recipients[i], values[i]) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_187:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8564:8636  require(token.transferFrom(msg.sender, recipients[i], values[i]),\"erro\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n        /* \"#utility.yul\":8363:8365   */\n      0x20\n        /* \"#utility.yul\":8345:8366   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8402:8403   */\n      0x04\n        /* \"#utility.yul\":8382:8400   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8375:8404   */\n      mstore\n      shl(0xe0, 0x6572726f)\n        /* \"#utility.yul\":8435:8437   */\n      0x40\n        /* \"#utility.yul\":8420:8438   */\n      dup3\n      add\n        /* \"#utility.yul\":8413:8447   */\n      mstore\n        /* \"#utility.yul\":8479:8481   */\n      0x60\n        /* \"#utility.yul\":8464:8482   */\n      add\n      swap1\n        /* \"#utility.yul\":8161:8488   */\n      jump\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8564:8636  require(token.transferFrom(msg.sender, recipients[i], values[i]),\"erro\") */\n    tag_188:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8541:8544  i++ */\n      dup1\n      tag_191\n      dup2\n      tag_138\n      jump\t// in\n    tag_191:\n      swap2\n      pop\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8502:8651  for (uint256 i = 0; i < values.length; i++) {... */\n      jump(tag_177)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":8379:8661  if (... */\n    tag_176:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7500:8667  function TOKENmultisender(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6849:7491  function BNBmultisender(address[] memory recipients, uint256[] memory values) external payable {... */\n    tag_89:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6974:6984  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6958:6985  authorizedusers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6958:6973  authorizedusers */\n      0x04\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6958:6985  authorizedusers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6957:6985  !authorizedusers[msg.sender] */\n      iszero\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6957:7034  !authorizedusers[msg.sender] && tokenaddress.balanceOf(msg.sender) < quantity */\n      dup1\n      iszero\n      tag_195\n      jumpi\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7026:7034  quantity */\n      sload(0x06)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6989:7001  tokenaddress */\n      sload(0x05)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6989:7023  tokenaddress.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7012:7022  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6989:7023  tokenaddress.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1146:1197   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6989:7001  tokenaddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6989:7011  tokenaddress.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1119:1137   */\n      0x24\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6989:7023  tokenaddress.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_199:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6989:7034  tokenaddress.balanceOf(msg.sender) < quantity */\n      lt\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6957:7034  !authorizedusers[msg.sender] && tokenaddress.balanceOf(msg.sender) < quantity */\n    tag_195:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6954:7227  if(!authorizedusers[msg.sender] && tokenaddress.balanceOf(msg.sender) < quantity ) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7073:7076  fee */\n      sload(0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7060:7069  msg.value */\n      callvalue\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7060:7076  msg.value >= fee */\n      lt\n      iszero\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7051:7140  require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Multi bulk function\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8695:8697   */\n      0x20\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7051:7140  require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Multi bulk function\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8677:8698   */\n      mstore\n        /* \"#utility.yul\":8734:8736   */\n      0x3b\n        /* \"#utility.yul\":8714:8732   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8707:8737   */\n      mstore\n        /* \"#utility.yul\":8773:8807   */\n      0x596f75206861766520746f207061792066656520746f2075736520536e697065\n        /* \"#utility.yul\":8753:8771   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8746:8808   */\n      mstore\n        /* \"#utility.yul\":8844:8873   */\n      0x46696e616e6365204d756c74692062756c6b2066756e6374696f6e0000000000\n        /* \"#utility.yul\":8824:8842   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8817:8874   */\n      mstore\n        /* \"#utility.yul\":8891:8910   */\n      0x84\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7051:7140  require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Multi bulk function\") */\n      tag_140\n        /* \"#utility.yul\":8493:8916   */\n      jump\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7051:7140  require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Multi bulk function\") */\n    tag_201:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7168:7171  fee */\n      sload(0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7154:7164  feeamounts */\n      0x03\n      0x00\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7154:7171  feeamounts += fee */\n      dup3\n      dup3\n      sload\n      tag_204\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_204:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7193:7201  receiver */\n      sload(0x02)\n      0x01\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7212:7215  fee */\n      sload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7185:7216  payable(receiver).transfer(fee) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7193:7201  receiver */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7185:7216  payable(receiver).transfer(fee) */\n      dup2\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7212:7215  fee */\n      swap1\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7193:7201  receiver */\n      0x00\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7185:7216  payable(receiver).transfer(fee) */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7193:7201  receiver */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7185:7216  payable(receiver).transfer(fee) */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7212:7215  fee */\n      dup6\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7193:7201  receiver */\n      dup9\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7185:7216  payable(receiver).transfer(fee) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":6954:7227  if(!authorizedusers[msg.sender] && tokenaddress.balanceOf(msg.sender) < quantity ) {... */\n    tag_200:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7241:7250  uint256 i */\n      0x00\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7236:7350  for (uint256 i = 0; i < recipients.length; i++){... */\n    tag_207:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7260:7270  recipients */\n      dup3\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7260:7277  recipients.length */\n      mload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7256:7257  i */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7256:7277  i < recipients.length */\n      lt\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7236:7350  for (uint256 i = 0; i < recipients.length; i++){... */\n      iszero\n      tag_208\n      jumpi\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7305:7315  recipients */\n      dup3\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7316:7317  i */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7305:7318  recipients[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_211\n      jumpi\n      tag_211\n      tag_132\n      jump\t// in\n    tag_211:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7297:7328  payable(recipients[i]).transfer */\n      and\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7297:7339  payable(recipients[i]).transfer(values[i]) */\n      0x08fc\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7329:7335  values */\n      dup4\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7336:7337  i */\n      dup4\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7329:7338  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_213\n      jumpi\n      tag_213\n      tag_132\n      jump\t// in\n    tag_213:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7297:7339  payable(recipients[i]).transfer(values[i]) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_215:\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7279:7282  i++ */\n      dup1\n      tag_216\n      dup2\n      tag_138\n      jump\t// in\n    tag_216:\n      swap2\n      pop\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7236:7350  for (uint256 i = 0; i < recipients.length; i++){... */\n      jump(tag_207)\n    tag_208:\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7382:7403  address(this).balance */\n      selfbalance\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7422:7433  balance > 0 */\n      dup1\n      iszero\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7418:7484  if (balance > 0)... */\n      tag_176\n      jumpi\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7447:7484  payable(msg.sender).transfer(balance) */\n      mload(0x40)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7455:7465  msg.sender */\n      caller\n      swap1\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7447:7484  payable(msg.sender).transfer(balance) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7476:7483  balance */\n      dup4\n      swap1\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7447:7484  payable(msg.sender).transfer(balance) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7476:7483  balance */\n      dup6\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7455:7465  msg.sender */\n      dup9\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":7447:7484  payable(msg.sender).transfer(balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2963:3161  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_93:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      tag_221\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1994  _checkOwner */\n      tag_106\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      jump\t// in\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3051:3073  newOwner != address(0) */\n      dup2\n      and\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3043:3116  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9123:9125   */\n      0x20\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3043:3116  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9105:9126   */\n      mstore\n        /* \"#utility.yul\":9162:9164   */\n      0x26\n        /* \"#utility.yul\":9142:9160   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9135:9165   */\n      mstore\n        /* \"#utility.yul\":9201:9235   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9181:9199   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9174:9236   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":9252:9270   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9245:9281   */\n      mstore\n        /* \"#utility.yul\":9298:9317   */\n      0x84\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3043:3116  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_140\n        /* \"#utility.yul\":8921:9323   */\n      jump\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3043:3116  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_223:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3126:3154  _transferOwnership(newOwner) */\n      tag_116\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3145:3153  newOwner */\n      dup2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3126:3144  _transferOwnership */\n      tag_124\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3126:3154  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9260:9423  function setauthor(address _addr, bool _bool) onlyOwner external {... */\n    tag_103:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      tag_228\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1994  _checkOwner */\n      tag_106\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":1983:1996  _checkOwner() */\n      jump\t// in\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9338:9360  authorizedusers[_addr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9338:9353  authorizedusers */\n      0x04\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9338:9360  authorizedusers[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9335:9417  if(authorizedusers[_addr]) {... */\n      iszero\n      tag_230\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9376:9398  authorizedusers[_addr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9376:9391  authorizedusers */\n      0x04\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9376:9398  authorizedusers[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9376:9406  authorizedusers[_addr] = _bool */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup3\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9335:9417  if(authorizedusers[_addr]) {... */\n    tag_230:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":9260:9423  function setauthor(address _addr, bool _bool) onlyOwner external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2248:2378  function _checkOwner() internal view virtual {... */\n    tag_106:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2136:2143  address */\n      0x00\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2162:2168  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":772:782  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2311:2334  owner() == _msgSender() */\n      eq\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2303:2371  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9530:9532   */\n      0x20\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2303:2371  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9512:9533   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9549:9567   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9542:9572   */\n      mstore\n        /* \"#utility.yul\":9608:9642   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9588:9606   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9581:9643   */\n      mstore\n        /* \"#utility.yul\":9660:9678   */\n      0x64\n      add\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":2303:2371  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_140\n        /* \"#utility.yul\":9328:9684   */\n      jump\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3315:3502  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_124:\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3388:3404  address oldOwner */\n      0x00\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3407:3413  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3423:3440  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3455:3495  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3407:3413  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3455:3495  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3388:3404  address oldOwner */\n      swap1\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3455:3495  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3378:3502  {... */\n      pop\n        /* \"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":3315:3502  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:465   */\n    tag_26:\n        /* \"#utility.yul\":218:224   */\n      0x00\n        /* \"#utility.yul\":226:232   */\n      dup1\n        /* \"#utility.yul\":279:281   */\n      0x40\n        /* \"#utility.yul\":267:276   */\n      dup4\n        /* \"#utility.yul\":258:265   */\n      dup6\n        /* \"#utility.yul\":254:277   */\n      sub\n        /* \"#utility.yul\":250:282   */\n      slt\n        /* \"#utility.yul\":247:299   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":295:296   */\n      0x00\n        /* \"#utility.yul\":292:293   */\n      dup1\n        /* \"#utility.yul\":285:297   */\n      revert\n        /* \"#utility.yul\":247:299   */\n    tag_252:\n        /* \"#utility.yul\":331:340   */\n      dup3\n        /* \"#utility.yul\":318:341   */\n      calldataload\n        /* \"#utility.yul\":308:341   */\n      swap2\n      pop\n        /* \"#utility.yul\":391:393   */\n      0x20\n        /* \"#utility.yul\":380:389   */\n      dup4\n        /* \"#utility.yul\":376:394   */\n      add\n        /* \"#utility.yul\":363:395   */\n      calldataload\n        /* \"#utility.yul\":404:435   */\n      tag_253\n        /* \"#utility.yul\":429:434   */\n      dup2\n        /* \"#utility.yul\":404:435   */\n      tag_240\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":454:459   */\n      dup1\n        /* \"#utility.yul\":444:459   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":150:465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":652:981   */\n    tag_36:\n        /* \"#utility.yul\":734:740   */\n      0x00\n        /* \"#utility.yul\":742:748   */\n      dup1\n        /* \"#utility.yul\":795:797   */\n      0x40\n        /* \"#utility.yul\":783:792   */\n      dup4\n        /* \"#utility.yul\":774:781   */\n      dup6\n        /* \"#utility.yul\":770:793   */\n      sub\n        /* \"#utility.yul\":766:798   */\n      slt\n        /* \"#utility.yul\":763:815   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":811:812   */\n      0x00\n        /* \"#utility.yul\":808:809   */\n      dup1\n        /* \"#utility.yul\":801:813   */\n      revert\n        /* \"#utility.yul\":763:815   */\n    tag_256:\n        /* \"#utility.yul\":850:859   */\n      dup3\n        /* \"#utility.yul\":837:860   */\n      calldataload\n        /* \"#utility.yul\":869:900   */\n      tag_257\n        /* \"#utility.yul\":894:899   */\n      dup2\n        /* \"#utility.yul\":869:900   */\n      tag_240\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":919:924   */\n      swap5\n        /* \"#utility.yul\":971:973   */\n      0x20\n        /* \"#utility.yul\":956:974   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":943:975   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":652:981   */\n      jump\t// out\n        /* \"#utility.yul\":1208:1455   */\n    tag_49:\n        /* \"#utility.yul\":1267:1273   */\n      0x00\n        /* \"#utility.yul\":1320:1322   */\n      0x20\n        /* \"#utility.yul\":1308:1317   */\n      dup3\n        /* \"#utility.yul\":1299:1306   */\n      dup5\n        /* \"#utility.yul\":1295:1318   */\n      sub\n        /* \"#utility.yul\":1291:1323   */\n      slt\n        /* \"#utility.yul\":1288:1340   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":1336:1337   */\n      0x00\n        /* \"#utility.yul\":1333:1334   */\n      dup1\n        /* \"#utility.yul\":1326:1338   */\n      revert\n        /* \"#utility.yul\":1288:1340   */\n    tag_260:\n        /* \"#utility.yul\":1375:1384   */\n      dup2\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n        /* \"#utility.yul\":1394:1425   */\n      tag_261\n        /* \"#utility.yul\":1419:1424   */\n      dup2\n        /* \"#utility.yul\":1394:1425   */\n      tag_240\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":1444:1449   */\n      swap4\n        /* \"#utility.yul\":1208:1455   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1860:1987   */\n    tag_241:\n        /* \"#utility.yul\":1921:1931   */\n      0x4e487b71\n        /* \"#utility.yul\":1916:1919   */\n      0xe0\n        /* \"#utility.yul\":1912:1932   */\n      shl\n        /* \"#utility.yul\":1909:1910   */\n      0x00\n        /* \"#utility.yul\":1902:1933   */\n      mstore\n        /* \"#utility.yul\":1952:1956   */\n      0x41\n        /* \"#utility.yul\":1949:1950   */\n      0x04\n        /* \"#utility.yul\":1942:1957   */\n      mstore\n        /* \"#utility.yul\":1976:1980   */\n      0x24\n        /* \"#utility.yul\":1973:1974   */\n      0x00\n        /* \"#utility.yul\":1966:1981   */\n      revert\n        /* \"#utility.yul\":1992:2267   */\n    tag_242:\n        /* \"#utility.yul\":2063:2065   */\n      0x40\n        /* \"#utility.yul\":2057:2066   */\n      mload\n        /* \"#utility.yul\":2128:2130   */\n      0x1f\n        /* \"#utility.yul\":2109:2122   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2105:2132   */\n      and\n        /* \"#utility.yul\":2093:2133   */\n      dup2\n      add\n        /* \"#utility.yul\":2163:2181   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2148:2182   */\n      dup2\n      gt\n        /* \"#utility.yul\":2184:2206   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2145:2207   */\n      or\n        /* \"#utility.yul\":2142:2230   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":2210:2228   */\n      tag_267\n      tag_241\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2246:2248   */\n      0x40\n        /* \"#utility.yul\":2239:2261   */\n      mstore\n        /* \"#utility.yul\":1992:2267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2272:2455   */\n    tag_243:\n        /* \"#utility.yul\":2332:2336   */\n      0x00\n        /* \"#utility.yul\":2365:2383   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2357:2363   */\n      dup3\n        /* \"#utility.yul\":2354:2384   */\n      gt\n        /* \"#utility.yul\":2351:2407   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":2387:2405   */\n      tag_270\n      tag_241\n      jump\t// in\n    tag_270:\n      pop\n        /* \"#utility.yul\":2432:2433   */\n      0x05\n        /* \"#utility.yul\":2428:2442   */\n      shl\n        /* \"#utility.yul\":2444:2448   */\n      0x20\n        /* \"#utility.yul\":2424:2449   */\n      add\n      swap1\n        /* \"#utility.yul\":2272:2455   */\n      jump\t// out\n        /* \"#utility.yul\":2460:3197   */\n    tag_244:\n        /* \"#utility.yul\":2514:2519   */\n      0x00\n        /* \"#utility.yul\":2567:2570   */\n      dup3\n        /* \"#utility.yul\":2560:2564   */\n      0x1f\n        /* \"#utility.yul\":2552:2558   */\n      dup4\n        /* \"#utility.yul\":2548:2565   */\n      add\n        /* \"#utility.yul\":2544:2571   */\n      slt\n        /* \"#utility.yul\":2534:2589   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":2585:2586   */\n      0x00\n        /* \"#utility.yul\":2582:2583   */\n      dup1\n        /* \"#utility.yul\":2575:2587   */\n      revert\n        /* \"#utility.yul\":2534:2589   */\n    tag_272:\n        /* \"#utility.yul\":2621:2627   */\n      dup2\n        /* \"#utility.yul\":2608:2628   */\n      calldataload\n        /* \"#utility.yul\":2647:2651   */\n      0x20\n        /* \"#utility.yul\":2671:2731   */\n      tag_273\n        /* \"#utility.yul\":2687:2730   */\n      tag_274\n        /* \"#utility.yul\":2727:2729   */\n      dup4\n        /* \"#utility.yul\":2687:2730   */\n      tag_243\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2671:2731   */\n      tag_242\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2765:2780   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":2851:2852   */\n      0x05\n        /* \"#utility.yul\":2847:2857   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":2835:2858   */\n      dup5\n      add\n        /* \"#utility.yul\":2831:2863   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":2796:2808   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2875:2890   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":2872:2907   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2903:2904   */\n      0x00\n        /* \"#utility.yul\":2900:2901   */\n      dup1\n        /* \"#utility.yul\":2893:2905   */\n      revert\n        /* \"#utility.yul\":2872:2907   */\n    tag_275:\n        /* \"#utility.yul\":2939:2941   */\n      dup3\n        /* \"#utility.yul\":2931:2937   */\n      dup7\n        /* \"#utility.yul\":2927:2942   */\n      add\n        /* \"#utility.yul\":2951:3168   */\n    tag_276:\n        /* \"#utility.yul\":2967:2973   */\n      dup5\n        /* \"#utility.yul\":2962:2965   */\n      dup2\n        /* \"#utility.yul\":2959:2974   */\n      lt\n        /* \"#utility.yul\":2951:3168   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":3047:3050   */\n      dup1\n        /* \"#utility.yul\":3034:3051   */\n      calldataload\n        /* \"#utility.yul\":3064:3095   */\n      tag_279\n        /* \"#utility.yul\":3089:3094   */\n      dup2\n        /* \"#utility.yul\":3064:3095   */\n      tag_240\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":3108:3126   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3146:3158   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":2984:2996   */\n      dup4\n      add\n        /* \"#utility.yul\":2951:3168   */\n      jump(tag_276)\n    tag_278:\n      pop\n        /* \"#utility.yul\":3186:3191   */\n      swap7\n        /* \"#utility.yul\":2460:3197   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3202:3864   */\n    tag_245:\n        /* \"#utility.yul\":3256:3261   */\n      0x00\n        /* \"#utility.yul\":3309:3312   */\n      dup3\n        /* \"#utility.yul\":3302:3306   */\n      0x1f\n        /* \"#utility.yul\":3294:3300   */\n      dup4\n        /* \"#utility.yul\":3290:3307   */\n      add\n        /* \"#utility.yul\":3286:3313   */\n      slt\n        /* \"#utility.yul\":3276:3331   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":3327:3328   */\n      0x00\n        /* \"#utility.yul\":3324:3325   */\n      dup1\n        /* \"#utility.yul\":3317:3329   */\n      revert\n        /* \"#utility.yul\":3276:3331   */\n    tag_281:\n        /* \"#utility.yul\":3363:3369   */\n      dup2\n        /* \"#utility.yul\":3350:3370   */\n      calldataload\n        /* \"#utility.yul\":3389:3393   */\n      0x20\n        /* \"#utility.yul\":3413:3473   */\n      tag_282\n        /* \"#utility.yul\":3429:3472   */\n      tag_274\n        /* \"#utility.yul\":3469:3471   */\n      dup4\n        /* \"#utility.yul\":3429:3472   */\n      tag_243\n      jump\t// in\n        /* \"#utility.yul\":3413:3473   */\n    tag_282:\n        /* \"#utility.yul\":3507:3522   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":3593:3594   */\n      0x05\n        /* \"#utility.yul\":3589:3599   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":3577:3600   */\n      dup5\n      add\n        /* \"#utility.yul\":3573:3605   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":3538:3550   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3617:3632   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3614:3649   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":3645:3646   */\n      0x00\n        /* \"#utility.yul\":3642:3643   */\n      dup1\n        /* \"#utility.yul\":3635:3647   */\n      revert\n        /* \"#utility.yul\":3614:3649   */\n    tag_284:\n        /* \"#utility.yul\":3681:3683   */\n      dup3\n        /* \"#utility.yul\":3673:3679   */\n      dup7\n        /* \"#utility.yul\":3669:3684   */\n      add\n        /* \"#utility.yul\":3693:3835   */\n    tag_285:\n        /* \"#utility.yul\":3709:3715   */\n      dup5\n        /* \"#utility.yul\":3704:3707   */\n      dup2\n        /* \"#utility.yul\":3701:3716   */\n      lt\n        /* \"#utility.yul\":3693:3835   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":3775:3792   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3763:3793   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3813:3825   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3726:3738   */\n      dup4\n      add\n        /* \"#utility.yul\":3693:3835   */\n      jump(tag_285)\n        /* \"#utility.yul\":3869:4613   */\n    tag_71:\n        /* \"#utility.yul\":4010:4016   */\n      0x00\n        /* \"#utility.yul\":4018:4024   */\n      dup1\n        /* \"#utility.yul\":4026:4032   */\n      0x00\n        /* \"#utility.yul\":4079:4081   */\n      0x60\n        /* \"#utility.yul\":4067:4076   */\n      dup5\n        /* \"#utility.yul\":4058:4065   */\n      dup7\n        /* \"#utility.yul\":4054:4077   */\n      sub\n        /* \"#utility.yul\":4050:4082   */\n      slt\n        /* \"#utility.yul\":4047:4099   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":4095:4096   */\n      0x00\n        /* \"#utility.yul\":4092:4093   */\n      dup1\n        /* \"#utility.yul\":4085:4097   */\n      revert\n        /* \"#utility.yul\":4047:4099   */\n    tag_289:\n        /* \"#utility.yul\":4134:4143   */\n      dup4\n        /* \"#utility.yul\":4121:4144   */\n      calldataload\n        /* \"#utility.yul\":4153:4184   */\n      tag_290\n        /* \"#utility.yul\":4178:4183   */\n      dup2\n        /* \"#utility.yul\":4153:4184   */\n      tag_240\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":4203:4208   */\n      swap3\n      pop\n        /* \"#utility.yul\":4259:4261   */\n      0x20\n        /* \"#utility.yul\":4244:4262   */\n      dup5\n      add\n        /* \"#utility.yul\":4231:4263   */\n      calldataload\n        /* \"#utility.yul\":4282:4300   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4312:4326   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4309:4343   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":4339:4340   */\n      0x00\n        /* \"#utility.yul\":4336:4337   */\n      dup1\n        /* \"#utility.yul\":4329:4341   */\n      revert\n        /* \"#utility.yul\":4309:4343   */\n    tag_291:\n        /* \"#utility.yul\":4362:4423   */\n      tag_292\n        /* \"#utility.yul\":4415:4422   */\n      dup8\n        /* \"#utility.yul\":4406:4412   */\n      dup4\n        /* \"#utility.yul\":4395:4404   */\n      dup9\n        /* \"#utility.yul\":4391:4413   */\n      add\n        /* \"#utility.yul\":4362:4423   */\n      tag_244\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":4352:4423   */\n      swap4\n      pop\n        /* \"#utility.yul\":4476:4478   */\n      0x40\n        /* \"#utility.yul\":4465:4474   */\n      dup7\n        /* \"#utility.yul\":4461:4479   */\n      add\n        /* \"#utility.yul\":4448:4480   */\n      calldataload\n        /* \"#utility.yul\":4432:4480   */\n      swap2\n      pop\n        /* \"#utility.yul\":4505:4507   */\n      dup1\n        /* \"#utility.yul\":4495:4503   */\n      dup3\n        /* \"#utility.yul\":4492:4508   */\n      gt\n        /* \"#utility.yul\":4489:4525   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":4521:4522   */\n      0x00\n        /* \"#utility.yul\":4518:4519   */\n      dup1\n        /* \"#utility.yul\":4511:4523   */\n      revert\n        /* \"#utility.yul\":4489:4525   */\n    tag_293:\n      pop\n        /* \"#utility.yul\":4544:4607   */\n      tag_294\n        /* \"#utility.yul\":4599:4606   */\n      dup7\n        /* \"#utility.yul\":4588:4596   */\n      dup3\n        /* \"#utility.yul\":4577:4586   */\n      dup8\n        /* \"#utility.yul\":4573:4597   */\n      add\n        /* \"#utility.yul\":4544:4607   */\n      tag_245\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4534:4607   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3869:4613   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4618:5213   */\n    tag_88:\n        /* \"#utility.yul\":4736:4742   */\n      0x00\n        /* \"#utility.yul\":4744:4750   */\n      dup1\n        /* \"#utility.yul\":4797:4799   */\n      0x40\n        /* \"#utility.yul\":4785:4794   */\n      dup4\n        /* \"#utility.yul\":4776:4783   */\n      dup6\n        /* \"#utility.yul\":4772:4795   */\n      sub\n        /* \"#utility.yul\":4768:4800   */\n      slt\n        /* \"#utility.yul\":4765:4817   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":4813:4814   */\n      0x00\n        /* \"#utility.yul\":4810:4811   */\n      dup1\n        /* \"#utility.yul\":4803:4815   */\n      revert\n        /* \"#utility.yul\":4765:4817   */\n    tag_296:\n        /* \"#utility.yul\":4853:4862   */\n      dup3\n        /* \"#utility.yul\":4840:4863   */\n      calldataload\n        /* \"#utility.yul\":4882:4900   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4923:4925   */\n      dup1\n        /* \"#utility.yul\":4915:4921   */\n      dup3\n        /* \"#utility.yul\":4912:4926   */\n      gt\n        /* \"#utility.yul\":4909:4943   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":4939:4940   */\n      0x00\n        /* \"#utility.yul\":4936:4937   */\n      dup1\n        /* \"#utility.yul\":4929:4941   */\n      revert\n        /* \"#utility.yul\":4909:4943   */\n    tag_297:\n        /* \"#utility.yul\":4962:5023   */\n      tag_298\n        /* \"#utility.yul\":5015:5022   */\n      dup7\n        /* \"#utility.yul\":5006:5012   */\n      dup4\n        /* \"#utility.yul\":4995:5004   */\n      dup8\n        /* \"#utility.yul\":4991:5013   */\n      add\n        /* \"#utility.yul\":4962:5023   */\n      tag_244\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4952:5023   */\n      swap4\n      pop\n        /* \"#utility.yul\":5076:5078   */\n      0x20\n        /* \"#utility.yul\":5065:5074   */\n      dup6\n        /* \"#utility.yul\":5061:5079   */\n      add\n        /* \"#utility.yul\":5048:5080   */\n      calldataload\n        /* \"#utility.yul\":5032:5080   */\n      swap2\n      pop\n        /* \"#utility.yul\":5105:5107   */\n      dup1\n        /* \"#utility.yul\":5095:5103   */\n      dup3\n        /* \"#utility.yul\":5092:5108   */\n      gt\n        /* \"#utility.yul\":5089:5125   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":5121:5122   */\n      0x00\n        /* \"#utility.yul\":5118:5119   */\n      dup1\n        /* \"#utility.yul\":5111:5123   */\n      revert\n        /* \"#utility.yul\":5089:5125   */\n    tag_299:\n      pop\n        /* \"#utility.yul\":5144:5207   */\n      tag_300\n        /* \"#utility.yul\":5199:5206   */\n      dup6\n        /* \"#utility.yul\":5188:5196   */\n      dup3\n        /* \"#utility.yul\":5177:5186   */\n      dup7\n        /* \"#utility.yul\":5173:5197   */\n      add\n        /* \"#utility.yul\":5144:5207   */\n      tag_245\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":5134:5207   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4618:5213   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5442:5560   */\n    tag_246:\n        /* \"#utility.yul\":5528:5533   */\n      dup1\n        /* \"#utility.yul\":5521:5534   */\n      iszero\n        /* \"#utility.yul\":5514:5535   */\n      iszero\n        /* \"#utility.yul\":5507:5512   */\n      dup2\n        /* \"#utility.yul\":5504:5536   */\n      eq\n        /* \"#utility.yul\":5494:5554   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":5550:5551   */\n      0x00\n        /* \"#utility.yul\":5547:5548   */\n      dup1\n        /* \"#utility.yul\":5540:5552   */\n      revert\n        /* \"#utility.yul\":5565:5947   */\n    tag_102:\n        /* \"#utility.yul\":5630:5636   */\n      0x00\n        /* \"#utility.yul\":5638:5644   */\n      dup1\n        /* \"#utility.yul\":5691:5693   */\n      0x40\n        /* \"#utility.yul\":5679:5688   */\n      dup4\n        /* \"#utility.yul\":5670:5677   */\n      dup6\n        /* \"#utility.yul\":5666:5689   */\n      sub\n        /* \"#utility.yul\":5662:5694   */\n      slt\n        /* \"#utility.yul\":5659:5711   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":5707:5708   */\n      0x00\n        /* \"#utility.yul\":5704:5705   */\n      dup1\n        /* \"#utility.yul\":5697:5709   */\n      revert\n        /* \"#utility.yul\":5659:5711   */\n    tag_305:\n        /* \"#utility.yul\":5746:5755   */\n      dup3\n        /* \"#utility.yul\":5733:5756   */\n      calldataload\n        /* \"#utility.yul\":5765:5796   */\n      tag_306\n        /* \"#utility.yul\":5790:5795   */\n      dup2\n        /* \"#utility.yul\":5765:5796   */\n      tag_240\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":5815:5820   */\n      swap2\n      pop\n        /* \"#utility.yul\":5872:5874   */\n      0x20\n        /* \"#utility.yul\":5857:5875   */\n      dup4\n      add\n        /* \"#utility.yul\":5844:5876   */\n      calldataload\n        /* \"#utility.yul\":5885:5915   */\n      tag_253\n        /* \"#utility.yul\":5844:5876   */\n      dup2\n        /* \"#utility.yul\":5885:5915   */\n      tag_246\n      jump\t// in\n        /* \"#utility.yul\":5952:6079   */\n    tag_132:\n        /* \"#utility.yul\":6013:6023   */\n      0x4e487b71\n        /* \"#utility.yul\":6008:6011   */\n      0xe0\n        /* \"#utility.yul\":6004:6024   */\n      shl\n        /* \"#utility.yul\":6001:6002   */\n      0x00\n        /* \"#utility.yul\":5994:6025   */\n      mstore\n        /* \"#utility.yul\":6044:6048   */\n      0x32\n        /* \"#utility.yul\":6041:6042   */\n      0x04\n        /* \"#utility.yul\":6034:6049   */\n      mstore\n        /* \"#utility.yul\":6068:6072   */\n      0x24\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6058:6073   */\n      revert\n        /* \"#utility.yul\":6084:6211   */\n    tag_247:\n        /* \"#utility.yul\":6145:6155   */\n      0x4e487b71\n        /* \"#utility.yul\":6140:6143   */\n      0xe0\n        /* \"#utility.yul\":6136:6156   */\n      shl\n        /* \"#utility.yul\":6133:6134   */\n      0x00\n        /* \"#utility.yul\":6126:6157   */\n      mstore\n        /* \"#utility.yul\":6176:6180   */\n      0x11\n        /* \"#utility.yul\":6173:6174   */\n      0x04\n        /* \"#utility.yul\":6166:6181   */\n      mstore\n        /* \"#utility.yul\":6200:6204   */\n      0x24\n        /* \"#utility.yul\":6197:6198   */\n      0x00\n        /* \"#utility.yul\":6190:6205   */\n      revert\n        /* \"#utility.yul\":6216:6384   */\n    tag_134:\n        /* \"#utility.yul\":6256:6263   */\n      0x00\n        /* \"#utility.yul\":6322:6323   */\n      dup2\n        /* \"#utility.yul\":6318:6319   */\n      0x00\n        /* \"#utility.yul\":6314:6320   */\n      not\n        /* \"#utility.yul\":6310:6324   */\n      div\n        /* \"#utility.yul\":6307:6308   */\n      dup4\n        /* \"#utility.yul\":6304:6325   */\n      gt\n        /* \"#utility.yul\":6299:6300   */\n      dup3\n        /* \"#utility.yul\":6292:6301   */\n      iszero\n        /* \"#utility.yul\":6285:6302   */\n      iszero\n        /* \"#utility.yul\":6281:6326   */\n      and\n        /* \"#utility.yul\":6278:6349   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":6329:6347   */\n      tag_312\n      tag_247\n      jump\t// in\n    tag_312:\n      pop\n        /* \"#utility.yul\":6369:6378   */\n      mul\n      swap1\n        /* \"#utility.yul\":6216:6384   */\n      jump\t// out\n        /* \"#utility.yul\":6389:6524   */\n    tag_138:\n        /* \"#utility.yul\":6428:6431   */\n      0x00\n        /* \"#utility.yul\":6449:6466   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6446:6489   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":6469:6487   */\n      tag_315\n      tag_247\n      jump\t// in\n    tag_315:\n      pop\n        /* \"#utility.yul\":6516:6517   */\n      0x01\n        /* \"#utility.yul\":6505:6518   */\n      add\n      swap1\n        /* \"#utility.yul\":6389:6524   */\n      jump\t// out\n        /* \"#utility.yul\":6876:7060   */\n    tag_147:\n        /* \"#utility.yul\":6946:6952   */\n      0x00\n        /* \"#utility.yul\":6999:7001   */\n      0x20\n        /* \"#utility.yul\":6987:6996   */\n      dup3\n        /* \"#utility.yul\":6978:6985   */\n      dup5\n        /* \"#utility.yul\":6974:6997   */\n      sub\n        /* \"#utility.yul\":6970:7002   */\n      slt\n        /* \"#utility.yul\":6967:7019   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":7015:7016   */\n      0x00\n        /* \"#utility.yul\":7012:7013   */\n      dup1\n        /* \"#utility.yul\":7005:7017   */\n      revert\n        /* \"#utility.yul\":6967:7019   */\n    tag_318:\n      pop\n        /* \"#utility.yul\":7038:7054   */\n      mload\n      swap2\n        /* \"#utility.yul\":6876:7060   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7065:7193   */\n    tag_150:\n        /* \"#utility.yul\":7105:7108   */\n      0x00\n        /* \"#utility.yul\":7136:7137   */\n      dup3\n        /* \"#utility.yul\":7132:7138   */\n      not\n        /* \"#utility.yul\":7129:7130   */\n      dup3\n        /* \"#utility.yul\":7126:7139   */\n      gt\n        /* \"#utility.yul\":7123:7162   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":7142:7160   */\n      tag_321\n      tag_247\n      jump\t// in\n    tag_321:\n      pop\n        /* \"#utility.yul\":7178:7187   */\n      add\n      swap1\n        /* \"#utility.yul\":7065:7193   */\n      jump\t// out\n        /* \"#utility.yul\":7578:7823   */\n    tag_165:\n        /* \"#utility.yul\":7645:7651   */\n      0x00\n        /* \"#utility.yul\":7698:7700   */\n      0x20\n        /* \"#utility.yul\":7686:7695   */\n      dup3\n        /* \"#utility.yul\":7677:7684   */\n      dup5\n        /* \"#utility.yul\":7673:7696   */\n      sub\n        /* \"#utility.yul\":7669:7701   */\n      slt\n        /* \"#utility.yul\":7666:7718   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":7714:7715   */\n      0x00\n        /* \"#utility.yul\":7711:7712   */\n      dup1\n        /* \"#utility.yul\":7704:7716   */\n      revert\n        /* \"#utility.yul\":7666:7718   */\n    tag_324:\n        /* \"#utility.yul\":7746:7755   */\n      dup2\n        /* \"#utility.yul\":7740:7756   */\n      mload\n        /* \"#utility.yul\":7765:7793   */\n      tag_261\n        /* \"#utility.yul\":7787:7792   */\n      dup2\n        /* \"#utility.yul\":7765:7793   */\n      tag_246\n      jump\t// in\n\n    auxdata: 0xa264697066735822122059b649c3f34a6ce372469ab2f9b6f100b4be534931b6309ad3ab5525c6e2fc9764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_246": {
									"entryPoint": null,
									"id": 246,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_131": {
									"entryPoint": 75,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_60": {
									"entryPoint": null,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x4B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH6 0x5AF3107A4000 PUSH1 0x1 SSTORE PUSH2 0x9B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xFE5 DUP1 PUSH2 0xAA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C8B9E7B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDDCA3F43 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xE3CEC849 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xF7260D3E EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xFB520AF2 EQ PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9C8B9E7B EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x9CBD3433 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xA4DF0256 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xB810C636 EQ PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FEFF76D GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x3FEFF76D EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x44B6209D EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x4B4FB1B0 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x126CCD94 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x17FC45E2 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x2FC75EB0 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2D JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x3B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1AE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0xC89 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x424 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x146 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0xC89 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1AE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0xECF JUMP JUMPDEST PUSH2 0xB1C JUMP JUMPDEST PUSH2 0x361 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x390 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x3BE PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x3 SLOAD ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH2 0x400 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x42C PUSH2 0xB6E JUMP JUMPDEST PUSH2 0x3F6 PUSH1 0x0 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x49E JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x454 JUMPI PUSH2 0x454 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0xF29 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x481 JUMPI PUSH2 0x481 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x496 DUP2 PUSH2 0xF48 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x439 JUMP JUMPDEST POP DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x4EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x696E76616C696420696E7075742073697A65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x572 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x1 SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x58B SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6DE JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5FB JUMPI PUSH2 0x5FB PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x615 JUMPI PUSH2 0x615 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x674 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x698 SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x32B93937B9 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E1 JUMP JUMPDEST DUP1 PUSH2 0x6D6 DUP2 PUSH2 0xF48 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5D0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x76B JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x745 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x769 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6DE JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x79E JUMPI PUSH2 0x79E PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x7B8 JUMPI PUSH2 0x7B8 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x817 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83B SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E1 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x6572726F PUSH1 0xE0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x87A DUP2 PUSH2 0xF48 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x773 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x913 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x911 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x9E7 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x990 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520746F207061792066656520746F2075736520536E697065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x46696E616E6365204D756C74692062756C6B2066756E6374696F6E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xA71 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xA05 JUMPI PUSH2 0xA05 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA2B JUMPI PUSH2 0xA2B PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH2 0xA69 DUP2 PUSH2 0xF48 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9EA JUMP JUMPDEST POP SELFBALANCE DUP1 ISZERO PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0xAAE PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x3F4 DUP2 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0xB24 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB6A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xC52 DUP2 PUSH2 0xC18 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xC7B DUP2 PUSH2 0xC18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCA6 DUP2 PUSH2 0xC18 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCEC JUMPI PUSH2 0xCEC PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD0E JUMPI PUSH2 0xD0E PUSH2 0xCAD JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD3E PUSH2 0xD39 DUP4 PUSH2 0xCF4 JUMP JUMPDEST PUSH2 0xCC3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD81 JUMPI DUP1 CALLDATALOAD PUSH2 0xD74 DUP2 PUSH2 0xC18 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD61 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xDAD PUSH2 0xD39 DUP4 PUSH2 0xCF4 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xDCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD81 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE07 DUP2 PUSH2 0xC18 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE30 DUP8 DUP4 DUP9 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE53 DUP7 DUP3 DUP8 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE94 DUP7 DUP4 DUP8 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB7 DUP6 DUP3 DUP7 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xEED DUP2 PUSH2 0xC18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xC52 DUP2 PUSH2 0xEC1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF43 JUMPI PUSH2 0xF43 PUSH2 0xF13 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xF5A JUMPI PUSH2 0xF5A PUSH2 0xF13 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF8D JUMPI PUSH2 0xF8D PUSH2 0xF13 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xCA6 DUP2 PUSH2 0xEC1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xB6 0x49 0xC3 RETURN 0x4A PUSH13 0xE372469AB2F9B6F100B4BE5349 BALANCE 0xB6 ADDRESS SWAP11 0xD3 0xAB SSTORE 0x25 0xC6 0xE2 0xFC SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "6419:3434:0:-:0;;;6757:86;;;;;;;;;-1:-1:-1;1825:32:0;772:10;1825:18;:32::i;:::-;2136:7;2162:6;6781:8;:27;;-1:-1:-1;;;;;;6781:27:0;-1:-1:-1;;;;;2162:6:0;;;6781:27;;;;;;6824:12;-1:-1:-1;6818:18:0;6419:3434;;3315:187;3388:16;3407:6;;-1:-1:-1;;;;;3423:17:0;;;-1:-1:-1;;;;;;3423:17:0;;;;;;3455:40;;3407:6;;;;;;;3455:40;;3388:16;3455:40;3378:124;3315:187;:::o;6419:3434::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BNBmultisender_337": {
									"entryPoint": 2183,
									"id": 337,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@SetTokenToholdAndQuantity_575": {
									"entryPoint": 904,
									"id": 575,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@TOKENmultisender_481": {
									"entryPoint": 1078,
									"id": 481,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_74": {
									"entryPoint": 2926,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_131": {
									"entryPoint": 3016,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorizeToUse_535": {
									"entryPoint": 1016,
									"id": 535,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorizedusers_221": {
									"entryPoint": null,
									"id": 221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fee_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeamounts_217": {
									"entryPoint": null,
									"id": 217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getFeeDetails_595": {
									"entryPoint": null,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_60": {
									"entryPoint": null,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@quantity_226": {
									"entryPoint": null,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@readAuthorizedUsers_587": {
									"entryPoint": null,
									"id": 587,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@receiver_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_88": {
									"entryPoint": 1060,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setauthor_556": {
									"entryPoint": 2844,
									"id": 556,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setfeeToUse_502": {
									"entryPoint": 857,
									"id": 502,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@tokenaddress_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_111": {
									"entryPoint": 2726,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_521": {
									"entryPoint": 950,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$209t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_contract$_IERC20_$209t_uint256": {
									"entryPoint": 3165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 3117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$209__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4eb86dec3b7c3e53e01f18b918268fa96a47c207e64bdfa8013fcfdaf9f9175d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51a72d8ab00e24566c4d8b37fa1ea65e289bf26a19a07926e60705c9aca4d230__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e22400be963ec94eedaab5f5e85ec1f604befa6e2a201e4a81aa2d11f465281__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 3316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3859,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3837,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 3777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9686:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:1"
															},
															"nodeType": "YulIf",
															"src": "69:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "283:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "292:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "295:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "285:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "285:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "285:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "258:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "267:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "254:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "279:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "250:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:32:1"
															},
															"nodeType": "YulIf",
															"src": "247:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "308:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "331:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "318:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "308:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "350:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "391:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "376:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "363:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "363:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "354:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "429:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "404:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "404:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "404:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "444:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "454:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "444:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "195:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "206:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "218:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "150:315:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "571:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "581:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "581:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "623:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "634:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "616:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "540:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "551:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "562:4:1",
														"type": ""
													}
												],
												"src": "470:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "753:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "799:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "808:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "811:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "801:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "801:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "801:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "774:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "783:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "795:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "766:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:32:1"
															},
															"nodeType": "YulIf",
															"src": "763:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "824:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "850:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "837:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "828:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "894:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "869:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "869:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "909:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "919:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "933:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "960:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "971:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "943:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "933:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$209t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "711:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "722:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "734:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "742:6:1",
														"type": ""
													}
												],
												"src": "652:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1101:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1111:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1123:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1119:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1111:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1153:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1168:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1184:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1189:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1180:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1180:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1193:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1176:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1176:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1164:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1164:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1146:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1146:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1146:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$209__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1070:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1081:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1092:4:1",
														"type": ""
													}
												],
												"src": "986:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1278:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1324:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1333:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1326:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1326:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1299:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1308:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1295:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1295:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1320:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1291:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1291:32:1"
															},
															"nodeType": "YulIf",
															"src": "1288:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1349:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1353:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1419:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1394:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1394:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1434:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1444:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1434:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1244:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1255:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1267:6:1",
														"type": ""
													}
												],
												"src": "1208:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1555:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1565:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1577:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1588:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1573:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1565:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1607:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1632:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1625:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1625:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1618:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1618:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1600:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1600:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1524:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1535:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1546:4:1",
														"type": ""
													}
												],
												"src": "1460:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1753:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1763:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1775:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1786:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1771:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1771:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1763:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1805:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1836:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1841:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1832:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1832:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1845:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1828:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1828:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1798:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1798:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1722:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1733:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1744:4:1",
														"type": ""
													}
												],
												"src": "1652:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1892:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1909:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1916:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1921:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1912:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1912:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1949:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1952:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1942:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1976:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1966:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1860:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2037:230:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2047:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2063:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2057:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2057:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2047:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2075:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2097:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2113:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2119:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2109:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2109:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2128:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2124:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2124:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2105:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2105:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2079:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2208:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2210:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2210:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2151:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2148:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2187:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2199:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2184:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2145:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:62:1"
															},
															"nodeType": "YulIf",
															"src": "2142:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2250:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2239:22:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2017:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2026:6:1",
														"type": ""
													}
												],
												"src": "1992:275:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2341:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2385:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2387:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2387:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2387:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2357:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2365:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2354:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2354:30:1"
															},
															"nodeType": "YulIf",
															"src": "2351:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2416:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2432:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2435:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2428:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2428:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2424:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2424:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2416:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2321:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2332:4:1",
														"type": ""
													}
												],
												"src": "2272:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2524:673:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2573:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2582:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2585:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2575:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2575:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2575:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2552:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2560:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2548:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2548:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2567:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2544:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2537:35:1"
															},
															"nodeType": "YulIf",
															"src": "2534:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2598:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2621:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2608:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2608:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2602:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2637:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2647:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2641:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2660:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2727:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "2687:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2671:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2664:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2740:16:1",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "2753:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "2744:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2772:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2777:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2765:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2765:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2765:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2789:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2800:3:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2805:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2796:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2796:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2789:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2817:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2839:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2851:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2854:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2847:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2847:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2835:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2835:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2860:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2831:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2821:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2891:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2900:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2903:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2893:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2893:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2893:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2878:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2886:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2875:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2875:15:1"
															},
															"nodeType": "YulIf",
															"src": "2872:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2916:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2931:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2939:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2927:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2920:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3007:161:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3021:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3047:3:1"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "3034:12:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3034:17:1"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "3025:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "3089:5:1"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "3064:24:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3064:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3064:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3115:3:1"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "3120:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3108:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3108:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3108:18:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3139:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3150:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3155:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3146:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3146:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3139:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2962:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2967:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2959:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2975:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2977:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2988:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2993:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2984:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2984:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2977:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2955:3:1",
																"statements": []
															},
															"src": "2951:217:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3177:14:1",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "3186:5:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2498:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2506:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2514:5:1",
														"type": ""
													}
												],
												"src": "2460:737:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:598:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3315:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3324:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3327:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3317:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3317:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3317:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3294:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3302:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3290:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3290:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3309:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3286:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3286:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3279:35:1"
															},
															"nodeType": "YulIf",
															"src": "3276:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3340:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3363:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3350:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3350:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3344:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3379:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3389:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3383:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3402:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3469:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "3429:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3413:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3406:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3482:16:1",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "3495:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "3486:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3514:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3519:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3507:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3507:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3531:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3542:3:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3547:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3538:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3531:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3559:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3581:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3593:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3596:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3589:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3589:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3577:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3577:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3602:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3573:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3573:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3563:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3633:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3642:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3645:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3635:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3635:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3635:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3620:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3628:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3617:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:15:1"
															},
															"nodeType": "YulIf",
															"src": "3614:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3658:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3673:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3681:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3669:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3669:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3662:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3749:86:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3770:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3788:3:1"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3775:12:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3775:17:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3763:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3763:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3763:30:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3806:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3817:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3822:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3813:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3813:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3806:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3704:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3709:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3717:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3719:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3730:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3735:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3726:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3726:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3719:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3697:3:1",
																"statements": []
															},
															"src": "3693:142:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3844:14:1",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "3853:5:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3844:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3240:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3248:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3256:5:1",
														"type": ""
													}
												],
												"src": "3202:662:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4037:576:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4083:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4092:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4095:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4085:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4085:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4085:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4058:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4067:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4054:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4054:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4079:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4050:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4050:32:1"
															},
															"nodeType": "YulIf",
															"src": "4047:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4108:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4134:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4121:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4121:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4112:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4178:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4153:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4153:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4153:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4193:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4203:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4217:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4248:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4259:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4244:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4244:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4231:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4231:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4221:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4272:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4282:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4276:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4327:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4336:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4339:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4329:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4329:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4329:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4315:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4323:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4312:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4312:14:1"
															},
															"nodeType": "YulIf",
															"src": "4309:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4352:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4395:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4406:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4391:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4391:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4415:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4362:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:61:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4352:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4432:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4465:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4476:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4461:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4461:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4448:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4436:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4509:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4518:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4521:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4511:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4511:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4511:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4495:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4505:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4492:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:16:1"
															},
															"nodeType": "YulIf",
															"src": "4489:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4534:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4577:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4588:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4573:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4599:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4544:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4544:63:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4534:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$209t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3987:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3998:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4010:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4018:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4026:6:1",
														"type": ""
													}
												],
												"src": "3869:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4755:458:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4801:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4810:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4813:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4803:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4803:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4803:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4776:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4785:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4772:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4797:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4768:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4768:32:1"
															},
															"nodeType": "YulIf",
															"src": "4765:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4826:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4853:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4840:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4830:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4872:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4882:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4876:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4915:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4923:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4912:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4912:14:1"
															},
															"nodeType": "YulIf",
															"src": "4909:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4952:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4995:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5006:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4991:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4991:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5015:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4962:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4962:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4952:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5032:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5065:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5076:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5061:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5061:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5048:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5048:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5036:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5109:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5118:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5121:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5111:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5111:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5111:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5095:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5105:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5092:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:16:1"
															},
															"nodeType": "YulIf",
															"src": "5089:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5134:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5188:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5173:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5173:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5199:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5144:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5144:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5134:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4713:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4724:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4736:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4744:6:1",
														"type": ""
													}
												],
												"src": "4618:595:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5345:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5357:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5368:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5353:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5345:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5387:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5402:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5418:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5423:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5414:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5414:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5427:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5410:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5410:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5398:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5380:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5304:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5315:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5326:4:1",
														"type": ""
													}
												],
												"src": "5218:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5484:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5538:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5547:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5550:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5540:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5540:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5540:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5507:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5528:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5521:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5521:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5514:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5514:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5504:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5504:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5497:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5497:40:1"
															},
															"nodeType": "YulIf",
															"src": "5494:60:1"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5473:5:1",
														"type": ""
													}
												],
												"src": "5442:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5649:298:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5695:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5704:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5697:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5697:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5697:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5670:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5679:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5666:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5666:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5691:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5662:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5662:32:1"
															},
															"nodeType": "YulIf",
															"src": "5659:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5720:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5746:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5733:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5733:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5724:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5790:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5765:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5765:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5765:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5805:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5815:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5805:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5829:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5861:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5872:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5857:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5844:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5844:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5833:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5907:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5885:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5885:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5885:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5924:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5934:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5924:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5607:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5618:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5630:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5638:6:1",
														"type": ""
													}
												],
												"src": "5565:382:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5984:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6001:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6008:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6013:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6004:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6004:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5994:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5994:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6041:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6044:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6034:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6034:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6068:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6058:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5952:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6116:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6133:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6140:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6145:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6136:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6136:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6126:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6126:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6126:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6173:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6176:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6166:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6166:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6197:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6200:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6190:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6190:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6190:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6084:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6268:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6327:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6329:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6329:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6329:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6299:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6292:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6285:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6285:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6307:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6318:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6314:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6314:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6322:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6310:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6310:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6304:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6304:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6281:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6281:45:1"
															},
															"nodeType": "YulIf",
															"src": "6278:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6358:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6373:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6376:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6369:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6369:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6358:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6247:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6250:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6256:7:1",
														"type": ""
													}
												],
												"src": "6216:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6436:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6467:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6469:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6469:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6469:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6452:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6463:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6459:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6449:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6449:17:1"
															},
															"nodeType": "YulIf",
															"src": "6446:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6498:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6509:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6516:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6505:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6498:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6418:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6428:3:1",
														"type": ""
													}
												],
												"src": "6389:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6703:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6720:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6731:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6713:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6713:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6713:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6765:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6750:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6770:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6743:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6743:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6793:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6804:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6789:18:1"
																	},
																	{
																		"hexValue": "696e76616c696420696e7075742073697a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6809:20:1",
																		"type": "",
																		"value": "invalid input size"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6782:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6782:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6839:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6851:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6862:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6847:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6839:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e22400be963ec94eedaab5f5e85ec1f604befa6e2a201e4a81aa2d11f465281__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6680:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6694:4:1",
														"type": ""
													}
												],
												"src": "6529:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7003:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7012:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7015:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7005:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7005:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7005:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6978:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6987:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6974:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6999:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6970:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:32:1"
															},
															"nodeType": "YulIf",
															"src": "6967:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7028:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7044:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7038:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7038:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7028:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6923:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6934:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6946:6:1",
														"type": ""
													}
												],
												"src": "6876:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7113:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7140:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7142:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7142:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7142:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7129:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7136:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7132:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7132:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7126:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7126:13:1"
															},
															"nodeType": "YulIf",
															"src": "7123:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7171:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7182:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7185:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7178:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7178:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7171:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7096:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7099:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7105:3:1",
														"type": ""
													}
												],
												"src": "7065:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7355:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7365:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7377:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7388:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7373:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7373:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7365:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7400:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7418:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7423:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7414:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7414:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7427:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7410:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7410:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7404:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7445:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7460:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7468:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7456:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7456:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7438:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7438:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7438:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7492:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7503:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7488:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7488:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7512:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7520:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7508:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7508:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7481:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7481:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7481:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7544:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7555:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7540:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7540:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7560:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7533:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7533:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7533:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7308:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7319:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7327:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7335:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7346:4:1",
														"type": ""
													}
												],
												"src": "7198:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7656:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7702:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7711:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7714:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7704:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7704:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7704:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7677:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7686:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7673:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7698:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7669:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7669:32:1"
															},
															"nodeType": "YulIf",
															"src": "7666:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7727:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7746:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7740:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7740:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7731:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7787:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7765:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7765:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7802:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7812:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7802:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7622:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7633:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7645:6:1",
														"type": ""
													}
												],
												"src": "7578:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8002:154:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8019:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8030:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8012:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8012:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8012:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8053:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8064:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8049:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8049:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8069:1:1",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8042:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8042:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8091:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8102:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8087:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8087:18:1"
																	},
																	{
																		"hexValue": "6572726f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8107:7:1",
																		"type": "",
																		"value": "error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8080:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8080:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8124:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8136:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8147:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8132:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8124:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7979:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7993:4:1",
														"type": ""
													}
												],
												"src": "7828:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8335:153:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8352:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8363:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8345:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8345:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8386:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8397:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8382:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8402:1:1",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8375:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8375:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8424:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8435:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8420:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8420:18:1"
																	},
																	{
																		"hexValue": "6572726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8440:6:1",
																		"type": "",
																		"value": "erro"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8413:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8413:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8456:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8468:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8479:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8464:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8464:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8456:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51a72d8ab00e24566c4d8b37fa1ea65e289bf26a19a07926e60705c9aca4d230__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8312:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8326:4:1",
														"type": ""
													}
												],
												"src": "8161:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8667:249:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8684:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8695:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8677:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8677:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8729:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8714:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8734:2:1",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8707:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8707:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8707:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8757:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8768:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8753:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8753:18:1"
																	},
																	{
																		"hexValue": "596f75206861766520746f207061792066656520746f2075736520536e697065",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8773:34:1",
																		"type": "",
																		"value": "You have to pay fee to use Snipe"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8746:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8746:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8746:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8828:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8839:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8824:18:1"
																	},
																	{
																		"hexValue": "46696e616e6365204d756c74692062756c6b2066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8844:29:1",
																		"type": "",
																		"value": "Finance Multi bulk function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8817:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8817:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8883:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8895:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8906:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8891:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8891:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8883:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4eb86dec3b7c3e53e01f18b918268fa96a47c207e64bdfa8013fcfdaf9f9175d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8644:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8658:4:1",
														"type": ""
													}
												],
												"src": "8493:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9095:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9112:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9123:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9105:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9105:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9105:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9146:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9157:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9142:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9142:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9162:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9135:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9135:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9135:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9185:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9196:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9181:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9201:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9174:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9174:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9174:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9256:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9267:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9252:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9252:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9272:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9245:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9245:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9245:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9290:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9302:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9313:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9298:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9298:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9290:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9072:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9086:4:1",
														"type": ""
													}
												],
												"src": "8921:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9502:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9519:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9530:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9512:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9512:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9512:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9553:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9564:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9549:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9549:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9569:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9542:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9542:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9542:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9592:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9603:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9588:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9588:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9608:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9581:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9581:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9581:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9652:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9664:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9675:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9660:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9660:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9652:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9479:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9493:4:1",
														"type": ""
													}
												],
												"src": "9328:356:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$209t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$209__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$209t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_8e22400be963ec94eedaab5f5e85ec1f604befa6e2a201e4a81aa2d11f465281__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"invalid input size\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"error\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_51a72d8ab00e24566c4d8b37fa1ea65e289bf26a19a07926e60705c9aca4d230__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 4)\n        mstore(add(headStart, 64), \"erro\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4eb86dec3b7c3e53e01f18b918268fa96a47c207e64bdfa8013fcfdaf9f9175d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"You have to pay fee to use Snipe\")\n        mstore(add(headStart, 96), \"Finance Multi bulk function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C8B9E7B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDDCA3F43 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xE3CEC849 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xF7260D3E EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xFB520AF2 EQ PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9C8B9E7B EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x9CBD3433 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xA4DF0256 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xB810C636 EQ PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FEFF76D GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x3FEFF76D EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x44B6209D EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x4B4FB1B0 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x126CCD94 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x17FC45E2 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x2FC75EB0 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2D JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x3B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1AE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0xC89 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x424 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x146 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0xC89 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1AE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0xECF JUMP JUMPDEST PUSH2 0xB1C JUMP JUMPDEST PUSH2 0x361 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x390 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x3BE PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x3 SLOAD ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH2 0x400 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x42C PUSH2 0xB6E JUMP JUMPDEST PUSH2 0x3F6 PUSH1 0x0 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x49E JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x454 JUMPI PUSH2 0x454 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0xF29 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x481 JUMPI PUSH2 0x481 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x496 DUP2 PUSH2 0xF48 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x439 JUMP JUMPDEST POP DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x4EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x696E76616C696420696E7075742073697A65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x572 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x1 SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x58B SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6DE JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5FB JUMPI PUSH2 0x5FB PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x615 JUMPI PUSH2 0x615 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x674 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x698 SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x32B93937B9 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E1 JUMP JUMPDEST DUP1 PUSH2 0x6D6 DUP2 PUSH2 0xF48 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5D0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x76B JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x745 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x769 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6DE JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x79E JUMPI PUSH2 0x79E PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x7B8 JUMPI PUSH2 0x7B8 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x817 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83B SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E1 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x6572726F PUSH1 0xE0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x87A DUP2 PUSH2 0xF48 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x773 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x913 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x911 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x9E7 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x990 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520746F207061792066656520746F2075736520536E697065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x46696E616E6365204D756C74692062756C6B2066756E6374696F6E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xA71 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xA05 JUMPI PUSH2 0xA05 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA2B JUMPI PUSH2 0xA2B PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH2 0xA69 DUP2 PUSH2 0xF48 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9EA JUMP JUMPDEST POP SELFBALANCE DUP1 ISZERO PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0xAAE PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x3F4 DUP2 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0xB24 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB6A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xC52 DUP2 PUSH2 0xC18 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xC7B DUP2 PUSH2 0xC18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCA6 DUP2 PUSH2 0xC18 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCEC JUMPI PUSH2 0xCEC PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD0E JUMPI PUSH2 0xD0E PUSH2 0xCAD JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD3E PUSH2 0xD39 DUP4 PUSH2 0xCF4 JUMP JUMPDEST PUSH2 0xCC3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD81 JUMPI DUP1 CALLDATALOAD PUSH2 0xD74 DUP2 PUSH2 0xC18 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD61 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xDAD PUSH2 0xD39 DUP4 PUSH2 0xCF4 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xDCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD81 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE07 DUP2 PUSH2 0xC18 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE30 DUP8 DUP4 DUP9 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE53 DUP7 DUP3 DUP8 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE94 DUP7 DUP4 DUP8 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB7 DUP6 DUP3 DUP7 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xEED DUP2 PUSH2 0xC18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xC52 DUP2 PUSH2 0xEC1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF43 JUMPI PUSH2 0xF43 PUSH2 0xF13 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xF5A JUMPI PUSH2 0xF5A PUSH2 0xF13 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF8D JUMPI PUSH2 0xF8D PUSH2 0xF13 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xCA6 DUP2 PUSH2 0xEC1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xB6 0x49 0xC3 RETURN 0x4A PUSH13 0xE372469AB2F9B6F100B4BE5349 BALANCE 0xB6 ADDRESS SWAP11 0xD3 0xAB SSTORE 0x25 0xC6 0xE2 0xFC SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "6419:3434:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8707:144;;;;;;;;;;-1:-1:-1;8707:144:0;;;;;:::i;:::-;;:::i;:::-;;6691:23;;;;;;;;;;;;;;;;;;;616:25:1;;;604:2;589:18;6691:23:0;;;;;;;;9467:151;;;;;;;;;;-1:-1:-1;9467:151:0;;;;;:::i;:::-;;:::i;8908:126::-;;;;;;;;;;;;;:::i;6614:26::-;;;;;;;;;;-1:-1:-1;6614:26:0;;;;-1:-1:-1;;;;;6614:26:0;;;;;;-1:-1:-1;;;;;1164:32:1;;;1146:51;;1134:2;1119:18;6614:26:0;986:217:1;6561:47:0;;;;;;;;;;-1:-1:-1;6561:47:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1625:14:1;;1618:22;1600:41;;1588:2;1573:18;6561:47:0;1460:187:1;9077:104:0;;;;;;;;;;-1:-1:-1;9077:104:0;;;;;:::i;:::-;;:::i;2713:101::-;;;;;;;;;;;;;:::i;2090:85::-;;;;;;;;;;-1:-1:-1;2136:7:0;2162:6;-1:-1:-1;;;;;2162:6:0;2090:85;;6530:25;;;;;;;;;;;;;;;;7500:1167;;;;;;:::i;:::-;;:::i;9624:113::-;;;;;;;;;;-1:-1:-1;9624:113:0;;;;;:::i;:::-;-1:-1:-1;;;;;9709:21:0;9687:4;9709:21;;;:15;:21;;;;;;;;;9624:113;9772:79;;;;;;;;;;-1:-1:-1;9841:3:0;;9772:79;;6469:18;;;;;;;;;;;;;;;;6849:642;;;;;;:::i;:::-;;:::i;2963:198::-;;;;;;;;;;-1:-1:-1;2963:198:0;;;;;:::i;:::-;;:::i;6493:31::-;;;;;;;;;;-1:-1:-1;6493:31:0;;;;-1:-1:-1;;;;;6493:31:0;;;9260:163;;;;;;;;;;-1:-1:-1;9260:163:0;;;;;:::i;:::-;;:::i;8707:144::-;1983:13;:11;:13::i;:::-;8793:3:::1;:12:::0;;;;8815:8:::1;:29:::0;;-1:-1:-1;;;;;;8815:29:0::1;-1:-1:-1::0;;;;;8815:29:0;;::::1;::::0;;;::::1;::::0;;8707:144::o;9467:151::-;1983:13;:11;:13::i;:::-;9563:12:::1;:20:::0;;-1:-1:-1;;;;;;9563:20:0::1;-1:-1:-1::0;;;;;9563:20:0;;;::::1;::::0;;;::::1;::::0;;;9593:8:::1;:18:::0;9467:151::o;8908:126::-;1983:13;:11;:13::i;:::-;8960:10:::1;::::0;:14;8957:70:::1;;9016:10;::::0;8987:40:::1;::::0;8995:10:::1;::::0;8987:40;::::1;;;::::0;::::1;::::0;;;9016:10;8995;8987:40;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;8957:70;8908:126::o:0;9077:104::-;1983:13;:11;:13::i;:::-;-1:-1:-1;;;;;9145:22:0::1;;::::0;;;:15:::1;:22;::::0;;;;:29;;-1:-1:-1;;9145:29:0::1;9170:4;9145:29;::::0;;9077:104::o;2713:101::-;1983:13;:11;:13::i;:::-;2777:30:::1;2804:1;2777:18;:30::i;7500:1167::-:0;7721:9;7716:99;7740:6;:13;7736:1;:17;7716:99;;;7786:6;7793:1;7786:9;;;;;;;;:::i;:::-;;;;;;;7798:6;7786:18;;;;:::i;:::-;7774:6;7781:1;7774:9;;;;;;;;:::i;:::-;;;;;;;;;;:30;7755:3;;;;:::i;:::-;;;;7716:99;;;;7853:6;:13;7832:10;:17;:34;7824:65;;;;-1:-1:-1;;;7824:65:0;;6731:2:1;7824:65:0;;;6713:21:1;6770:2;6750:18;;;6743:30;-1:-1:-1;;;6789:18:1;;;6782:48;6847:18;;7824:65:0;;;;;;;;;8047:10;8031:27;;;;:15;:27;;;;;;;;8030:28;:82;;;;-1:-1:-1;8104:8:0;;8074:27;;-1:-1:-1;;;8074:27:0;;8090:10;8074:27;;;1146:51:1;-1:-1:-1;;;;;8074:15:0;;;;;1119:18:1;;8074:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;8030:82;8013:648;;;8151:3;;8137:10;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;8176:8:0;;;8195:3;8168:31;;-1:-1:-1;;;;;8176:8:0;;;;8168:31;;;;;8195:3;8176:8;8168:31;8176:8;8168:31;8195:3;8176:8;8168:31;;;;;;;;;;;;;;;;;;;;;8218:9;8213:150;8237:6;:13;8233:1;:17;8213:150;;;8283:5;-1:-1:-1;;;;;8283:18:0;;8302:10;8314;8325:1;8314:13;;;;;;;;:::i;:::-;;;;;;;8329:6;8336:1;8329:9;;;;;;;;:::i;:::-;;;;;;;;;;;8283:56;;-1:-1:-1;;;;;;8283:56:0;;;;;;;-1:-1:-1;;;;;7456:15:1;;;8283:56:0;;;7438:34:1;7508:15;;;;7488:18;;;7481:43;7540:18;;;7533:34;7373:18;;8283:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8275:73;;;;-1:-1:-1;;;8275:73:0;;8030:2:1;8275:73:0;;;8012:21:1;8069:1;8049:18;;;8042:29;-1:-1:-1;;;8087:18:1;;;8080:35;8132:18;;8275:73:0;7828:328:1;8275:73:0;8252:3;;;;:::i;:::-;;;;8213:150;;;;7500:1167;;;:::o;8013:648::-;8412:10;8396:27;;;;:15;:27;;;;;;;;:81;;;;-1:-1:-1;8469:8:0;;8439:27;;-1:-1:-1;;;8439:27:0;;8455:10;8439:27;;;1146:51:1;-1:-1:-1;;;;;8439:15:0;;;;;1119:18:1;;8439:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;8396:81;8379:282;;;8507:9;8502:149;8526:6;:13;8522:1;:17;8502:149;;;8572:5;-1:-1:-1;;;;;8572:18:0;;8591:10;8603;8614:1;8603:13;;;;;;;;:::i;:::-;;;;;;;8618:6;8625:1;8618:9;;;;;;;;:::i;:::-;;;;;;;;;;;8572:56;;-1:-1:-1;;;;;;8572:56:0;;;;;;;-1:-1:-1;;;;;7456:15:1;;;8572:56:0;;;7438:34:1;7508:15;;;;7488:18;;;7481:43;7540:18;;;7533:34;7373:18;;8572:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8564:72;;;;-1:-1:-1;;;8564:72:0;;;;;;8363:2:1;8345:21;;;8402:1;8382:18;;;8375:29;-1:-1:-1;;;8435:2:1;8420:18;;8413:34;8479:2;8464:18;;8161:327;8564:72:0;8541:3;;;;:::i;:::-;;;;8502:149;;8379:282;7500:1167;;;:::o;6849:642::-;6974:10;6958:27;;;;:15;:27;;;;;;;;6957:28;:77;;;;-1:-1:-1;7026:8:0;;6989:12;;:34;;-1:-1:-1;;;6989:34:0;;7012:10;6989:34;;;1146:51:1;-1:-1:-1;;;;;6989:12:0;;;;:22;;1119:18:1;;6989:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;6957:77;6954:273;;;7073:3;;7060:9;:16;;7051:89;;;;-1:-1:-1;;;7051:89:0;;8695:2:1;7051:89:0;;;8677:21:1;8734:2;8714:18;;;8707:30;8773:34;8753:18;;;8746:62;8844:29;8824:18;;;8817:57;8891:19;;7051:89:0;8493:423:1;7051:89:0;7168:3;;7154:10;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;7193:8:0;;;7212:3;7185:31;;-1:-1:-1;;;;;7193:8:0;;;;7185:31;;;;;7212:3;7193:8;7185:31;7193:8;7185:31;7212:3;7193:8;7185:31;;;;;;;;;;;;;;;;;;;;;6954:273;7241:9;7236:114;7260:10;:17;7256:1;:21;7236:114;;;7305:10;7316:1;7305:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7297:31:0;:42;7329:6;7336:1;7329:9;;;;;;;;:::i;:::-;;;;;;;7297:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7279:3:0;;;;:::i;:::-;;;;7236:114;;;-1:-1:-1;7382:21:0;7422:11;;7418:66;;7447:37;;7455:10;;7447:37;;;;;7476:7;;7447:37;;;;7476:7;7455:10;7447:37;;;;;;;;;;;;;;;;;;;2963:198;1983:13;:11;:13::i;:::-;-1:-1:-1;;;;;3051:22:0;::::1;3043:73;;;::::0;-1:-1:-1;;;3043:73:0;;9123:2:1;3043:73:0::1;::::0;::::1;9105:21:1::0;9162:2;9142:18;;;9135:30;9201:34;9181:18;;;9174:62;-1:-1:-1;;;9252:18:1;;;9245:36;9298:19;;3043:73:0::1;8921:402:1::0;3043:73:0::1;3126:28;3145:8;3126:18;:28::i;9260:163::-:0;1983:13;:11;:13::i;:::-;-1:-1:-1;;;;;9338:22:0;::::1;;::::0;;;:15:::1;:22;::::0;;;;;::::1;;9335:82;;;-1:-1:-1::0;;;;;9376:22:0;::::1;;::::0;;;:15:::1;:22;::::0;;;;:30;;-1:-1:-1;;9376:30:0::1;::::0;::::1;;;::::0;;9335:82:::1;9260:163:::0;;:::o;2248:130::-;2136:7;2162:6;-1:-1:-1;;;;;2162:6:0;772:10;2311:23;2303:68;;;;-1:-1:-1;;;2303:68:0;;9530:2:1;2303:68:0;;;9512:21:1;;;9549:18;;;9542:30;9608:34;9588:18;;;9581:62;9660:18;;2303:68:0;9328:356:1;3315:187:0;3388:16;3407:6;;-1:-1:-1;;;;;3423:17:0;;;-1:-1:-1;;;;;;3423:17:0;;;;;;3455:40;;3407:6;;;;;;;3455:40;;3388:16;3455:40;3378:124;3315:187;:::o;14:131:1:-;-1:-1:-1;;;;;89:31:1;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;331:9;318:23;308:33;;391:2;380:9;376:18;363:32;404:31;429:5;404:31;:::i;:::-;454:5;444:15;;;150:315;;;;;:::o;652:329::-;734:6;742;795:2;783:9;774:7;770:23;766:32;763:52;;;811:1;808;801:12;763:52;850:9;837:23;869:31;894:5;869:31;:::i;:::-;919:5;971:2;956:18;;;;943:32;;-1:-1:-1;;;652:329:1:o;1208:247::-;1267:6;1320:2;1308:9;1299:7;1295:23;1291:32;1288:52;;;1336:1;1333;1326:12;1288:52;1375:9;1362:23;1394:31;1419:5;1394:31;:::i;:::-;1444:5;1208:247;-1:-1:-1;;;1208:247:1:o;1860:127::-;1921:10;1916:3;1912:20;1909:1;1902:31;1952:4;1949:1;1942:15;1976:4;1973:1;1966:15;1992:275;2063:2;2057:9;2128:2;2109:13;;-1:-1:-1;;2105:27:1;2093:40;;2163:18;2148:34;;2184:22;;;2145:62;2142:88;;;2210:18;;:::i;:::-;2246:2;2239:22;1992:275;;-1:-1:-1;1992:275:1:o;2272:183::-;2332:4;2365:18;2357:6;2354:30;2351:56;;;2387:18;;:::i;:::-;-1:-1:-1;2432:1:1;2428:14;2444:4;2424:25;;2272:183::o;2460:737::-;2514:5;2567:3;2560:4;2552:6;2548:17;2544:27;2534:55;;2585:1;2582;2575:12;2534:55;2621:6;2608:20;2647:4;2671:60;2687:43;2727:2;2687:43;:::i;:::-;2671:60;:::i;:::-;2765:15;;;2851:1;2847:10;;;;2835:23;;2831:32;;;2796:12;;;;2875:15;;;2872:35;;;2903:1;2900;2893:12;2872:35;2939:2;2931:6;2927:15;2951:217;2967:6;2962:3;2959:15;2951:217;;;3047:3;3034:17;3064:31;3089:5;3064:31;:::i;:::-;3108:18;;3146:12;;;;2984;;2951:217;;;-1:-1:-1;3186:5:1;2460:737;-1:-1:-1;;;;;;2460:737:1:o;3202:662::-;3256:5;3309:3;3302:4;3294:6;3290:17;3286:27;3276:55;;3327:1;3324;3317:12;3276:55;3363:6;3350:20;3389:4;3413:60;3429:43;3469:2;3429:43;:::i;3413:60::-;3507:15;;;3593:1;3589:10;;;;3577:23;;3573:32;;;3538:12;;;;3617:15;;;3614:35;;;3645:1;3642;3635:12;3614:35;3681:2;3673:6;3669:15;3693:142;3709:6;3704:3;3701:15;3693:142;;;3775:17;;3763:30;;3813:12;;;;3726;;3693:142;;3869:744;4010:6;4018;4026;4079:2;4067:9;4058:7;4054:23;4050:32;4047:52;;;4095:1;4092;4085:12;4047:52;4134:9;4121:23;4153:31;4178:5;4153:31;:::i;:::-;4203:5;-1:-1:-1;4259:2:1;4244:18;;4231:32;4282:18;4312:14;;;4309:34;;;4339:1;4336;4329:12;4309:34;4362:61;4415:7;4406:6;4395:9;4391:22;4362:61;:::i;:::-;4352:71;;4476:2;4465:9;4461:18;4448:32;4432:48;;4505:2;4495:8;4492:16;4489:36;;;4521:1;4518;4511:12;4489:36;;4544:63;4599:7;4588:8;4577:9;4573:24;4544:63;:::i;:::-;4534:73;;;3869:744;;;;;:::o;4618:595::-;4736:6;4744;4797:2;4785:9;4776:7;4772:23;4768:32;4765:52;;;4813:1;4810;4803:12;4765:52;4853:9;4840:23;4882:18;4923:2;4915:6;4912:14;4909:34;;;4939:1;4936;4929:12;4909:34;4962:61;5015:7;5006:6;4995:9;4991:22;4962:61;:::i;:::-;4952:71;;5076:2;5065:9;5061:18;5048:32;5032:48;;5105:2;5095:8;5092:16;5089:36;;;5121:1;5118;5111:12;5089:36;;5144:63;5199:7;5188:8;5177:9;5173:24;5144:63;:::i;:::-;5134:73;;;4618:595;;;;;:::o;5442:118::-;5528:5;5521:13;5514:21;5507:5;5504:32;5494:60;;5550:1;5547;5540:12;5565:382;5630:6;5638;5691:2;5679:9;5670:7;5666:23;5662:32;5659:52;;;5707:1;5704;5697:12;5659:52;5746:9;5733:23;5765:31;5790:5;5765:31;:::i;:::-;5815:5;-1:-1:-1;5872:2:1;5857:18;;5844:32;5885:30;5844:32;5885:30;:::i;5952:127::-;6013:10;6008:3;6004:20;6001:1;5994:31;6044:4;6041:1;6034:15;6068:4;6065:1;6058:15;6084:127;6145:10;6140:3;6136:20;6133:1;6126:31;6176:4;6173:1;6166:15;6200:4;6197:1;6190:15;6216:168;6256:7;6322:1;6318;6314:6;6310:14;6307:1;6304:21;6299:1;6292:9;6285:17;6281:45;6278:71;;;6329:18;;:::i;:::-;-1:-1:-1;6369:9:1;;6216:168::o;6389:135::-;6428:3;6449:17;;;6446:43;;6469:18;;:::i;:::-;-1:-1:-1;6516:1:1;6505:13;;6389:135::o;6876:184::-;6946:6;6999:2;6987:9;6978:7;6974:23;6970:32;6967:52;;;7015:1;7012;7005:12;6967:52;-1:-1:-1;7038:16:1;;6876:184;-1:-1:-1;6876:184:1:o;7065:128::-;7105:3;7136:1;7132:6;7129:1;7126:13;7123:39;;;7142:18;;:::i;:::-;-1:-1:-1;7178:9:1;;7065:128::o;7578:245::-;7645:6;7698:2;7686:9;7677:7;7673:23;7669:32;7666:52;;;7714:1;7711;7704:12;7666:52;7746:9;7740:16;7765:28;7787:5;7765:28;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "813800",
								"executionCost": "75167",
								"totalCost": "888967"
							},
							"external": {
								"BNBmultisender(address[],uint256[])": "infinite",
								"SetTokenToholdAndQuantity(address,uint256)": "infinite",
								"TOKENmultisender(address,address[],uint256[])": "infinite",
								"authorizeToUse(address)": "infinite",
								"authorizedusers(address)": "2571",
								"fee()": "2306",
								"feeamounts()": "2307",
								"getFeeDetails()": "2370",
								"owner()": "2442",
								"quantity()": "2330",
								"readAuthorizedUsers(address)": "2611",
								"receiver()": "2425",
								"renounceOwnership()": "infinite",
								"setauthor(address,bool)": "infinite",
								"setfeeToUse(uint256,address)": "infinite",
								"tokenaddress()": "2360",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6419,
									"end": 9853,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 6419,
									"end": 9853,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6419,
									"end": 9853,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6757,
									"end": 6843,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6757,
									"end": 6843,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6757,
									"end": 6843,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6757,
									"end": 6843,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6757,
									"end": 6843,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6757,
									"end": 6843,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6757,
									"end": 6843,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6757,
									"end": 6843,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6757,
									"end": 6843,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6757,
									"end": 6843,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1825,
									"end": 1857,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 772,
									"end": 782,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1825,
									"end": 1843,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1825,
									"end": 1857,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1825,
									"end": 1857,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1825,
									"end": 1857,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2143,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2162,
									"end": 2168,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6781,
									"end": 6789,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6781,
									"end": 6808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6781,
									"end": 6808,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6781,
									"end": 6808,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2162,
									"end": 2168,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2162,
									"end": 2168,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2162,
									"end": 2168,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6781,
									"end": 6808,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6781,
									"end": 6808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6781,
									"end": 6808,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6781,
									"end": 6808,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6781,
									"end": 6808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6781,
									"end": 6808,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 6836,
									"name": "PUSH",
									"source": 0,
									"value": "5AF3107A4000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 6818,
									"end": 6836,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6419,
									"end": 9853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6419,
									"end": 9853,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3315,
									"end": 3502,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3315,
									"end": 3502,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3388,
									"end": 3404,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3407,
									"end": 3413,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3407,
									"end": 3413,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3423,
									"end": 3440,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3423,
									"end": 3440,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3423,
									"end": 3440,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3423,
									"end": 3440,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3423,
									"end": 3440,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3423,
									"end": 3440,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3423,
									"end": 3440,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3423,
									"end": 3440,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3423,
									"end": 3440,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3455,
									"end": 3495,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3455,
									"end": 3495,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3407,
									"end": 3413,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3407,
									"end": 3413,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3407,
									"end": 3413,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3407,
									"end": 3413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3407,
									"end": 3413,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3407,
									"end": 3413,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3407,
									"end": 3413,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3455,
									"end": 3495,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3455,
									"end": 3495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3388,
									"end": 3404,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3455,
									"end": 3495,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3378,
									"end": 3502,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3315,
									"end": 3502,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3315,
									"end": 3502,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 6419,
									"end": 9853,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6419,
									"end": 9853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6419,
									"end": 9853,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6419,
									"end": 9853,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6419,
									"end": 9853,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6419,
									"end": 9853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6419,
									"end": 9853,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6419,
									"end": 9853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6419,
									"end": 9853,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059b649c3f34a6ce372469ab2f9b6f100b4be534931b6309ad3ab5525c6e2fc9764736f6c634300080d0033",
									".code": [
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "9C8B9E7B"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "DDCA3F43"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "DDCA3F43"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "E3CEC849"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "F7260D3E"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "FB520AF2"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "9C8B9E7B"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "9CBD3433"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "A4DF0256"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "B810C636"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "3FEFF76D"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "3FEFF76D"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "44B6209D"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "4B4FB1B0"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "126CCD94"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "17FC45E2"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "2FC75EB0"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 9853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 616,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 604,
											"end": 606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 589,
											"end": 607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6691,
											"end": 6714,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1164,
											"end": 1196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1196,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6614,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 986,
											"end": 1203,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1639,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1640,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1460,
											"end": 1647,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2136,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2168,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2090,
											"end": 2175,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6555,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9687,
											"end": 9691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9737,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9841,
											"end": 9844,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9841,
											"end": 9844,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9772,
											"end": 9851,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6524,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 8796,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8793,
											"end": 8805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 8805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 8805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 8805,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8823,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8815,
											"end": 8844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8844,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8815,
											"end": 8844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8815,
											"end": 8844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8844,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8844,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8844,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8851,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9575,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9593,
											"end": 9601,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9593,
											"end": 9611,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9618,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 8970,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8960,
											"end": 8970,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 8974,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8957,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 8957,
											"end": 9027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9016,
											"end": 9026,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9016,
											"end": 9026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8995,
											"end": 9005,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8995,
											"end": 9005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9016,
											"end": 9026,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8995,
											"end": 9005,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8957,
											"end": 9027,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 8957,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 9034,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9145,
											"end": 9167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9160,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9145,
											"end": 9167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9145,
											"end": 9167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9145,
											"end": 9167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9174,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9145,
											"end": 9174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9170,
											"end": 9174,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9145,
											"end": 9174,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9174,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9181,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2804,
											"end": 2805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2777,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2777,
											"end": 2807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7716,
											"end": 7815,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7716,
											"end": 7815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7736,
											"end": 7737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7736,
											"end": 7753,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7716,
											"end": 7815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7798,
											"end": 7804,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7786,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7786,
											"end": 7804,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7786,
											"end": 7804,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7786,
											"end": 7804,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7786,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7781,
											"end": 7782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7774,
											"end": 7804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7716,
											"end": 7815,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7815,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7716,
											"end": 7815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7832,
											"end": 7842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7832,
											"end": 7849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7832,
											"end": 7866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6713,
											"end": 6734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6772,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6750,
											"end": 6768,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6750,
											"end": 6768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 6768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C696420696E7075742073697A65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6789,
											"end": 6807,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6789,
											"end": 6807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7824,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8030,
											"end": 8058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8030,
											"end": 8112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8030,
											"end": 8112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8030,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8030,
											"end": 8112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8104,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8104,
											"end": 8112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8100,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 8074,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8112,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8030,
											"end": 8112,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8030,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8013,
											"end": 8661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8013,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8013,
											"end": 8661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8151,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8151,
											"end": 8154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8147,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8137,
											"end": 8147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8137,
											"end": 8154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8137,
											"end": 8154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 8137,
											"end": 8154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8137,
											"end": 8154,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8137,
											"end": 8154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8154,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8176,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8176,
											"end": 8184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8195,
											"end": 8198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8176,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8184,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8198,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8184,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8218,
											"end": 8227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8213,
											"end": 8363,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 8213,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8237,
											"end": 8243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8237,
											"end": 8250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8250,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8213,
											"end": 8363,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8213,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8213,
											"end": 8363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 8302,
											"end": 8312,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8314,
											"end": 8324,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8335,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7456,
											"end": 7471,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7471,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7471,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7438,
											"end": 7472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7481,
											"end": 7524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8283,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8275,
											"end": 8348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8275,
											"end": 8348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8275,
											"end": 8348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8030,
											"end": 8032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8348,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8275,
											"end": 8348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8012,
											"end": 8033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8070,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B93937B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8275,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7828,
											"end": 8156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8275,
											"end": 8348,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8275,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8213,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 8213,
											"end": 8363,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8213,
											"end": 8363,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8213,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8213,
											"end": 8363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8013,
											"end": 8661,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8013,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8422,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8396,
											"end": 8477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8455,
											"end": 8465,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8439,
											"end": 8454,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8454,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8439,
											"end": 8454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8439,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8477,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8477,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8396,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8379,
											"end": 8661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8379,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8379,
											"end": 8661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8507,
											"end": 8516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8502,
											"end": 8651,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8502,
											"end": 8651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8526,
											"end": 8532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8526,
											"end": 8539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8522,
											"end": 8523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8522,
											"end": 8539,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8502,
											"end": 8651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 8591,
											"end": 8601,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8613,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8615,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8624,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8626,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7456,
											"end": 7471,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7471,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 7471,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7438,
											"end": 7472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7481,
											"end": 7524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8572,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8564,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8564,
											"end": 8636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8564,
											"end": 8636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8564,
											"end": 8636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8564,
											"end": 8636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8564,
											"end": 8636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8564,
											"end": 8636,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8564,
											"end": 8636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8564,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8564,
											"end": 8636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8363,
											"end": 8365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8345,
											"end": 8366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8345,
											"end": 8366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8345,
											"end": 8366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8402,
											"end": 8403,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8382,
											"end": 8400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8382,
											"end": 8400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8382,
											"end": 8400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8375,
											"end": 8404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6572726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8435,
											"end": 8437,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8481,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8488,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8564,
											"end": 8636,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8564,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8502,
											"end": 8651,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8379,
											"end": 8661,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8379,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 8667,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6849,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 6984,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6958,
											"end": 6985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6958,
											"end": 6985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6958,
											"end": 6985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6958,
											"end": 6985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6985,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6958,
											"end": 6985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6957,
											"end": 6985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6957,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6957,
											"end": 7034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6957,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6957,
											"end": 7034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7026,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7026,
											"end": 7034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6989,
											"end": 7001,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7022,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6989,
											"end": 7001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7011,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 6989,
											"end": 7011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6989,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7034,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6957,
											"end": 7034,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6957,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7227,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6954,
											"end": 7227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7073,
											"end": 7076,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7073,
											"end": 7076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7069,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7076,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7051,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7051,
											"end": 7140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7051,
											"end": 7140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7051,
											"end": 7140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7051,
											"end": 7140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7051,
											"end": 7140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8695,
											"end": 8697,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7051,
											"end": 7140,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7051,
											"end": 7140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7051,
											"end": 7140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8677,
											"end": 8698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 8736,
											"name": "PUSH",
											"source": 1,
											"value": "3B"
										},
										{
											"begin": 8714,
											"end": 8732,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8714,
											"end": 8732,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8773,
											"end": 8807,
											"name": "PUSH",
											"source": 1,
											"value": "596F75206861766520746F207061792066656520746F2075736520536E697065"
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 8808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8844,
											"end": 8873,
											"name": "PUSH",
											"source": 1,
											"value": "46696E616E6365204D756C74692062756C6B2066756E6374696F6E0000000000"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8817,
											"end": 8874,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8891,
											"end": 8910,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8891,
											"end": 8910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8493,
											"end": 8916,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7140,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7051,
											"end": 7140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7171,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7168,
											"end": 7171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7154,
											"end": 7164,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7154,
											"end": 7164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7154,
											"end": 7171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7154,
											"end": 7171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7154,
											"end": 7171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7154,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 7154,
											"end": 7171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7154,
											"end": 7171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7154,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7154,
											"end": 7171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7154,
											"end": 7171,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 7154,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7154,
											"end": 7171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7154,
											"end": 7171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7154,
											"end": 7171,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7201,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7193,
											"end": 7201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7193,
											"end": 7201,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7212,
											"end": 7215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7193,
											"end": 7201,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7193,
											"end": 7201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7193,
											"end": 7201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7193,
											"end": 7201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7193,
											"end": 7201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7215,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7193,
											"end": 7201,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7227,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6954,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7236,
											"end": 7350,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 7236,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7256,
											"end": 7257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7256,
											"end": 7277,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7236,
											"end": 7350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7236,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 7236,
											"end": 7350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7316,
											"end": 7317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 7329,
											"end": 7335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7279,
											"end": 7282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 7279,
											"end": 7282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7279,
											"end": 7282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7279,
											"end": 7282,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 7279,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7236,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 7236,
											"end": 7350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7236,
											"end": 7350,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 7236,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7382,
											"end": 7403,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 7418,
											"end": 7484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7455,
											"end": 7465,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7455,
											"end": 7465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7483,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7455,
											"end": 7465,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2963,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3043,
											"end": 3116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3043,
											"end": 3116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9125,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3043,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3043,
											"end": 3116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9105,
											"end": 9126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9162,
											"end": 9164,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9201,
											"end": 9235,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9181,
											"end": 9199,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9181,
											"end": 9199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9181,
											"end": 9199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9174,
											"end": 9236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9252,
											"end": 9270,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9252,
											"end": 9270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9252,
											"end": 9270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9245,
											"end": 9281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9298,
											"end": 9317,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9298,
											"end": 9317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8921,
											"end": 9323,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3116,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3043,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3145,
											"end": 3153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3126,
											"end": 3154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1983,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 9417,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 9335,
											"end": 9417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9376,
											"end": 9398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9376,
											"end": 9398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9376,
											"end": 9398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9376,
											"end": 9398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9376,
											"end": 9398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9398,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9376,
											"end": 9406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9406,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9406,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9406,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9376,
											"end": 9406,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 9417,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 9335,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9423,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2248,
											"end": 2378,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2248,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2136,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2168,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2311,
											"end": 2334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2303,
											"end": 2371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2303,
											"end": 2371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2303,
											"end": 2371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9530,
											"end": 9532,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2303,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2303,
											"end": 2371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9512,
											"end": 9533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9512,
											"end": 9533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9567,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9549,
											"end": 9567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9608,
											"end": 9642,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9588,
											"end": 9606,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9588,
											"end": 9606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9588,
											"end": 9606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9581,
											"end": 9643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 9328,
											"end": 9684,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3502,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3315,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3440,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3440,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3440,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3440,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3440,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3455,
											"end": 3495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3495,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3502,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 150,
											"end": 465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 276,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 258,
											"end": 265,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 254,
											"end": 277,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 250,
											"end": 282,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 247,
											"end": 299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 247,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 247,
											"end": 299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 295,
											"end": 296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 247,
											"end": 299,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 247,
											"end": 299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 331,
											"end": 340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 318,
											"end": 341,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 341,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 393,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 376,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 363,
											"end": 395,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 404,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 429,
											"end": 434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 404,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 404,
											"end": 435,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 435,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 404,
											"end": 435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 454,
											"end": 459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 444,
											"end": 459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 444,
											"end": 459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 444,
											"end": 459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 652,
											"end": 981,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 652,
											"end": 981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 734,
											"end": 740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 795,
											"end": 797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 792,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 774,
											"end": 781,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 770,
											"end": 793,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 766,
											"end": 798,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 763,
											"end": 815,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 763,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 763,
											"end": 815,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 811,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 801,
											"end": 813,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 763,
											"end": 815,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 763,
											"end": 815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 850,
											"end": 859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 837,
											"end": 860,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 869,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 894,
											"end": 899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 869,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 869,
											"end": 900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 869,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 869,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 919,
											"end": 924,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 956,
											"end": 974,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 956,
											"end": 974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 956,
											"end": 974,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 956,
											"end": 974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 943,
											"end": 975,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 943,
											"end": 975,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 652,
											"end": 981,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1208,
											"end": 1455,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1208,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1306,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1318,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1323,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1340,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1288,
											"end": 1340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1340,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1288,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1419,
											"end": 1424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1449,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1455,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1860,
											"end": 1987,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1860,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1931,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1916,
											"end": 1919,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1912,
											"end": 1932,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 1957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1980,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1973,
											"end": 1974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1981,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2267,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1992,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2065,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2109,
											"end": 2122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2132,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2182,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2206,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2207,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2230,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2142,
											"end": 2230,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2267,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1992,
											"end": 2267,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2272,
											"end": 2455,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2272,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2384,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2407,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2351,
											"end": 2407,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2387,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2387,
											"end": 2405,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2405,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2387,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2433,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2428,
											"end": 2442,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2448,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2424,
											"end": 2449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2455,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2460,
											"end": 3197,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2460,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2570,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2564,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2571,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2534,
											"end": 2589,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2589,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2534,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2608,
											"end": 2628,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2651,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2687,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2727,
											"end": 2729,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2687,
											"end": 2730,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2687,
											"end": 2730,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2687,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2671,
											"end": 2731,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2671,
											"end": 2731,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2671,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2852,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2847,
											"end": 2857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2857,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2835,
											"end": 2858,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2835,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2872,
											"end": 2907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 2905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2907,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2872,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3050,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3051,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3089,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 3064,
											"end": 3095,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3064,
											"end": 3095,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3064,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3158,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 2996,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 2996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3186,
											"end": 3191,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 3197,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 3197,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3202,
											"end": 3864,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 3202,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3306,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3294,
											"end": 3300,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3313,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 3276,
											"end": 3331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3329,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3331,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 3276,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3363,
											"end": 3369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3370,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3429,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3469,
											"end": 3471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3429,
											"end": 3472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3413,
											"end": 3473,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3413,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3594,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3589,
											"end": 3599,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3599,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3599,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3600,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3632,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3632,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3632,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3649,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3614,
											"end": 3649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3647,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3649,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3614,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3673,
											"end": 3679,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3715,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3716,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3792,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3813,
											"end": 3825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3813,
											"end": 3825,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3813,
											"end": 3825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3813,
											"end": 3825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3738,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4010,
											"end": 4016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4067,
											"end": 4076,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4065,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4082,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4085,
											"end": 4097,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4121,
											"end": 4144,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4259,
											"end": 4261,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4231,
											"end": 4263,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 4309,
											"end": 4343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4339,
											"end": 4340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4343,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 4309,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 4415,
											"end": 4422,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4412,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4404,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 4362,
											"end": 4423,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4362,
											"end": 4423,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 4362,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4423,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4478,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4465,
											"end": 4474,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4480,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4432,
											"end": 4480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4432,
											"end": 4480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4505,
											"end": 4507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4495,
											"end": 4503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4492,
											"end": 4508,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4525,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 4489,
											"end": 4525,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4518,
											"end": 4519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4525,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 4489,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4599,
											"end": 4606,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4588,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4586,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4573,
											"end": 4597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4797,
											"end": 4799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4785,
											"end": 4794,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4783,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4795,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4800,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4810,
											"end": 4811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4815,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4840,
											"end": 4863,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4926,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4939,
											"end": 4940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4936,
											"end": 4937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5004,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4952,
											"end": 5023,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4952,
											"end": 5023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5065,
											"end": 5074,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5061,
											"end": 5079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5048,
											"end": 5080,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5105,
											"end": 5107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5119,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5199,
											"end": 5206,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5442,
											"end": 5560,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 5442,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5504,
											"end": 5536,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5494,
											"end": 5554,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5548,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5552,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5565,
											"end": 5947,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5565,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5679,
											"end": 5688,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5677,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5666,
											"end": 5689,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5694,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5711,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5659,
											"end": 5711,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5704,
											"end": 5705,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5709,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5711,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5659,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5746,
											"end": 5755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5756,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5790,
											"end": 5795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5765,
											"end": 5796,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5765,
											"end": 5796,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5765,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5815,
											"end": 5820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5872,
											"end": 5874,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5876,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 5844,
											"end": 5876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 5885,
											"end": 5915,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5952,
											"end": 6079,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5952,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6023,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6008,
											"end": 6011,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6004,
											"end": 6024,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5994,
											"end": 6025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6048,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6041,
											"end": 6042,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6072,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6073,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6211,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6084,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6140,
											"end": 6143,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6136,
											"end": 6156,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6176,
											"end": 6180,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6173,
											"end": 6174,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6166,
											"end": 6181,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6200,
											"end": 6204,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6190,
											"end": 6205,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6216,
											"end": 6384,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6216,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 6263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6318,
											"end": 6319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6320,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6310,
											"end": 6324,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6308,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6325,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6299,
											"end": 6300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6301,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6302,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6349,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6278,
											"end": 6349,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6369,
											"end": 6378,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6369,
											"end": 6378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6216,
											"end": 6384,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6389,
											"end": 6524,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6389,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6428,
											"end": 6431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6466,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6449,
											"end": 6466,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6446,
											"end": 6489,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 6517,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6505,
											"end": 6518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6524,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6876,
											"end": 7060,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6876,
											"end": 7060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6946,
											"end": 6952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6999,
											"end": 7001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6987,
											"end": 6996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6978,
											"end": 6985,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7002,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 7019,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 6967,
											"end": 7019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7005,
											"end": 7017,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 6967,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7038,
											"end": 7054,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 7060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6876,
											"end": 7060,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7065,
											"end": 7193,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7065,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7132,
											"end": 7138,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7129,
											"end": 7130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7126,
											"end": 7139,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7123,
											"end": 7162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7123,
											"end": 7162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7123,
											"end": 7162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7178,
											"end": 7187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7193,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7578,
											"end": 7823,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 7578,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7698,
											"end": 7700,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7686,
											"end": 7695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7696,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7701,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7666,
											"end": 7718,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7666,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7666,
											"end": 7718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7711,
											"end": 7712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7666,
											"end": 7718,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7666,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7755,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7756,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 7787,
											"end": 7792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7765,
											"end": 7793,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BNBmultisender(address[],uint256[])": "e3cec849",
							"SetTokenToholdAndQuantity(address,uint256)": "2fc75eb0",
							"TOKENmultisender(address,address[],uint256[])": "9cbd3433",
							"authorizeToUse(address)": "4b4fb1b0",
							"authorizedusers(address)": "44b6209d",
							"fee()": "ddca3f43",
							"feeamounts()": "9c8b9e7b",
							"getFeeDetails()": "b810c636",
							"owner()": "8da5cb5b",
							"quantity()": "17fc45e2",
							"readAuthorizedUsers(address)": "a4df0256",
							"receiver()": "f7260d3e",
							"renounceOwnership()": "715018a6",
							"setauthor(address,bool)": "fb520af2",
							"setfeeToUse(uint256,address)": "126ccd94",
							"tokenaddress()": "3feff76d",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"BNBmultisender\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"SetTokenToholdAndQuantity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TOKENmultisender\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"authorizeToUse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedusers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeamounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quantity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"readAuthorizedUsers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"setauthor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newfee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"setfeeToUse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenaddress\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":\"SnipeFinanceMultisenders\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol\":{\"keccak256\":\"0x9515749d2507e0d1104e4dceca6a10ebe466feb937ff10d63195f07a596e26ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fd6d7d8e7557d5883159d419877ad427dc3f04051d71078a2512a945b759433\",\"dweb:/ipfs/QmSWHWZwi6ZHGdKAusMK2QHZo9Evw97pDpPTqK5KvUpRmD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol:SnipeFinanceMultisenders",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 213,
								"contract": "SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol:SnipeFinanceMultisenders",
								"label": "fee",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol:SnipeFinanceMultisenders",
								"label": "receiver",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 217,
								"contract": "SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol:SnipeFinanceMultisenders",
								"label": "feeamounts",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 221,
								"contract": "SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol:SnipeFinanceMultisenders",
								"label": "authorizedusers",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 224,
								"contract": "SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol:SnipeFinanceMultisenders",
								"label": "tokenaddress",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)209"
							},
							{
								"astId": 226,
								"contract": "SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol:SnipeFinanceMultisenders",
								"label": "quantity",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)209": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol": {
				"ast": {
					"absolutePath": "SnipeFinanceMultisenders (2)/SnipeFinanceMultisenders/SnipeFinanceMultisenders_flattened.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"IERC20": [
							209
						],
						"Ownable": [
							132
						],
						"SnipeFinanceMultisenders": [
							596
						]
					},
					"id": 597,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "139:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "164:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "679:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "755:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "772:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "765:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "702:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "746:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:9:0"
									},
									"scope": 21,
									"src": "693:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "862:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "879:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "879:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "872:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "804:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "846:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "846:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:16:0"
									},
									"scope": 21,
									"src": "795:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 597,
							"src": "661:235:0",
							"usedErrors": []
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1022:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1572:7:0"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "1572:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "1048:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 132,
							"linearizedBaseContracts": [
								132,
								21
							],
							"name": "Ownable",
							"nameLocation": "1561:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1602:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 132,
									"src": "1586:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1586:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 33,
									"name": "OwnershipTransferred",
									"nameLocation": "1621:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1658:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1642:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1689:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1673:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1641:57:0"
									},
									"src": "1615:84:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1815:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 38,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1844:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1844:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1825:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1825:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1825:32:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1705:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1812:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1815:0:0"
									},
									"scope": 132,
									"src": "1801:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1973:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 46,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1983:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1983:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1983:13:0"
											},
											{
												"id": 49,
												"nodeType": "PlaceholderStatement",
												"src": "2006:1:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1870:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 51,
									"name": "onlyOwner",
									"nameLocation": "1961:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1970:2:0"
									},
									"src": "1952:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2145:30:0",
										"statements": [
											{
												"expression": {
													"id": 57,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2162:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 56,
												"id": 58,
												"nodeType": "Return",
												"src": "2155:13:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2020:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2099:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2104:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2136:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2135:9:0"
									},
									"scope": 132,
									"src": "2090:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2293:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 65,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "2311:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2311:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 67,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2322:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2322:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2311:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2303:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2303:68:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2181:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2257:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2268:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2293:0:0"
									},
									"scope": 132,
									"src": "2248:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "2767:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2804:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2796:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 81,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2796:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2796:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 80,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2777:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2777:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2777:30:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2384:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 78,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 77,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "2757:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2757:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2722:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2739:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2767:0:0"
									},
									"scope": 132,
									"src": "2713:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "3033:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 97,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "3051:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3071:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3063:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 98,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3063:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3063:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3051:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3075:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3043:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3043:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "3043:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "3145:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 106,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "3126:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3126:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "3126:28:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2820:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 94,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 93,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "3023:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3023:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2972:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2998:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2990:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:18:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3033:0:0"
									},
									"scope": 132,
									"src": "2963:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3378:124:0",
										"statements": [
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3396:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "3388:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 117,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3388:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"id": 119,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3407:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3388:25:0"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3423:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "3432:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3423:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "3423:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 126,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3476:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "3486:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 125,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3455:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "EmitStatement",
												"src": "3450:45:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "3167:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3324:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3351:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3343:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:18:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3378:0:0"
									},
									"scope": 132,
									"src": "3315:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 597,
							"src": "1543:1961:0",
							"usedErrors": []
						},
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3638:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "3663:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "IERC20",
							"nameLocation": "3744:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "3757:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 143,
									"name": "Transfer",
									"nameLocation": "3926:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3951:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "3935:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3973:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "3957:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3985:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "3977:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3934:57:0"
									},
									"src": "3920:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "3998:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 152,
									"name": "Approval",
									"nameLocation": "4157:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4182:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4166:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4205:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4189:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4222:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4214:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4165:63:0"
									},
									"src": "4151:78:0"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "4235:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4315:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4326:2:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4352:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:9:0"
									},
									"scope": 209,
									"src": "4306:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "4367:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4453:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4471:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4463:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4462:17:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4503:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4502:9:0"
									},
									"scope": 209,
									"src": "4444:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4518:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4734:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4751:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4743:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4763:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4755:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4742:28:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4789:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4789:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:6:0"
									},
									"scope": 209,
									"src": "4725:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "4801:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5079:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5097:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5089:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5089:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5112:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5104:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5088:32:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5144:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5143:9:0"
									},
									"scope": 209,
									"src": "5070:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5159:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5815:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "5823:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5848:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "5840:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5822:33:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "5874:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5874:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:6:0"
									},
									"scope": 209,
									"src": "5806:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "5886:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6187:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6208:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6200:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6222:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6214:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6234:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6226:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6199:42:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6260:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6260:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6259:6:0"
									},
									"scope": 209,
									"src": "6178:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 597,
							"src": "3734:2534:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 210,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 132,
										"src": "6456:7:0"
									},
									"id": 211,
									"nodeType": "InheritanceSpecifier",
									"src": "6456:7:0"
								}
							],
							"canonicalName": "SnipeFinanceMultisenders",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 596,
							"linearizedBaseContracts": [
								596,
								132,
								21
							],
							"name": "SnipeFinanceMultisenders",
							"nameLocation": "6428:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "ddca3f43",
									"id": 213,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "6484:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 596,
									"src": "6469:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6469:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7260d3e",
									"id": 215,
									"mutability": "mutable",
									"name": "receiver",
									"nameLocation": "6516:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 596,
									"src": "6493:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 214,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6493:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9c8b9e7b",
									"id": 217,
									"mutability": "mutable",
									"name": "feeamounts",
									"nameLocation": "6545:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 596,
									"src": "6530:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6530:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "44b6209d",
									"id": 221,
									"mutability": "mutable",
									"name": "authorizedusers",
									"nameLocation": "6593:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 596,
									"src": "6561:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 220,
										"keyType": {
											"id": 218,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "6569:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "6561:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 219,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "6580:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3feff76d",
									"id": 224,
									"mutability": "mutable",
									"name": "tokenaddress",
									"nameLocation": "6628:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 596,
									"src": "6614:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$209",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 223,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 222,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 209,
											"src": "6614:6:0"
										},
										"referencedDeclaration": 209,
										"src": "6614:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$209",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17fc45e2",
									"id": 226,
									"mutability": "mutable",
									"name": "quantity",
									"nameLocation": "6706:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 596,
									"src": "6691:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 225,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6691:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "6771:72:0",
										"statements": [
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "6781:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 232,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "6800:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6800:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6792:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 230,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6792:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6792:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "6781:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "6781:27:0"
											},
											{
												"expression": {
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 237,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "6818:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_100000000000000_by_1",
															"typeString": "int_const 100000000000000"
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31",
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6824:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_100000000000000_by_1",
																"typeString": "int_const 100000000000000"
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6828:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3134",
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6834:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_14_by_1",
																	"typeString": "int_const 14"
																},
																"value": "14"
															},
															"src": "6828:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000_by_1",
																"typeString": "int_const 100000000000000"
															}
														},
														"src": "6824:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000_by_1",
															"typeString": "int_const 100000000000000"
														}
													},
													"src": "6818:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "6818:18:0"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6768:2:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6771:0:0"
									},
									"scope": 596,
									"src": "6757:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "6944:547:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6957:28:0",
														"subExpression": {
															"baseExpression": {
																"id": 255,
																"name": "authorizedusers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6958:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 258,
															"indexExpression": {
																"expression": {
																	"id": 256,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6974:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6974:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6958:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 262,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7012:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7012:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 260,
																	"name": "tokenaddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "6989:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$209",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 166,
																"src": "6989:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6989:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 265,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7026:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6989:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6957:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 289,
												"nodeType": "IfStatement",
												"src": "6954:273:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "7037:190:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 269,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "7060:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "7060:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 271,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "7073:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7060:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "596f75206861766520746f207061792066656520746f2075736520536e69706546696e616e6365204d756c74692062756c6b2066756e6374696f6e",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7078:61:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4eb86dec3b7c3e53e01f18b918268fa96a47c207e64bdfa8013fcfdaf9f9175d",
																			"typeString": "literal_string \"You have to pay fee to use SnipeFinance Multi bulk function\""
																		},
																		"value": "You have to pay fee to use SnipeFinance Multi bulk function"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_4eb86dec3b7c3e53e01f18b918268fa96a47c207e64bdfa8013fcfdaf9f9175d",
																			"typeString": "literal_string \"You have to pay fee to use SnipeFinance Multi bulk function\""
																		}
																	],
																	"id": 268,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7051:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7051:89:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 275,
															"nodeType": "ExpressionStatement",
															"src": "7051:89:0"
														},
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 276,
																	"name": "feeamounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "7154:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 277,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "7168:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7154:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "7154:17:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 285,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "7212:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 282,
																				"name": "receiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 215,
																				"src": "7193:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7185:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 280,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7185:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7185:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "7185:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7185:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "7185:31:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 313,
													"nodeType": "Block",
													"src": "7283:67:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 308,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 252,
																			"src": "7329:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 310,
																		"indexExpression": {
																			"id": 309,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "7336:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7329:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 303,
																					"name": "recipients",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 249,
																					"src": "7305:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 305,
																				"indexExpression": {
																					"id": 304,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 291,
																					"src": "7316:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7305:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7297:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 301,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7297:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7297:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "7297:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7297:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 312,
															"nodeType": "ExpressionStatement",
															"src": "7297:42:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 294,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "7256:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 295,
															"name": "recipients",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7260:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7260:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7256:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 314,
												"initializationExpression": {
													"assignments": [
														291
													],
													"declarations": [
														{
															"constant": false,
															"id": 291,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7249:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 314,
															"src": "7241:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 290,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7241:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 293,
													"initialValue": {
														"hexValue": "30",
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7253:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7241:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7279:3:0",
														"subExpression": {
															"id": 298,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "7279:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 300,
													"nodeType": "ExpressionStatement",
													"src": "7279:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7236:114:0"
											},
											{
												"assignments": [
													316
												],
												"declarations": [
													{
														"constant": false,
														"id": 316,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "7372:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 336,
														"src": "7364:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 315,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 322,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 319,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "7390:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SnipeFinanceMultisenders_$596",
																	"typeString": "contract SnipeFinanceMultisenders"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SnipeFinanceMultisenders_$596",
																	"typeString": "contract SnipeFinanceMultisenders"
																}
															],
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 317,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7382:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7382:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "7382:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7364:39:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 323,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "7422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7432:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7422:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 335,
												"nodeType": "IfStatement",
												"src": "7418:66:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 332,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "7476:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 328,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7455:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7455:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7447:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 326,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7447:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7447:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"src": "7447:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																"typeString": "function (uint256)"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7447:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 334,
													"nodeType": "ExpressionStatement",
													"src": "7447:37:0"
												}
											}
										]
									},
									"functionSelector": "e3cec849",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "BNBmultisender",
									"nameLocation": "6858:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "6890:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "6873:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 247,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6873:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 248,
													"nodeType": "ArrayTypeName",
													"src": "6873:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "6919:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "6902:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 250,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6902:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 251,
													"nodeType": "ArrayTypeName",
													"src": "6902:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6872:54:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6944:0:0"
									},
									"scope": 596,
									"src": "6849:642:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "7641:1026:0",
										"statements": [
											{
												"body": {
													"id": 372,
													"nodeType": "Block",
													"src": "7760:55:0",
													"statements": [
														{
															"expression": {
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 360,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "7774:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 362,
																	"indexExpression": {
																		"id": 361,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 350,
																		"src": "7781:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7774:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 363,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "7786:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 365,
																		"indexExpression": {
																			"id": 364,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 350,
																			"src": "7793:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7786:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7798:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7802:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "7798:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	},
																	"src": "7786:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7774:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 371,
															"nodeType": "ExpressionStatement",
															"src": "7774:30:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 353,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "7736:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 354,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "7740:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7740:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7736:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"initializationExpression": {
													"assignments": [
														350
													],
													"declarations": [
														{
															"constant": false,
															"id": 350,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7729:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 373,
															"src": "7721:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 349,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7721:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 352,
													"initialValue": {
														"hexValue": "30",
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7733:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7721:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7755:3:0",
														"subExpression": {
															"id": 357,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "7755:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 359,
													"nodeType": "ExpressionStatement",
													"src": "7755:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7716:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 375,
																	"name": "recipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "7832:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7832:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 377,
																	"name": "values",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "7853:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7853:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7832:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420696e7075742073697a65",
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7868:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e22400be963ec94eedaab5f5e85ec1f604befa6e2a201e4a81aa2d11f465281",
																"typeString": "literal_string \"invalid input size\""
															},
															"value": "invalid input size"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e22400be963ec94eedaab5f5e85ec1f604befa6e2a201e4a81aa2d11f465281",
																"typeString": "literal_string \"invalid input size\""
															}
														],
														"id": 374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7824:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7824:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "7824:65:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "8030:28:0",
														"subExpression": {
															"baseExpression": {
																"id": 383,
																"name": "authorizedusers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "8031:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 386,
															"indexExpression": {
																"expression": {
																	"id": 384,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8047:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8047:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8031:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 390,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8090:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8090:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 388,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "8074:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$209",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 166,
																"src": "8074:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8074:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 393,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "8104:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8074:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8030:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 437,
																"name": "authorizedusers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "8396:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 440,
															"indexExpression": {
																"expression": {
																	"id": 438,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8412:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8412:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8396:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 443,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8455:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8455:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 441,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "8439:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$209",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "8439:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8439:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 446,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "8469:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8439:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8396:81:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 478,
													"nodeType": "IfStatement",
													"src": "8379:282:0",
													"trueBody": {
														"id": 477,
														"nodeType": "Block",
														"src": "8488:173:0",
														"statements": [
															{
																"body": {
																	"id": 475,
																	"nodeType": "Block",
																	"src": "8546:105:0",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"expression": {
																									"id": 463,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "8591:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 464,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "8591:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 465,
																									"name": "recipients",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 343,
																									"src": "8603:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																										"typeString": "address[] memory"
																									}
																								},
																								"id": 467,
																								"indexExpression": {
																									"id": 466,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 450,
																									"src": "8614:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8603:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 468,
																									"name": "values",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 346,
																									"src": "8618:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																										"typeString": "uint256[] memory"
																									}
																								},
																								"id": 470,
																								"indexExpression": {
																									"id": 469,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 450,
																									"src": "8625:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8618:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 461,
																								"name": "token",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 340,
																								"src": "8572:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$209",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 462,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "transferFrom",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 208,
																							"src": "8572:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256) external returns (bool)"
																							}
																						},
																						"id": 471,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8572:56:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"hexValue": "6572726f",
																						"id": 472,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8629:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_51a72d8ab00e24566c4d8b37fa1ea65e289bf26a19a07926e60705c9aca4d230",
																							"typeString": "literal_string \"erro\""
																						},
																						"value": "erro"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_51a72d8ab00e24566c4d8b37fa1ea65e289bf26a19a07926e60705c9aca4d230",
																							"typeString": "literal_string \"erro\""
																						}
																					],
																					"id": 460,
																					"name": "require",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967278,
																						4294967278
																					],
																					"referencedDeclaration": 4294967278,
																					"src": "8564:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (bool,string memory) pure"
																					}
																				},
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8564:72:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 474,
																			"nodeType": "ExpressionStatement",
																			"src": "8564:72:0"
																		}
																	]
																},
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 453,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "8522:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"expression": {
																			"id": 454,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "8526:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "8526:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8522:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 476,
																"initializationExpression": {
																	"assignments": [
																		450
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 450,
																			"mutability": "mutable",
																			"name": "i",
																			"nameLocation": "8515:1:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 476,
																			"src": "8507:9:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 449,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "8507:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 452,
																	"initialValue": {
																		"hexValue": "30",
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8519:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "8507:13:0"
																},
																"loopExpression": {
																	"expression": {
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "8541:3:0",
																		"subExpression": {
																			"id": 457,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 450,
																			"src": "8541:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 459,
																	"nodeType": "ExpressionStatement",
																	"src": "8541:3:0"
																},
																"nodeType": "ForStatement",
																"src": "8502:149:0"
															}
														]
													}
												},
												"id": 479,
												"nodeType": "IfStatement",
												"src": "8013:648:0",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "8123:250:0",
													"statements": [
														{
															"expression": {
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 396,
																	"name": "feeamounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "8137:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 397,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "8151:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8137:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 399,
															"nodeType": "ExpressionStatement",
															"src": "8137:17:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 405,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "8195:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 402,
																				"name": "receiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 215,
																				"src": "8176:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8168:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8168:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8168:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "8168:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8168:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 407,
															"nodeType": "ExpressionStatement",
															"src": "8168:31:0"
														},
														{
															"body": {
																"id": 434,
																"nodeType": "Block",
																"src": "8257:106:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 422,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "8302:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 423,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "8302:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"baseExpression": {
																								"id": 424,
																								"name": "recipients",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 343,
																								"src": "8314:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																									"typeString": "address[] memory"
																								}
																							},
																							"id": 426,
																							"indexExpression": {
																								"id": 425,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 409,
																								"src": "8325:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "8314:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"baseExpression": {
																								"id": 427,
																								"name": "values",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 346,
																								"src": "8329:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 429,
																							"indexExpression": {
																								"id": 428,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 409,
																								"src": "8336:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "8329:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 420,
																							"name": "token",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 340,
																							"src": "8283:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$209",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 421,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "transferFrom",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 208,
																						"src": "8283:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																							"typeString": "function (address,address,uint256) external returns (bool)"
																						}
																					},
																					"id": 430,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8283:56:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "6572726f72",
																					"id": 431,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8340:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
																						"typeString": "literal_string \"error\""
																					},
																					"value": "error"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
																						"typeString": "literal_string \"error\""
																					}
																				],
																				"id": 419,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8275:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8275:73:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 433,
																		"nodeType": "ExpressionStatement",
																		"src": "8275:73:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 412,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "8233:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 413,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "8237:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8237:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8233:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 435,
															"initializationExpression": {
																"assignments": [
																	409
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 409,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "8226:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 435,
																		"src": "8218:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 408,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8218:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 411,
																"initialValue": {
																	"hexValue": "30",
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8230:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "8218:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "8252:3:0",
																	"subExpression": {
																		"id": 416,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "8252:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 418,
																"nodeType": "ExpressionStatement",
																"src": "8252:3:0"
															},
															"nodeType": "ForStatement",
															"src": "8213:150:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "9cbd3433",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "TOKENmultisender",
									"nameLocation": "7509:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7542:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "7535:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$209",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 209,
														"src": "7535:6:0"
													},
													"referencedDeclaration": 209,
													"src": "7535:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$209",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "7574:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "7557:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 341,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7557:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 342,
													"nodeType": "ArrayTypeName",
													"src": "7557:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7611:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "7594:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 344,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7594:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 345,
													"nodeType": "ArrayTypeName",
													"src": "7594:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7525:98:0"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7641:0:0"
									},
									"scope": 596,
									"src": "7500:1167:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "8783:68:0",
										"statements": [
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 490,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "8793:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 491,
														"name": "newfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "8799:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8793:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "8793:12:0"
											},
											{
												"expression": {
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 494,
														"name": "receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "8815:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 497,
																"name": "_receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "8834:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8826:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 495,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8826:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8826:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "8815:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "8815:29:0"
											}
										]
									},
									"functionSelector": "126ccd94",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 488,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 487,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "8764:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8764:9:0"
										}
									],
									"name": "setfeeToUse",
									"nameLocation": "8716:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "newfee",
												"nameLocation": "8737:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8729:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "8753:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8745:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8728:35:0"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8783:0:0"
									},
									"scope": 596,
									"src": "8707:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "8947:87:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "feeamounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "8960:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8973:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8960:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"nodeType": "IfStatement",
												"src": "8957:70:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 516,
																"name": "feeamounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "9016:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 512,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8995:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8995:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8987:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 510,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8987:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8987:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"src": "8987:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																"typeString": "function (uint256)"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8987:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 518,
													"nodeType": "ExpressionStatement",
													"src": "8987:40:0"
												}
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "8928:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8928:9:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "8917:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8925:2:0"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8947:0:0"
									},
									"scope": 596,
									"src": "8908:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "9135:46:0",
										"statements": [
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 528,
															"name": "authorizedusers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "9145:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 530,
														"indexExpression": {
															"id": 529,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "9161:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9145:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9170:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "9145:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "9145:29:0"
											}
										]
									},
									"functionSelector": "4b4fb1b0",
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 525,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "9116:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9116:9:0"
										}
									],
									"name": "authorizeToUse",
									"nameLocation": "9086:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "9109:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "9101:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9100:15:0"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9135:0:0"
									},
									"scope": 596,
									"src": "9077:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "9325:98:0",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 544,
														"name": "authorizedusers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "9338:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 546,
													"indexExpression": {
														"id": 545,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "9354:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9338:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "9335:82:0",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "9362:55:0",
													"statements": [
														{
															"expression": {
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 547,
																		"name": "authorizedusers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "9376:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 549,
																	"indexExpression": {
																		"id": 548,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "9392:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9376:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 550,
																	"name": "_bool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "9401:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9376:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 552,
															"nodeType": "ExpressionStatement",
															"src": "9376:30:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "fb520af2",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 542,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 541,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "9306:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9306:9:0"
										}
									],
									"name": "setauthor",
									"nameLocation": "9269:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "9287:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "9279:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "_bool",
												"nameLocation": "9299:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "9294:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9294:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9278:27:0"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9325:0:0"
									},
									"scope": 596,
									"src": "9260:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "9553:65:0",
										"statements": [
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 566,
														"name": "tokenaddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "9563:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$209",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 567,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "9578:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$209",
															"typeString": "contract IERC20"
														}
													},
													"src": "9563:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$209",
														"typeString": "contract IERC20"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "9563:20:0"
											},
											{
												"expression": {
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 570,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "9593:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 571,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "9604:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9593:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "9593:18:0"
											}
										]
									},
									"functionSelector": "2fc75eb0",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 564,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 563,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "9534:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9534:9:0"
										}
									],
									"name": "SetTokenToholdAndQuantity",
									"nameLocation": "9476:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9510:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "9503:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$209",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 558,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 557,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 209,
														"src": "9503:6:0"
													},
													"referencedDeclaration": 209,
													"src": "9503:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$209",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9525:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "9517:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9502:31:0"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9553:0:0"
									},
									"scope": 596,
									"src": "9467:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "9692:45:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 582,
														"name": "authorizedusers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "9709:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 584,
													"indexExpression": {
														"id": 583,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "9725:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9709:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 581,
												"id": 585,
												"nodeType": "Return",
												"src": "9702:28:0"
											}
										]
									},
									"functionSelector": "a4df0256",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readAuthorizedUsers",
									"nameLocation": "9633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "9661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "9653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9652:14:0"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "9687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9686:6:0"
									},
									"scope": 596,
									"src": "9624:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "9824:27:0",
										"statements": [
											{
												"expression": {
													"id": 592,
													"name": "fee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 213,
													"src": "9841:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 593,
												"nodeType": "Return",
												"src": "9834:10:0"
											}
										]
									},
									"functionSelector": "b810c636",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeDetails",
									"nameLocation": "9781:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9794:2:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "9816:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9815:9:0"
									},
									"scope": 596,
									"src": "9772:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 597,
							"src": "6419:3434:0",
							"usedErrors": []
						}
					],
					"src": "139:9714:0"
				},
				"id": 0
			}
		}
	}
}