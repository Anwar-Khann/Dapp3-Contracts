{
	"id": "2326ef8974f0ba790177bfa9df7edbd2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity 0.8.16;\r\n\r\nimport './IBEP20.sol';\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract SnipeFinanceMultisenders is Ownable{\r\n    uint256 public fee;\r\n    address payable public receiver;\r\n    uint256 public feeamounts;\r\n    mapping(address => bool) public authorizedusers;\r\n    IBEP20 public tokenaddress; // HODL SNIPE token to use the tool for free\r\n    uint256 public quantity; // must HODL atleast tokens set\r\n    \r\n    constructor() {\r\n        receiver = payable(owner());\r\n        fee = 1 * 10 ** 14;\r\n    }\r\n\r\n    function BNBmultisender(address[] memory recipients, uint256[] memory values) external payable {\r\n        if(!authorizedusers[msg.sender] || tokenaddress.balanceOf(msg.sender) < quantity ) {\r\n            require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Multi bulk function\");\r\n            feeamounts += fee;\r\n            receiver.transfer(fee);\r\n        }\r\n        for (uint256 i = 0; i < recipients.length; i++)\r\n            payable(recipients[i]).transfer(values[i]);\r\n    \r\n        uint256 balance = address(this).balance;\r\n    \r\n        if (balance > 0)\r\n            payable(msg.sender).transfer(balance);\r\n    }\r\n    \r\n    function TOKENmultisender(IBEP20 token, address[] memory recipients, uint256[] memory values) external payable {\r\n        if(!authorizedusers[msg.sender] || tokenaddress.balanceOf(msg.sender) < quantity) {\r\n            require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Token Multi bulk function\");\r\n            feeamounts += fee;\r\n            payable(receiver).transfer(fee);\r\n        }\r\n        uint256 total = 0;\r\n        for (uint256 i = 0; i < recipients.length; i++)\r\n            total += values[i];\r\n        require(token.transferFrom(msg.sender, address(this), total));\r\n        for (uint256 i = 0; i < recipients.length; i++)\r\n            require(token.transfer(recipients[i], values[i]));\r\n    }\r\n    \r\n    // setfeeToUse  --- function 1\r\n    function setfeeToUse (uint256 newfee, address _receiver) onlyOwner external {\r\n        fee = newfee;\r\n        receiver = payable(_receiver);\r\n    }\r\n    // Simple BNB withdraw function  --- function 1\r\n    function withdraw() onlyOwner external {\r\n        if(feeamounts > 0)\r\n           payable(msg.sender).transfer(feeamounts);\r\n    }\r\n    // authorizetouse ---- function 2\r\n    function authorizeToUse(address _addr) onlyOwner external {\r\n        authorizedusers[_addr] = true;\r\n    }\r\n\r\n    // set authorised addresses  (owner can set address true or false ) \r\n    function setauthor(address _addr, bool _bool) onlyOwner external {\r\n        if(authorizedusers[_addr]) {\r\n            authorizedusers[_addr] = _bool;\r\n        }\r\n    }\r\n\r\n    // Set Token Address and Quantity\r\n    function SetTokenToholdAndQuantity (IBEP20 token, uint256 _amount) onlyOwner external {\r\n        tokenaddress = token;\r\n        quantity = _amount;\r\n    }\r\n\r\n    function readAuthorizedUsers(address user) public view returns(bool){\r\n        return authorizedusers[user];\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"SnipeFinanceMultisenders/IBEP20.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity 0.8.16;\r\n\r\ninterface IBEP20 {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SnipeFinanceMultisenders/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SnipeFinanceMultisenders/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SnipeFinanceMultisenders/IBEP20.sol\":{\"keccak256\":\"0xff4033f573cb1426d8417bbb73a1c980f014803bbbb739b0a28c7e55048cda11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0cec866199794c1d8356dc4e4d41af9ddc588be16b30da43d63772943970643\",\"dweb:/ipfs/QmPvFxoryGjzB4HDsXn6rgZDFzw7p8wqRDBvj4jHtndCdS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol": {
				"SnipeFinanceMultisenders": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "BNBmultisender",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "SetTokenToholdAndQuantity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TOKENmultisender",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "authorizeToUse",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "authorizedusers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeamounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "quantity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "readAuthorizedUsers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "receiver",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_bool",
									"type": "bool"
								}
							],
							"name": "setauthor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newfee",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								}
							],
							"name": "setfeeToUse",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenaddress",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":139:3061  contract SnipeFinanceMultisenders is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":485:574  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n  sload\n    /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":510:518  receiver */\n  0x02\n    /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":510:537  receiver = payable(owner()) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n  swap1\n  swap3\n  and\n    /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":510:537  receiver = payable(owner()) */\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":554:566  1 * 10 ** 14 */\n  0x5af3107a4000\n  0x01\n    /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":548:566  fee = 1 * 10 ** 14 */\n  sstore\n    /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":139:3061  contract SnipeFinanceMultisenders is Ownable{... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":139:3061  contract SnipeFinanceMultisenders is Ownable{... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":139:3061  contract SnipeFinanceMultisenders is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xddca3f43\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe3cec849\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf7260d3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfb520af2\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9c8b9e7b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9cbd3433\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa4df0256\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x3feff76d\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x3feff76d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x44b6209d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4b4fb1b0\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x126ccd94\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x17fc45e2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2fc75eb0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1999:2146  function setfeeToUse (uint256 newfee, address _receiver) onlyOwner external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":417:440  uint256 public quantity */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      sload(0x06)\n      dup2\n      jump\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":616:641   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":604:606   */\n      0x20\n        /* \"#utility.yul\":589:607   */\n      add\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":417:440  uint256 public quantity */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2781:2935  function SetTokenToholdAndQuantity (IBEP20 token, uint256 _amount) onlyOwner external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_23\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2205:2334  function withdraw() onlyOwner external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_23\n      tag_39\n      jump\t// in\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":339:365  IBEP20 public tokenaddress */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      sload(0x05)\n      tag_41\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_41:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1164:1196   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1146:1197   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1134:1136   */\n      0x20\n        /* \"#utility.yul\":1119:1137   */\n      add\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":339:365  IBEP20 public tokenaddress */\n      tag_30\n        /* \"#utility.yul\":986:1203   */\n      jump\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":285:332  mapping(address => bool) public authorizedusers */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":1625:1639   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1618:1640   */\n      iszero\n        /* \"#utility.yul\":1600:1641   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1588:1590   */\n      0x20\n        /* \"#utility.yul\":1573:1591   */\n      add\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":285:332  mapping(address => bool) public authorizedusers */\n      tag_30\n        /* \"#utility.yul\":1460:1647   */\n      jump\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2379:2485  function authorizeToUse(address _addr) onlyOwner external {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_23\n      tag_54\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_23\n      tag_58\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_41)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":253:278  uint256 public feeamounts */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_28\n      sload(0x03)\n      dup2\n      jump\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1229:1951  function TOKENmultisender(IBEP20 token, address[] memory recipients, uint256[] memory values) external payable {... */\n    tag_12:\n      tag_23\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2943:3058  function readAuthorizedUsers(address user) public view returns(bool){... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_46\n      tag_74\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":3029:3050  authorizedusers[user] */\n      and\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":3006:3010  bool */\n      0x00\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":3029:3050  authorizedusers[user] */\n      swap1\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":3029:3044  authorizedusers */\n      0x04\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":3029:3050  authorizedusers[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2943:3058  function readAuthorizedUsers(address user) public view returns(bool){... */\n      jump\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":190:208  uint256 public fee */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_28\n      sload(0x01)\n      dup2\n      jump\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":582:1217  function BNBmultisender(address[] memory recipients, uint256[] memory values) external payable {... */\n    tag_15:\n      tag_23\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_23\n      tag_87\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":215:246  address payable public receiver */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      sload(0x02)\n      tag_41\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2567:2734  function setauthor(address _addr, bool _bool) onlyOwner external {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_23\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1999:2146  function setfeeToUse (uint256 newfee, address _receiver) onlyOwner external {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_100:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2086:2089  fee */\n      0x01\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2086:2098  fee = newfee */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2109:2117  receiver */\n      0x02\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2109:2138  receiver = payable(_receiver) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1999:2146  function setfeeToUse (uint256 newfee, address _receiver) onlyOwner external {... */\n      jump\t// out\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2781:2935  function SetTokenToholdAndQuantity (IBEP20 token, uint256 _amount) onlyOwner external {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_104:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2878:2890  tokenaddress */\n      0x05\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2878:2898  tokenaddress = token */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2909:2917  quantity */\n      0x06\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2909:2927  quantity = _amount */\n      sstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2781:2935  function SetTokenToholdAndQuantity (IBEP20 token, uint256 _amount) onlyOwner external {... */\n      jump\t// out\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2205:2334  function withdraw() onlyOwner external {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_107:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2258:2268  feeamounts */\n      sload(0x03)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2258:2272  feeamounts > 0 */\n      iszero\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2255:2326  if(feeamounts > 0)... */\n      tag_109\n      jumpi\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2315:2325  feeamounts */\n      sload(0x03)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2286:2326  payable(msg.sender).transfer(feeamounts) */\n      mload(0x40)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2294:2304  msg.sender */\n      caller\n      swap2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2286:2326  payable(msg.sender).transfer(feeamounts) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2315:2325  feeamounts */\n      dup6\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2294:2304  msg.sender */\n      dup9\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2286:2326  payable(msg.sender).transfer(feeamounts) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2255:2326  if(feeamounts > 0)... */\n    tag_109:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2205:2334  function withdraw() onlyOwner external {... */\n      jump\t// out\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2379:2485  function authorizeToUse(address _addr) onlyOwner external {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2448:2470  authorizedusers[_addr] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2448:2463  authorizedusers */\n      0x04\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2448:2470  authorizedusers[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2448:2477  authorizedusers[_addr] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2473:2477  true */\n      0x01\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2448:2477  authorizedusers[_addr] = true */\n      or\n      swap1\n      sstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2379:2485  function authorizeToUse(address _addr) onlyOwner external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1229:1951  function TOKENmultisender(IBEP20 token, address[] memory recipients, uint256[] memory values) external payable {... */\n    tag_71:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1371:1381  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1355:1382  authorizedusers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1355:1370  authorizedusers */\n      0x04\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1355:1382  authorizedusers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1354:1382  !authorizedusers[msg.sender] */\n      iszero\n      dup1\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1354:1431  !authorizedusers[msg.sender] || tokenaddress.balanceOf(msg.sender) < quantity */\n      tag_122\n      jumpi\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1423:1431  quantity */\n      sload(0x06)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1386:1398  tokenaddress */\n      sload(0x05)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1386:1420  tokenaddress.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1409:1419  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1386:1420  tokenaddress.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1146:1197   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1386:1398  tokenaddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1386:1408  tokenaddress.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1119:1137   */\n      0x24\n      add\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1386:1420  tokenaddress.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1386:1431  tokenaddress.balanceOf(msg.sender) < quantity */\n      lt\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1354:1431  !authorizedusers[msg.sender] || tokenaddress.balanceOf(msg.sender) < quantity */\n    tag_122:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1351:1633  if(!authorizedusers[msg.sender] || tokenaddress.balanceOf(msg.sender) < quantity) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1470:1473  fee */\n      sload(0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1457:1466  msg.value */\n      callvalue\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1457:1473  msg.value >= fee */\n      lt\n      iszero\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1448:1543  require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Token Multi bulk function\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6343:6345   */\n      0x20\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1448:1543  require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Token Multi bulk function\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6325:6346   */\n      mstore\n        /* \"#utility.yul\":6382:6384   */\n      0x41\n        /* \"#utility.yul\":6362:6380   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6355:6385   */\n      mstore\n        /* \"#utility.yul\":6421:6455   */\n      0x596f75206861766520746f207061792066656520746f2075736520536e697065\n        /* \"#utility.yul\":6401:6419   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6394:6456   */\n      mstore\n        /* \"#utility.yul\":6492:6526   */\n      0x46696e616e636520546f6b656e204d756c74692062756c6b2066756e6374696f\n        /* \"#utility.yul\":6472:6490   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6465:6527   */\n      mstore\n      shl(0xf9, 0x37)\n        /* \"#utility.yul\":6543:6562   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":6536:6568   */\n      mstore\n        /* \"#utility.yul\":6585:6604   */\n      0xa4\n      add\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1448:1543  require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Token Multi bulk function\") */\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1572:1575  fee */\n      sload(0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1558:1568  feeamounts */\n      0x03\n      0x00\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1558:1575  feeamounts += fee */\n      dup3\n      dup3\n      sload\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1598:1606  receiver */\n      sload(0x02)\n      0x01\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1617:1620  fee */\n      sload\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1590:1621  payable(receiver).transfer(fee) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1598:1606  receiver */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1590:1621  payable(receiver).transfer(fee) */\n      dup2\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1617:1620  fee */\n      swap1\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1598:1606  receiver */\n      0x00\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1590:1621  payable(receiver).transfer(fee) */\n      dup2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1598:1606  receiver */\n      dup2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1590:1621  payable(receiver).transfer(fee) */\n      dup2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1617:1620  fee */\n      dup6\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1598:1606  receiver */\n      dup9\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1590:1621  payable(receiver).transfer(fee) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1351:1633  if(!authorizedusers[msg.sender] || tokenaddress.balanceOf(msg.sender) < quantity) {... */\n    tag_128:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1643:1656  uint256 total */\n      0x00\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1676:1685  uint256 i */\n      dup1\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1671:1750  for (uint256 i = 0; i < recipients.length; i++)... */\n    tag_136:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1695:1705  recipients */\n      dup4\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1695:1712  recipients.length */\n      mload\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1691:1692  i */\n      dup2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1691:1712  i < recipients.length */\n      lt\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1671:1750  for (uint256 i = 0; i < recipients.length; i++)... */\n      iszero\n      tag_137\n      jumpi\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1741:1747  values */\n      dup3\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1748:1749  i */\n      dup2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1741:1750  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_140\n      jumpi\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1732:1750  total += values[i] */\n      dup3\n      tag_142\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_142:\n      swap2\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1714:1717  i++ */\n      dup1\n      tag_143\n      dup2\n      tag_144\n      jump\t// in\n    tag_143:\n      swap2\n      pop\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1671:1750  for (uint256 i = 0; i < recipients.length; i++)... */\n      jump(tag_136)\n    tag_137:\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1769:1821  token.transferFrom(msg.sender, address(this), total) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1788:1798  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1769:1821  token.transferFrom(msg.sender, address(this), total) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7389:7423   */\n      mstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1808:1812  this */\n      address\n        /* \"#utility.yul\":7439:7457   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7432:7475   */\n      mstore\n        /* \"#utility.yul\":7491:7509   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7484:7518   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1769:1787  token.transferFrom */\n      dup6\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":7324:7342   */\n      0x64\n      add\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1769:1821  token.transferFrom(msg.sender, address(this), total) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1761:1822  require(token.transferFrom(msg.sender, address(this), total)) */\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1838:1847  uint256 i */\n      0x00\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1833:1943  for (uint256 i = 0; i < recipients.length; i++)... */\n    tag_152:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1857:1867  recipients */\n      dup4\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1857:1874  recipients.length */\n      mload\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1853:1854  i */\n      dup2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1853:1874  i < recipients.length */\n      lt\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1833:1943  for (uint256 i = 0; i < recipients.length; i++)... */\n      iszero\n      tag_153\n      jumpi\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1902:1907  token */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1902:1916  token.transfer */\n      and\n      0xa9059cbb\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1917:1927  recipients */\n      dup6\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1928:1929  i */\n      dup4\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1917:1930  recipients[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_156\n      jumpi\n      tag_156\n      tag_141\n      jump\t// in\n    tag_156:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1932:1938  values */\n      dup6\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1939:1940  i */\n      dup5\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1932:1941  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_158\n      jumpi\n      tag_158\n      tag_141\n      jump\t// in\n    tag_158:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1902:1942  token.transfer(recipients[i], values[i]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap3\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7971:8003   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":7953:8004   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8035:8037   */\n      0x20\n        /* \"#utility.yul\":8020:8038   */\n      dup3\n      add\n        /* \"#utility.yul\":8013:8047   */\n      mstore\n        /* \"#utility.yul\":7941:7943   */\n      0x40\n        /* \"#utility.yul\":7926:7944   */\n      add\n      swap1\n        /* \"#utility.yul\":7779:8053   */\n      jump\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1902:1942  token.transfer(recipients[i], values[i]) */\n    tag_159:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_163:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1894:1943  require(token.transfer(recipients[i], values[i])) */\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1876:1879  i++ */\n      dup1\n      tag_165\n      dup2\n      tag_144\n      jump\t// in\n    tag_165:\n      swap2\n      pop\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1833:1943  for (uint256 i = 0; i < recipients.length; i++)... */\n      jump(tag_152)\n    tag_153:\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1340:1951  {... */\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1229:1951  function TOKENmultisender(IBEP20 token, address[] memory recipients, uint256[] memory values) external payable {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":582:1217  function BNBmultisender(address[] memory recipients, uint256[] memory values) external payable {... */\n    tag_84:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":708:718  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":692:719  authorizedusers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":692:707  authorizedusers */\n      0x04\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":692:719  authorizedusers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":691:719  !authorizedusers[msg.sender] */\n      iszero\n      dup1\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":691:768  !authorizedusers[msg.sender] || tokenaddress.balanceOf(msg.sender) < quantity */\n      tag_168\n      jumpi\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":760:768  quantity */\n      sload(0x06)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":723:735  tokenaddress */\n      sload(0x05)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":723:757  tokenaddress.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":746:756  msg.sender */\n      caller\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":723:757  tokenaddress.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1146:1197   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":723:735  tokenaddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":723:745  tokenaddress.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1119:1137   */\n      0x24\n      add\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":723:757  tokenaddress.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_172:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":723:768  tokenaddress.balanceOf(msg.sender) < quantity */\n      lt\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":691:768  !authorizedusers[msg.sender] || tokenaddress.balanceOf(msg.sender) < quantity */\n    tag_168:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":688:956  if(!authorizedusers[msg.sender] || tokenaddress.balanceOf(msg.sender) < quantity ) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":808:811  fee */\n      sload(0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":795:804  msg.value */\n      callvalue\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":795:811  msg.value >= fee */\n      lt\n      iszero\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":786:875  require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Multi bulk function\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8260:8262   */\n      0x20\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":786:875  require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Multi bulk function\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8242:8263   */\n      mstore\n        /* \"#utility.yul\":8299:8301   */\n      0x3b\n        /* \"#utility.yul\":8279:8297   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8272:8302   */\n      mstore\n        /* \"#utility.yul\":8338:8372   */\n      0x596f75206861766520746f207061792066656520746f2075736520536e697065\n        /* \"#utility.yul\":8318:8336   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8311:8373   */\n      mstore\n        /* \"#utility.yul\":8409:8438   */\n      0x46696e616e6365204d756c74692062756c6b2066756e6374696f6e0000000000\n        /* \"#utility.yul\":8389:8407   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8382:8439   */\n      mstore\n        /* \"#utility.yul\":8456:8475   */\n      0x84\n      add\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":786:875  require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Multi bulk function\") */\n      tag_130\n        /* \"#utility.yul\":8058:8481   */\n      jump\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":786:875  require (msg.value >= fee, \"You have to pay fee to use SnipeFinance Multi bulk function\") */\n    tag_174:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":904:907  fee */\n      sload(0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":890:900  feeamounts */\n      0x03\n      0x00\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":890:907  feeamounts += fee */\n      dup3\n      dup3\n      sload\n      tag_177\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_177:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":922:930  receiver */\n      sload(0x02)\n      0x01\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":940:943  fee */\n      sload\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":922:944  receiver.transfer(fee) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":922:930  receiver */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":922:944  receiver.transfer(fee) */\n      dup2\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":940:943  fee */\n      swap1\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":922:930  receiver */\n      0x00\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":922:944  receiver.transfer(fee) */\n      dup2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":922:930  receiver */\n      dup2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":922:944  receiver.transfer(fee) */\n      dup2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":940:943  fee */\n      dup6\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":922:930  receiver */\n      dup9\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":922:944  receiver.transfer(fee) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":688:956  if(!authorizedusers[msg.sender] || tokenaddress.balanceOf(msg.sender) < quantity ) {... */\n    tag_173:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":971:980  uint256 i */\n      0x00\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":966:1069  for (uint256 i = 0; i < recipients.length; i++)... */\n    tag_180:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":990:1000  recipients */\n      dup3\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":990:1007  recipients.length */\n      mload\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":986:987  i */\n      dup2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":986:1007  i < recipients.length */\n      lt\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":966:1069  for (uint256 i = 0; i < recipients.length; i++)... */\n      iszero\n      tag_181\n      jumpi\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1035:1045  recipients */\n      dup3\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1046:1047  i */\n      dup2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1035:1048  recipients[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_184\n      jumpi\n      tag_184\n      tag_141\n      jump\t// in\n    tag_184:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1027:1058  payable(recipients[i]).transfer */\n      and\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1027:1069  payable(recipients[i]).transfer(values[i]) */\n      0x08fc\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1059:1065  values */\n      dup4\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1066:1067  i */\n      dup4\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1059:1068  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_186\n      jumpi\n      tag_186\n      tag_141\n      jump\t// in\n    tag_186:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1027:1069  payable(recipients[i]).transfer(values[i]) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1009:1012  i++ */\n      dup1\n      tag_189\n      dup2\n      tag_144\n      jump\t// in\n    tag_189:\n      swap2\n      pop\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":966:1069  for (uint256 i = 0; i < recipients.length; i++)... */\n      jump(tag_180)\n    tag_181:\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1104:1125  address(this).balance */\n      selfbalance\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1146:1157  balance > 0 */\n      dup1\n      iszero\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1142:1209  if (balance > 0)... */\n      tag_190\n      jumpi\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1172:1209  payable(msg.sender).transfer(balance) */\n      mload(0x40)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1180:1190  msg.sender */\n      caller\n      swap1\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1172:1209  payable(msg.sender).transfer(balance) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1201:1208  balance */\n      dup4\n      swap1\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1172:1209  payable(msg.sender).transfer(balance) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1201:1208  balance */\n      dup6\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1180:1190  msg.sender */\n      dup9\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1172:1209  payable(msg.sender).transfer(balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":1142:1209  if (balance > 0)... */\n    tag_190:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":677:1217  {... */\n      pop\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":582:1217  function BNBmultisender(address[] memory recipients, uint256[] memory values) external payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8688:8690   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8670:8691   */\n      mstore\n        /* \"#utility.yul\":8727:8729   */\n      0x26\n        /* \"#utility.yul\":8707:8725   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8700:8730   */\n      mstore\n        /* \"#utility.yul\":8766:8800   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8746:8764   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8739:8801   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8817:8835   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8810:8846   */\n      mstore\n        /* \"#utility.yul\":8863:8882   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_130\n        /* \"#utility.yul\":8486:8888   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2567:2734  function setauthor(address _addr, bool _bool) onlyOwner external {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2646:2668  authorizedusers[_addr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2646:2661  authorizedusers */\n      0x04\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2646:2668  authorizedusers[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2643:2727  if(authorizedusers[_addr]) {... */\n      iszero\n      tag_203\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2685:2707  authorizedusers[_addr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2685:2700  authorizedusers */\n      0x04\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2685:2707  authorizedusers[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2685:2715  authorizedusers[_addr] = _bool */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup3\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2643:2727  if(authorizedusers[_addr]) {... */\n    tag_203:\n        /* \"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":2567:2734  function setauthor(address _addr, bool _bool) onlyOwner external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9095:9097   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9077:9098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9114:9132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9107:9137   */\n      mstore\n        /* \"#utility.yul\":9173:9207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9153:9171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9146:9208   */\n      mstore\n        /* \"#utility.yul\":9225:9243   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n        /* \"#utility.yul\":8893:9249   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:465   */\n    tag_25:\n        /* \"#utility.yul\":218:224   */\n      0x00\n        /* \"#utility.yul\":226:232   */\n      dup1\n        /* \"#utility.yul\":279:281   */\n      0x40\n        /* \"#utility.yul\":267:276   */\n      dup4\n        /* \"#utility.yul\":258:265   */\n      dup6\n        /* \"#utility.yul\":254:277   */\n      sub\n        /* \"#utility.yul\":250:282   */\n      slt\n        /* \"#utility.yul\":247:299   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":295:296   */\n      0x00\n        /* \"#utility.yul\":292:293   */\n      dup1\n        /* \"#utility.yul\":285:297   */\n      revert\n        /* \"#utility.yul\":247:299   */\n    tag_225:\n        /* \"#utility.yul\":331:340   */\n      dup3\n        /* \"#utility.yul\":318:341   */\n      calldataload\n        /* \"#utility.yul\":308:341   */\n      swap2\n      pop\n        /* \"#utility.yul\":391:393   */\n      0x20\n        /* \"#utility.yul\":380:389   */\n      dup4\n        /* \"#utility.yul\":376:394   */\n      add\n        /* \"#utility.yul\":363:395   */\n      calldataload\n        /* \"#utility.yul\":404:435   */\n      tag_226\n        /* \"#utility.yul\":429:434   */\n      dup2\n        /* \"#utility.yul\":404:435   */\n      tag_213\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":454:459   */\n      dup1\n        /* \"#utility.yul\":444:459   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":150:465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":652:981   */\n    tag_35:\n        /* \"#utility.yul\":734:740   */\n      0x00\n        /* \"#utility.yul\":742:748   */\n      dup1\n        /* \"#utility.yul\":795:797   */\n      0x40\n        /* \"#utility.yul\":783:792   */\n      dup4\n        /* \"#utility.yul\":774:781   */\n      dup6\n        /* \"#utility.yul\":770:793   */\n      sub\n        /* \"#utility.yul\":766:798   */\n      slt\n        /* \"#utility.yul\":763:815   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":811:812   */\n      0x00\n        /* \"#utility.yul\":808:809   */\n      dup1\n        /* \"#utility.yul\":801:813   */\n      revert\n        /* \"#utility.yul\":763:815   */\n    tag_229:\n        /* \"#utility.yul\":850:859   */\n      dup3\n        /* \"#utility.yul\":837:860   */\n      calldataload\n        /* \"#utility.yul\":869:900   */\n      tag_230\n        /* \"#utility.yul\":894:899   */\n      dup2\n        /* \"#utility.yul\":869:900   */\n      tag_213\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":919:924   */\n      swap5\n        /* \"#utility.yul\":971:973   */\n      0x20\n        /* \"#utility.yul\":956:974   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":943:975   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":652:981   */\n      jump\t// out\n        /* \"#utility.yul\":1208:1455   */\n    tag_48:\n        /* \"#utility.yul\":1267:1273   */\n      0x00\n        /* \"#utility.yul\":1320:1322   */\n      0x20\n        /* \"#utility.yul\":1308:1317   */\n      dup3\n        /* \"#utility.yul\":1299:1306   */\n      dup5\n        /* \"#utility.yul\":1295:1318   */\n      sub\n        /* \"#utility.yul\":1291:1323   */\n      slt\n        /* \"#utility.yul\":1288:1340   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":1336:1337   */\n      0x00\n        /* \"#utility.yul\":1333:1334   */\n      dup1\n        /* \"#utility.yul\":1326:1338   */\n      revert\n        /* \"#utility.yul\":1288:1340   */\n    tag_233:\n        /* \"#utility.yul\":1375:1384   */\n      dup2\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n        /* \"#utility.yul\":1394:1425   */\n      tag_234\n        /* \"#utility.yul\":1419:1424   */\n      dup2\n        /* \"#utility.yul\":1394:1425   */\n      tag_213\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1444:1449   */\n      swap4\n        /* \"#utility.yul\":1208:1455   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1860:1987   */\n    tag_214:\n        /* \"#utility.yul\":1921:1931   */\n      0x4e487b71\n        /* \"#utility.yul\":1916:1919   */\n      0xe0\n        /* \"#utility.yul\":1912:1932   */\n      shl\n        /* \"#utility.yul\":1909:1910   */\n      0x00\n        /* \"#utility.yul\":1902:1933   */\n      mstore\n        /* \"#utility.yul\":1952:1956   */\n      0x41\n        /* \"#utility.yul\":1949:1950   */\n      0x04\n        /* \"#utility.yul\":1942:1957   */\n      mstore\n        /* \"#utility.yul\":1976:1980   */\n      0x24\n        /* \"#utility.yul\":1973:1974   */\n      0x00\n        /* \"#utility.yul\":1966:1981   */\n      revert\n        /* \"#utility.yul\":1992:2267   */\n    tag_215:\n        /* \"#utility.yul\":2063:2065   */\n      0x40\n        /* \"#utility.yul\":2057:2066   */\n      mload\n        /* \"#utility.yul\":2128:2130   */\n      0x1f\n        /* \"#utility.yul\":2109:2122   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2105:2132   */\n      and\n        /* \"#utility.yul\":2093:2133   */\n      dup2\n      add\n        /* \"#utility.yul\":2163:2181   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2148:2182   */\n      dup2\n      gt\n        /* \"#utility.yul\":2184:2206   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2145:2207   */\n      or\n        /* \"#utility.yul\":2142:2230   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2210:2228   */\n      tag_240\n      tag_214\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2246:2248   */\n      0x40\n        /* \"#utility.yul\":2239:2261   */\n      mstore\n        /* \"#utility.yul\":1992:2267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2272:2455   */\n    tag_216:\n        /* \"#utility.yul\":2332:2336   */\n      0x00\n        /* \"#utility.yul\":2365:2383   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2357:2363   */\n      dup3\n        /* \"#utility.yul\":2354:2384   */\n      gt\n        /* \"#utility.yul\":2351:2407   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":2387:2405   */\n      tag_243\n      tag_214\n      jump\t// in\n    tag_243:\n      pop\n        /* \"#utility.yul\":2432:2433   */\n      0x05\n        /* \"#utility.yul\":2428:2442   */\n      shl\n        /* \"#utility.yul\":2444:2448   */\n      0x20\n        /* \"#utility.yul\":2424:2449   */\n      add\n      swap1\n        /* \"#utility.yul\":2272:2455   */\n      jump\t// out\n        /* \"#utility.yul\":2460:3197   */\n    tag_217:\n        /* \"#utility.yul\":2514:2519   */\n      0x00\n        /* \"#utility.yul\":2567:2570   */\n      dup3\n        /* \"#utility.yul\":2560:2564   */\n      0x1f\n        /* \"#utility.yul\":2552:2558   */\n      dup4\n        /* \"#utility.yul\":2548:2565   */\n      add\n        /* \"#utility.yul\":2544:2571   */\n      slt\n        /* \"#utility.yul\":2534:2589   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":2585:2586   */\n      0x00\n        /* \"#utility.yul\":2582:2583   */\n      dup1\n        /* \"#utility.yul\":2575:2587   */\n      revert\n        /* \"#utility.yul\":2534:2589   */\n    tag_245:\n        /* \"#utility.yul\":2621:2627   */\n      dup2\n        /* \"#utility.yul\":2608:2628   */\n      calldataload\n        /* \"#utility.yul\":2647:2651   */\n      0x20\n        /* \"#utility.yul\":2671:2731   */\n      tag_246\n        /* \"#utility.yul\":2687:2730   */\n      tag_247\n        /* \"#utility.yul\":2727:2729   */\n      dup4\n        /* \"#utility.yul\":2687:2730   */\n      tag_216\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2671:2731   */\n      tag_215\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2765:2780   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":2851:2852   */\n      0x05\n        /* \"#utility.yul\":2847:2857   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":2835:2858   */\n      dup5\n      add\n        /* \"#utility.yul\":2831:2863   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":2796:2808   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2875:2890   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":2872:2907   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":2903:2904   */\n      0x00\n        /* \"#utility.yul\":2900:2901   */\n      dup1\n        /* \"#utility.yul\":2893:2905   */\n      revert\n        /* \"#utility.yul\":2872:2907   */\n    tag_248:\n        /* \"#utility.yul\":2939:2941   */\n      dup3\n        /* \"#utility.yul\":2931:2937   */\n      dup7\n        /* \"#utility.yul\":2927:2942   */\n      add\n        /* \"#utility.yul\":2951:3168   */\n    tag_249:\n        /* \"#utility.yul\":2967:2973   */\n      dup5\n        /* \"#utility.yul\":2962:2965   */\n      dup2\n        /* \"#utility.yul\":2959:2974   */\n      lt\n        /* \"#utility.yul\":2951:3168   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":3047:3050   */\n      dup1\n        /* \"#utility.yul\":3034:3051   */\n      calldataload\n        /* \"#utility.yul\":3064:3095   */\n      tag_252\n        /* \"#utility.yul\":3089:3094   */\n      dup2\n        /* \"#utility.yul\":3064:3095   */\n      tag_213\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":3108:3126   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3146:3158   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":2984:2996   */\n      dup4\n      add\n        /* \"#utility.yul\":2951:3168   */\n      jump(tag_249)\n    tag_251:\n      pop\n        /* \"#utility.yul\":3186:3191   */\n      swap7\n        /* \"#utility.yul\":2460:3197   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3202:3864   */\n    tag_218:\n        /* \"#utility.yul\":3256:3261   */\n      0x00\n        /* \"#utility.yul\":3309:3312   */\n      dup3\n        /* \"#utility.yul\":3302:3306   */\n      0x1f\n        /* \"#utility.yul\":3294:3300   */\n      dup4\n        /* \"#utility.yul\":3290:3307   */\n      add\n        /* \"#utility.yul\":3286:3313   */\n      slt\n        /* \"#utility.yul\":3276:3331   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":3327:3328   */\n      0x00\n        /* \"#utility.yul\":3324:3325   */\n      dup1\n        /* \"#utility.yul\":3317:3329   */\n      revert\n        /* \"#utility.yul\":3276:3331   */\n    tag_254:\n        /* \"#utility.yul\":3363:3369   */\n      dup2\n        /* \"#utility.yul\":3350:3370   */\n      calldataload\n        /* \"#utility.yul\":3389:3393   */\n      0x20\n        /* \"#utility.yul\":3413:3473   */\n      tag_255\n        /* \"#utility.yul\":3429:3472   */\n      tag_247\n        /* \"#utility.yul\":3469:3471   */\n      dup4\n        /* \"#utility.yul\":3429:3472   */\n      tag_216\n      jump\t// in\n        /* \"#utility.yul\":3413:3473   */\n    tag_255:\n        /* \"#utility.yul\":3507:3522   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":3593:3594   */\n      0x05\n        /* \"#utility.yul\":3589:3599   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":3577:3600   */\n      dup5\n      add\n        /* \"#utility.yul\":3573:3605   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":3538:3550   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3617:3632   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3614:3649   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":3645:3646   */\n      0x00\n        /* \"#utility.yul\":3642:3643   */\n      dup1\n        /* \"#utility.yul\":3635:3647   */\n      revert\n        /* \"#utility.yul\":3614:3649   */\n    tag_257:\n        /* \"#utility.yul\":3681:3683   */\n      dup3\n        /* \"#utility.yul\":3673:3679   */\n      dup7\n        /* \"#utility.yul\":3669:3684   */\n      add\n        /* \"#utility.yul\":3693:3835   */\n    tag_258:\n        /* \"#utility.yul\":3709:3715   */\n      dup5\n        /* \"#utility.yul\":3704:3707   */\n      dup2\n        /* \"#utility.yul\":3701:3716   */\n      lt\n        /* \"#utility.yul\":3693:3835   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":3775:3792   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3763:3793   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3813:3825   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3726:3738   */\n      dup4\n      add\n        /* \"#utility.yul\":3693:3835   */\n      jump(tag_258)\n        /* \"#utility.yul\":3869:4613   */\n    tag_70:\n        /* \"#utility.yul\":4010:4016   */\n      0x00\n        /* \"#utility.yul\":4018:4024   */\n      dup1\n        /* \"#utility.yul\":4026:4032   */\n      0x00\n        /* \"#utility.yul\":4079:4081   */\n      0x60\n        /* \"#utility.yul\":4067:4076   */\n      dup5\n        /* \"#utility.yul\":4058:4065   */\n      dup7\n        /* \"#utility.yul\":4054:4077   */\n      sub\n        /* \"#utility.yul\":4050:4082   */\n      slt\n        /* \"#utility.yul\":4047:4099   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":4095:4096   */\n      0x00\n        /* \"#utility.yul\":4092:4093   */\n      dup1\n        /* \"#utility.yul\":4085:4097   */\n      revert\n        /* \"#utility.yul\":4047:4099   */\n    tag_262:\n        /* \"#utility.yul\":4134:4143   */\n      dup4\n        /* \"#utility.yul\":4121:4144   */\n      calldataload\n        /* \"#utility.yul\":4153:4184   */\n      tag_263\n        /* \"#utility.yul\":4178:4183   */\n      dup2\n        /* \"#utility.yul\":4153:4184   */\n      tag_213\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4203:4208   */\n      swap3\n      pop\n        /* \"#utility.yul\":4259:4261   */\n      0x20\n        /* \"#utility.yul\":4244:4262   */\n      dup5\n      add\n        /* \"#utility.yul\":4231:4263   */\n      calldataload\n        /* \"#utility.yul\":4282:4300   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4312:4326   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4309:4343   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":4339:4340   */\n      0x00\n        /* \"#utility.yul\":4336:4337   */\n      dup1\n        /* \"#utility.yul\":4329:4341   */\n      revert\n        /* \"#utility.yul\":4309:4343   */\n    tag_264:\n        /* \"#utility.yul\":4362:4423   */\n      tag_265\n        /* \"#utility.yul\":4415:4422   */\n      dup8\n        /* \"#utility.yul\":4406:4412   */\n      dup4\n        /* \"#utility.yul\":4395:4404   */\n      dup9\n        /* \"#utility.yul\":4391:4413   */\n      add\n        /* \"#utility.yul\":4362:4423   */\n      tag_217\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4352:4423   */\n      swap4\n      pop\n        /* \"#utility.yul\":4476:4478   */\n      0x40\n        /* \"#utility.yul\":4465:4474   */\n      dup7\n        /* \"#utility.yul\":4461:4479   */\n      add\n        /* \"#utility.yul\":4448:4480   */\n      calldataload\n        /* \"#utility.yul\":4432:4480   */\n      swap2\n      pop\n        /* \"#utility.yul\":4505:4507   */\n      dup1\n        /* \"#utility.yul\":4495:4503   */\n      dup3\n        /* \"#utility.yul\":4492:4508   */\n      gt\n        /* \"#utility.yul\":4489:4525   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":4521:4522   */\n      0x00\n        /* \"#utility.yul\":4518:4519   */\n      dup1\n        /* \"#utility.yul\":4511:4523   */\n      revert\n        /* \"#utility.yul\":4489:4525   */\n    tag_266:\n      pop\n        /* \"#utility.yul\":4544:4607   */\n      tag_267\n        /* \"#utility.yul\":4599:4606   */\n      dup7\n        /* \"#utility.yul\":4588:4596   */\n      dup3\n        /* \"#utility.yul\":4577:4586   */\n      dup8\n        /* \"#utility.yul\":4573:4597   */\n      add\n        /* \"#utility.yul\":4544:4607   */\n      tag_218\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":4534:4607   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3869:4613   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4618:5213   */\n    tag_83:\n        /* \"#utility.yul\":4736:4742   */\n      0x00\n        /* \"#utility.yul\":4744:4750   */\n      dup1\n        /* \"#utility.yul\":4797:4799   */\n      0x40\n        /* \"#utility.yul\":4785:4794   */\n      dup4\n        /* \"#utility.yul\":4776:4783   */\n      dup6\n        /* \"#utility.yul\":4772:4795   */\n      sub\n        /* \"#utility.yul\":4768:4800   */\n      slt\n        /* \"#utility.yul\":4765:4817   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4813:4814   */\n      0x00\n        /* \"#utility.yul\":4810:4811   */\n      dup1\n        /* \"#utility.yul\":4803:4815   */\n      revert\n        /* \"#utility.yul\":4765:4817   */\n    tag_269:\n        /* \"#utility.yul\":4853:4862   */\n      dup3\n        /* \"#utility.yul\":4840:4863   */\n      calldataload\n        /* \"#utility.yul\":4882:4900   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4923:4925   */\n      dup1\n        /* \"#utility.yul\":4915:4921   */\n      dup3\n        /* \"#utility.yul\":4912:4926   */\n      gt\n        /* \"#utility.yul\":4909:4943   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":4939:4940   */\n      0x00\n        /* \"#utility.yul\":4936:4937   */\n      dup1\n        /* \"#utility.yul\":4929:4941   */\n      revert\n        /* \"#utility.yul\":4909:4943   */\n    tag_270:\n        /* \"#utility.yul\":4962:5023   */\n      tag_271\n        /* \"#utility.yul\":5015:5022   */\n      dup7\n        /* \"#utility.yul\":5006:5012   */\n      dup4\n        /* \"#utility.yul\":4995:5004   */\n      dup8\n        /* \"#utility.yul\":4991:5013   */\n      add\n        /* \"#utility.yul\":4962:5023   */\n      tag_217\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4952:5023   */\n      swap4\n      pop\n        /* \"#utility.yul\":5076:5078   */\n      0x20\n        /* \"#utility.yul\":5065:5074   */\n      dup6\n        /* \"#utility.yul\":5061:5079   */\n      add\n        /* \"#utility.yul\":5048:5080   */\n      calldataload\n        /* \"#utility.yul\":5032:5080   */\n      swap2\n      pop\n        /* \"#utility.yul\":5105:5107   */\n      dup1\n        /* \"#utility.yul\":5095:5103   */\n      dup3\n        /* \"#utility.yul\":5092:5108   */\n      gt\n        /* \"#utility.yul\":5089:5125   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":5121:5122   */\n      0x00\n        /* \"#utility.yul\":5118:5119   */\n      dup1\n        /* \"#utility.yul\":5111:5123   */\n      revert\n        /* \"#utility.yul\":5089:5125   */\n    tag_272:\n      pop\n        /* \"#utility.yul\":5144:5207   */\n      tag_273\n        /* \"#utility.yul\":5199:5206   */\n      dup6\n        /* \"#utility.yul\":5188:5196   */\n      dup3\n        /* \"#utility.yul\":5177:5186   */\n      dup7\n        /* \"#utility.yul\":5173:5197   */\n      add\n        /* \"#utility.yul\":5144:5207   */\n      tag_218\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5134:5207   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4618:5213   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5442:5560   */\n    tag_219:\n        /* \"#utility.yul\":5528:5533   */\n      dup1\n        /* \"#utility.yul\":5521:5534   */\n      iszero\n        /* \"#utility.yul\":5514:5535   */\n      iszero\n        /* \"#utility.yul\":5507:5512   */\n      dup2\n        /* \"#utility.yul\":5504:5536   */\n      eq\n        /* \"#utility.yul\":5494:5554   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":5550:5551   */\n      0x00\n        /* \"#utility.yul\":5547:5548   */\n      dup1\n        /* \"#utility.yul\":5540:5552   */\n      revert\n        /* \"#utility.yul\":5565:5947   */\n    tag_97:\n        /* \"#utility.yul\":5630:5636   */\n      0x00\n        /* \"#utility.yul\":5638:5644   */\n      dup1\n        /* \"#utility.yul\":5691:5693   */\n      0x40\n        /* \"#utility.yul\":5679:5688   */\n      dup4\n        /* \"#utility.yul\":5670:5677   */\n      dup6\n        /* \"#utility.yul\":5666:5689   */\n      sub\n        /* \"#utility.yul\":5662:5694   */\n      slt\n        /* \"#utility.yul\":5659:5711   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":5707:5708   */\n      0x00\n        /* \"#utility.yul\":5704:5705   */\n      dup1\n        /* \"#utility.yul\":5697:5709   */\n      revert\n        /* \"#utility.yul\":5659:5711   */\n    tag_278:\n        /* \"#utility.yul\":5746:5755   */\n      dup3\n        /* \"#utility.yul\":5733:5756   */\n      calldataload\n        /* \"#utility.yul\":5765:5796   */\n      tag_279\n        /* \"#utility.yul\":5790:5795   */\n      dup2\n        /* \"#utility.yul\":5765:5796   */\n      tag_213\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5815:5820   */\n      swap2\n      pop\n        /* \"#utility.yul\":5872:5874   */\n      0x20\n        /* \"#utility.yul\":5857:5875   */\n      dup4\n      add\n        /* \"#utility.yul\":5844:5876   */\n      calldataload\n        /* \"#utility.yul\":5885:5915   */\n      tag_226\n        /* \"#utility.yul\":5844:5876   */\n      dup2\n        /* \"#utility.yul\":5885:5915   */\n      tag_219\n      jump\t// in\n        /* \"#utility.yul\":5952:6136   */\n    tag_127:\n        /* \"#utility.yul\":6022:6028   */\n      0x00\n        /* \"#utility.yul\":6075:6077   */\n      0x20\n        /* \"#utility.yul\":6063:6072   */\n      dup3\n        /* \"#utility.yul\":6054:6061   */\n      dup5\n        /* \"#utility.yul\":6050:6073   */\n      sub\n        /* \"#utility.yul\":6046:6078   */\n      slt\n        /* \"#utility.yul\":6043:6095   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":6091:6092   */\n      0x00\n        /* \"#utility.yul\":6088:6089   */\n      dup1\n        /* \"#utility.yul\":6081:6093   */\n      revert\n        /* \"#utility.yul\":6043:6095   */\n    tag_282:\n      pop\n        /* \"#utility.yul\":6114:6130   */\n      mload\n      swap2\n        /* \"#utility.yul\":5952:6136   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6615:6742   */\n    tag_220:\n        /* \"#utility.yul\":6676:6686   */\n      0x4e487b71\n        /* \"#utility.yul\":6671:6674   */\n      0xe0\n        /* \"#utility.yul\":6667:6687   */\n      shl\n        /* \"#utility.yul\":6664:6665   */\n      0x00\n        /* \"#utility.yul\":6657:6688   */\n      mstore\n        /* \"#utility.yul\":6707:6711   */\n      0x11\n        /* \"#utility.yul\":6704:6705   */\n      0x04\n        /* \"#utility.yul\":6697:6712   */\n      mstore\n        /* \"#utility.yul\":6731:6735   */\n      0x24\n        /* \"#utility.yul\":6728:6729   */\n      0x00\n        /* \"#utility.yul\":6721:6736   */\n      revert\n        /* \"#utility.yul\":6747:6872   */\n    tag_133:\n        /* \"#utility.yul\":6812:6821   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6833:6843   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6830:6866   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":6846:6864   */\n      tag_287\n      tag_220\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6747:6872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6877:7004   */\n    tag_141:\n        /* \"#utility.yul\":6938:6948   */\n      0x4e487b71\n        /* \"#utility.yul\":6933:6936   */\n      0xe0\n        /* \"#utility.yul\":6929:6949   */\n      shl\n        /* \"#utility.yul\":6926:6927   */\n      0x00\n        /* \"#utility.yul\":6919:6950   */\n      mstore\n        /* \"#utility.yul\":6969:6973   */\n      0x32\n        /* \"#utility.yul\":6966:6967   */\n      0x04\n        /* \"#utility.yul\":6959:6974   */\n      mstore\n        /* \"#utility.yul\":6993:6997   */\n      0x24\n        /* \"#utility.yul\":6990:6991   */\n      0x00\n        /* \"#utility.yul\":6983:6998   */\n      revert\n        /* \"#utility.yul\":7009:7144   */\n    tag_144:\n        /* \"#utility.yul\":7048:7051   */\n      0x00\n        /* \"#utility.yul\":7069:7086   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7066:7109   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":7089:7107   */\n      tag_291\n      tag_220\n      jump\t// in\n    tag_291:\n      pop\n        /* \"#utility.yul\":7136:7137   */\n      0x01\n        /* \"#utility.yul\":7125:7138   */\n      add\n      swap1\n        /* \"#utility.yul\":7009:7144   */\n      jump\t// out\n        /* \"#utility.yul\":7529:7774   */\n    tag_150:\n        /* \"#utility.yul\":7596:7602   */\n      0x00\n        /* \"#utility.yul\":7649:7651   */\n      0x20\n        /* \"#utility.yul\":7637:7646   */\n      dup3\n        /* \"#utility.yul\":7628:7635   */\n      dup5\n        /* \"#utility.yul\":7624:7647   */\n      sub\n        /* \"#utility.yul\":7620:7652   */\n      slt\n        /* \"#utility.yul\":7617:7669   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":7665:7666   */\n      0x00\n        /* \"#utility.yul\":7662:7663   */\n      dup1\n        /* \"#utility.yul\":7655:7667   */\n      revert\n        /* \"#utility.yul\":7617:7669   */\n    tag_294:\n        /* \"#utility.yul\":7697:7706   */\n      dup2\n        /* \"#utility.yul\":7691:7707   */\n      mload\n        /* \"#utility.yul\":7716:7744   */\n      tag_234\n        /* \"#utility.yul\":7738:7743   */\n      dup2\n        /* \"#utility.yul\":7716:7744   */\n      tag_219\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220c2d0931c5a6a6d9e96072dec2b8fc798c6795a3d767a147d6fb23cb79e66722064736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_205": {
									"entryPoint": null,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 75,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361004b565b600054600280546001600160a01b0319166001600160a01b03909216919091179055655af3107a400060015561009b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e76806100aa6000396000f3fe6080604052600436106100fe5760003560e01c80638da5cb5b11610095578063ddca3f4311610064578063ddca3f43146102b0578063e3cec849146102c6578063f2fde38b146102d9578063f7260d3e146102f9578063fb520af21461031957600080fd5b80638da5cb5b146102305780639c8b9e7b1461024e5780639cbd343314610264578063a4df02561461027757600080fd5b80633feff76d116100d15780633feff76d1461018357806344b6209d146101bb5780634b4fb1b0146101fb578063715018a61461021b57600080fd5b8063126ccd941461010357806317fc45e2146101255780632fc75eb01461014e5780633ccfd60b1461016e575b600080fd5b34801561010f57600080fd5b5061012361011e366004610adc565b610339565b005b34801561013157600080fd5b5061013b60065481565b6040519081526020015b60405180910390f35b34801561015a57600080fd5b50610123610169366004610b0c565b610368565b34801561017a57600080fd5b50610123610396565b34801561018f57600080fd5b506005546101a3906001600160a01b031681565b6040516001600160a01b039091168152602001610145565b3480156101c757600080fd5b506101eb6101d6366004610b38565b60046020526000908152604090205460ff1681565b6040519015158152602001610145565b34801561020757600080fd5b50610123610216366004610b38565b6103d8565b34801561022757600080fd5b50610123610404565b34801561023c57600080fd5b506000546001600160a01b03166101a3565b34801561025a57600080fd5b5061013b60035481565b610123610272366004610c96565b610416565b34801561028357600080fd5b506101eb610292366004610b38565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102bc57600080fd5b5061013b60015481565b6101236102d4366004610d0c565b610730565b3480156102e557600080fd5b506101236102f4366004610b38565b610955565b34801561030557600080fd5b506002546101a3906001600160a01b031681565b34801561032557600080fd5b50610123610334366004610d7e565b6109cb565b610341610a1d565b600191909155600280546001600160a01b0319166001600160a01b03909216919091179055565b610370610a1d565b600580546001600160a01b0319166001600160a01b039390931692909217909155600655565b61039e610a1d565b600354156103d657600354604051339180156108fc02916000818181858888f193505050501580156103d4573d6000803e3d6000fd5b505b565b6103e0610a1d565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b61040c610a1d565b6103d66000610a77565b3360009081526004602052604090205460ff1615806104a157506006546005546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f9190610dac565b105b156105845760015434101561052d5760405162461bcd60e51b815260206004820152604160248201527f596f75206861766520746f207061792066656520746f2075736520536e69706560448201527f46696e616e636520546f6b656e204d756c74692062756c6b2066756e6374696f6064820152603760f91b608482015260a4015b60405180910390fd5b600154600360008282546105419190610ddb565b90915550506002546001546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610582573d6000803e3d6000fd5b505b6000805b83518110156105ca578281815181106105a3576105a3610df4565b6020026020010151826105b69190610ddb565b9150806105c281610e0a565b915050610588565b506040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038516906323b872dd906064016020604051808303816000875af115801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190610e23565b61064b57600080fd5b60005b835181101561072957846001600160a01b031663a9059cbb85838151811061067857610678610df4565b602002602001015185848151811061069257610692610df4565b60200260200101516040518363ffffffff1660e01b81526004016106cb9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af11580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e9190610e23565b61071757600080fd5b8061072181610e0a565b91505061064e565b5050505050565b3360009081526004602052604090205460ff1615806107bb57506006546005546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b99190610dac565b105b1561088f576001543410156108385760405162461bcd60e51b815260206004820152603b60248201527f596f75206861766520746f207061792066656520746f2075736520536e69706560448201527f46696e616e6365204d756c74692062756c6b2066756e6374696f6e00000000006064820152608401610524565b6001546003600082825461084c9190610ddb565b90915550506002546001546040516001600160a01b039092169181156108fc0291906000818181858888f1935050505015801561088d573d6000803e3d6000fd5b505b60005b8251811015610919578281815181106108ad576108ad610df4565b60200260200101516001600160a01b03166108fc8383815181106108d3576108d3610df4565b60200260200101519081150290604051600060405180830381858888f19350505050158015610906573d6000803e3d6000fd5b508061091181610e0a565b915050610892565b5047801561095057604051339082156108fc029083906000818181858888f1935050505015801561094e573d6000803e3d6000fd5b505b505050565b61095d610a1d565b6001600160a01b0381166109c25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610524565b6103d481610a77565b6109d3610a1d565b6001600160a01b03821660009081526004602052604090205460ff1615610a19576001600160a01b0382166000908152600460205260409020805460ff19168215151790555b5050565b6000546001600160a01b031633146103d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610524565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146103d457600080fd5b60008060408385031215610aef57600080fd5b823591506020830135610b0181610ac7565b809150509250929050565b60008060408385031215610b1f57600080fd5b8235610b2a81610ac7565b946020939093013593505050565b600060208284031215610b4a57600080fd5b8135610b5581610ac7565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b9b57610b9b610b5c565b604052919050565b600067ffffffffffffffff821115610bbd57610bbd610b5c565b5060051b60200190565b600082601f830112610bd857600080fd5b81356020610bed610be883610ba3565b610b72565b82815260059290921b84018101918181019086841115610c0c57600080fd5b8286015b84811015610c30578035610c2381610ac7565b8352918301918301610c10565b509695505050505050565b600082601f830112610c4c57600080fd5b81356020610c5c610be883610ba3565b82815260059290921b84018101918181019086841115610c7b57600080fd5b8286015b84811015610c305780358352918301918301610c7f565b600080600060608486031215610cab57600080fd5b8335610cb681610ac7565b9250602084013567ffffffffffffffff80821115610cd357600080fd5b610cdf87838801610bc7565b93506040860135915080821115610cf557600080fd5b50610d0286828701610c3b565b9150509250925092565b60008060408385031215610d1f57600080fd5b823567ffffffffffffffff80821115610d3757600080fd5b610d4386838701610bc7565b93506020850135915080821115610d5957600080fd5b50610d6685828601610c3b565b9150509250929050565b80151581146103d457600080fd5b60008060408385031215610d9157600080fd5b8235610d9c81610ac7565b91506020830135610b0181610d70565b600060208284031215610dbe57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610dee57610dee610dc5565b92915050565b634e487b7160e01b600052603260045260246000fd5b600060018201610e1c57610e1c610dc5565b5060010190565b600060208284031215610e3557600080fd5b8151610b5581610d7056fea2646970667358221220c2d0931c5a6a6d9e96072dec2b8fc798c6795a3d767a147d6fb23cb79e66722064736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x4B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH6 0x5AF3107A4000 PUSH1 0x1 SSTORE PUSH2 0x9B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE76 DUP1 PUSH2 0xAA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDDCA3F43 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xE3CEC849 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xF7260D3E EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xFB520AF2 EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x9C8B9E7B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x9CBD3433 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA4DF0256 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FEFF76D GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3FEFF76D EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x44B6209D EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x4B4FB1B0 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x126CCD94 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x17FC45E2 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x2FC75EB0 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x16E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x339 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x396 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1A3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x404 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0x416 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1A3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x341 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x370 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x39E PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x3 SLOAD ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x40C PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x3D6 PUSH1 0x0 PUSH2 0xA77 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x4A1 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0xDAC JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x584 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520746F207061792066656520746F2075736520536E697065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x46696E616E636520546F6B656E204D756C74692062756C6B2066756E6374696F PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x541 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x582 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x5CA JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5A3 JUMPI PUSH2 0x5A3 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x5B6 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x5C2 DUP2 PUSH2 0xE0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x588 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x729 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x678 JUMPI PUSH2 0x678 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x692 JUMPI PUSH2 0x692 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CB SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70E SWAP2 SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0x721 DUP2 PUSH2 0xE0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x64E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x7BB JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x795 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0xDAC JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x88F JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520746F207061792066656520746F2075736520536E697065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x46696E616E6365204D756C74692062756C6B2066756E6374696F6E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x524 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x88D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x919 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8AD JUMPI PUSH2 0x8AD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8D3 JUMPI PUSH2 0x8D3 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH2 0x911 DUP2 PUSH2 0xE0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x892 JUMP JUMPDEST POP SELFBALANCE DUP1 ISZERO PUSH2 0x950 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x94E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x95D PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x524 JUMP JUMPDEST PUSH2 0x3D4 DUP2 PUSH2 0xA77 JUMP JUMPDEST PUSH2 0x9D3 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA19 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x524 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xB01 DUP2 PUSH2 0xAC7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xB2A DUP2 PUSH2 0xAC7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB55 DUP2 PUSH2 0xAC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9B PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBBD JUMPI PUSH2 0xBBD PUSH2 0xB5C JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xBED PUSH2 0xBE8 DUP4 PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0xB72 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xC0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xC30 JUMPI DUP1 CALLDATALOAD PUSH2 0xC23 DUP2 PUSH2 0xAC7 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xC10 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC5C PUSH2 0xBE8 DUP4 PUSH2 0xBA3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xC7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xC30 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xCB6 DUP2 PUSH2 0xAC7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCDF DUP8 DUP4 DUP9 ADD PUSH2 0xBC7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xCF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD02 DUP7 DUP3 DUP8 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD43 DUP7 DUP4 DUP8 ADD PUSH2 0xBC7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD66 DUP6 DUP3 DUP7 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD9C DUP2 PUSH2 0xAC7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xB01 DUP2 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xDEE JUMPI PUSH2 0xDEE PUSH2 0xDC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE1C JUMPI PUSH2 0xE1C PUSH2 0xDC5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB55 DUP2 PUSH2 0xD70 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xD0 SWAP4 SHR GAS PUSH11 0x6D9E96072DEC2B8FC798C6 PUSH26 0x5A3D767A147D6FB23CB79E66722064736F6C6343000810003300 ",
							"sourceMap": "139:2922:3:-:0;;;485:89;;;;;;;;;-1:-1:-1;936:32:0;719:10:1;936:18:0;:32::i;:::-;1247:7;1273:6;510:8:3;:27;;-1:-1:-1;;;;;;510:27:3;-1:-1:-1;;;;;1273:6:0;;;510:27:3;;;;;;554:12;-1:-1:-1;548:18:3;139:2922;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;139:2922:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BNBmultisender_293": {
									"entryPoint": 1840,
									"id": 293,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@SetTokenToholdAndQuantity_494": {
									"entryPoint": 872,
									"id": 494,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@TOKENmultisender_400": {
									"entryPoint": 1046,
									"id": 400,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2589,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2679,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorizeToUse_454": {
									"entryPoint": 984,
									"id": 454,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorizedusers_180": {
									"entryPoint": null,
									"id": 180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fee_172": {
									"entryPoint": null,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeamounts_176": {
									"entryPoint": null,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@quantity_185": {
									"entryPoint": null,
									"id": 185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@readAuthorizedUsers_506": {
									"entryPoint": null,
									"id": 506,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@receiver_174": {
									"entryPoint": null,
									"id": 174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 1028,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setauthor_475": {
									"entryPoint": 2507,
									"id": 475,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setfeeToUse_421": {
									"entryPoint": 825,
									"id": 421,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@tokenaddress_183": {
									"entryPoint": null,
									"id": 183,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2389,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_440": {
									"entryPoint": 918,
									"id": 440,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IBEP20_$164t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_contract$_IBEP20_$164t_uint256": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 2780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$164__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4eb86dec3b7c3e53e01f18b918268fa96a47c207e64bdfa8013fcfdaf9f9175d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dff637c805372e1029bc5f3e694294c9c9184ce638d2f2a7c6e0686c1b13522a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 2759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 3440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9251:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:4"
															},
															"nodeType": "YulIf",
															"src": "69:70:4"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:4",
														"type": ""
													}
												],
												"src": "14:131:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:228:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "283:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "292:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "295:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "285:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "285:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "285:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "258:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "267:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "254:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "254:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "279:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "250:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:32:4"
															},
															"nodeType": "YulIf",
															"src": "247:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "308:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "331:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "318:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "308:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "350:45:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "391:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "376:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "363:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "363:32:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "354:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "429:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "404:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "404:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "404:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "444:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "454:5:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "444:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "195:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "206:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "218:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "226:6:4",
														"type": ""
													}
												],
												"src": "150:315:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "571:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "581:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "589:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "581:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "623:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "634:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "616:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "616:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "540:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "551:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "562:4:4",
														"type": ""
													}
												],
												"src": "470:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "753:228:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "799:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "808:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "811:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "801:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "801:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "801:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "774:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "783:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "770:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "795:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "766:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:32:4"
															},
															"nodeType": "YulIf",
															"src": "763:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "824:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "850:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "837:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "828:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "894:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "869:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "869:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "909:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "919:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "933:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "960:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "971:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "943:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "933:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IBEP20_$164t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "711:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "722:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "734:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "742:6:4",
														"type": ""
													}
												],
												"src": "652:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1101:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1111:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1123:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1119:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1111:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1153:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1168:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1184:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1189:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1180:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1180:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1193:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1176:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1176:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1164:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1164:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1146:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1146:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1146:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$164__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1070:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1081:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1092:4:4",
														"type": ""
													}
												],
												"src": "986:217:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1278:177:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1324:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1333:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1326:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1326:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1299:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1308:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1295:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1295:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1320:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1291:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1291:32:4"
															},
															"nodeType": "YulIf",
															"src": "1288:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1349:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1353:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1419:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1394:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1394:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1434:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1444:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1434:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1244:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1255:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1267:6:4",
														"type": ""
													}
												],
												"src": "1208:247:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1555:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1565:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1577:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1588:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1573:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1565:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1607:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1632:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1625:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1625:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1618:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1618:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1600:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1600:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1524:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1535:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1546:4:4",
														"type": ""
													}
												],
												"src": "1460:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1753:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1763:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1775:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1786:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1771:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1771:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1763:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1805:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1836:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1841:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1832:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1832:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1845:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1828:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1828:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1798:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1798:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1722:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1733:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1744:4:4",
														"type": ""
													}
												],
												"src": "1652:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1892:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1909:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1916:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1921:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1912:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1912:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1949:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1952:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1942:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1976:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1966:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1860:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2037:230:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2047:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2063:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2057:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2057:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2047:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2075:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2097:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2113:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2119:2:4",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2109:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2109:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2128:2:4",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2124:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2124:7:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2105:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2105:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2079:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2208:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2210:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2210:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2151:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2148:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2187:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2199:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2184:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2145:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:62:4"
															},
															"nodeType": "YulIf",
															"src": "2142:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2250:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2239:22:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2017:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2026:6:4",
														"type": ""
													}
												],
												"src": "1992:275:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2341:114:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2385:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2387:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2387:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2387:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2357:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2365:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2354:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2354:30:4"
															},
															"nodeType": "YulIf",
															"src": "2351:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2416:33:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2432:1:4",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2435:6:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2428:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2428:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2424:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2424:25:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2416:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2321:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2332:4:4",
														"type": ""
													}
												],
												"src": "2272:183:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2524:673:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2573:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2582:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2585:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2575:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2575:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2575:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2552:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2560:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2548:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2548:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2567:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2544:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2544:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2537:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2537:35:4"
															},
															"nodeType": "YulIf",
															"src": "2534:55:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2598:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2621:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2608:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2608:20:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2602:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2637:14:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2647:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2641:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2660:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2727:2:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "2687:39:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:43:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2671:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:60:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2664:3:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2740:16:4",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "2753:3:4"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "2744:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2772:3:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2777:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2765:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2765:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2765:15:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2789:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2800:3:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2805:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2796:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2796:12:4"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2789:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2817:46:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2839:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2851:1:4",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2854:2:4"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2847:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2847:10:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2835:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2835:23:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2860:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2831:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:32:4"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2821:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2891:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2900:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2903:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2893:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2893:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2893:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2878:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2886:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2875:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2875:15:4"
															},
															"nodeType": "YulIf",
															"src": "2872:35:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2916:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2931:6:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2939:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2927:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:15:4"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2920:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3007:161:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3021:30:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3047:3:4"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "3034:12:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3034:17:4"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "3025:5:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "3089:5:4"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "3064:24:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3064:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3064:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3115:3:4"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "3120:5:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3108:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3108:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3108:18:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3139:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3150:3:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3155:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3146:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3146:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3139:3:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2962:3:4"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2967:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2959:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:15:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2975:23:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2977:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2988:3:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2993:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2984:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2984:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2977:3:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2955:3:4",
																"statements": []
															},
															"src": "2951:217:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3177:14:4",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "3186:5:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2498:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2506:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2514:5:4",
														"type": ""
													}
												],
												"src": "2460:737:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:598:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3315:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3324:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3327:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3317:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3317:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3317:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3294:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3302:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3290:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3290:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3309:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3286:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3286:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3279:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3279:35:4"
															},
															"nodeType": "YulIf",
															"src": "3276:55:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3340:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3363:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3350:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3350:20:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3344:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3379:14:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3389:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3383:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3402:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3469:2:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "3429:39:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:43:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3413:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:60:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3406:3:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3482:16:4",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "3495:3:4"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "3486:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3514:3:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3519:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3507:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3507:15:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3531:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3542:3:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3547:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3538:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:12:4"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3531:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3559:46:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3581:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3593:1:4",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3596:2:4"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3589:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3589:10:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3577:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3577:23:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3602:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3573:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3573:32:4"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3563:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3633:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3642:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3645:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3635:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3635:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3635:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3620:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3628:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3617:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:15:4"
															},
															"nodeType": "YulIf",
															"src": "3614:35:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3658:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3673:6:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3681:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3669:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3669:15:4"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3662:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3749:86:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3770:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3788:3:4"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3775:12:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3775:17:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3763:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3763:30:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3763:30:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3806:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3817:3:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3822:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3813:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3813:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3806:3:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3704:3:4"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3709:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3701:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:15:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3717:23:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3719:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3730:3:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3735:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3726:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3726:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3719:3:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3697:3:4",
																"statements": []
															},
															"src": "3693:142:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3844:14:4",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "3853:5:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3844:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3240:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3248:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3256:5:4",
														"type": ""
													}
												],
												"src": "3202:662:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4037:576:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4083:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4092:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4095:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4085:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4085:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4085:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4058:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4067:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4054:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4054:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4079:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4050:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4050:32:4"
															},
															"nodeType": "YulIf",
															"src": "4047:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4108:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4134:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4121:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4121:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4112:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4178:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4153:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4153:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4153:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4193:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4203:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4217:46:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4248:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4259:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4244:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4244:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4231:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4231:32:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4221:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4272:28:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4282:18:4",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4276:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4327:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4336:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4339:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4329:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4329:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4329:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4315:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4323:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4312:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4312:14:4"
															},
															"nodeType": "YulIf",
															"src": "4309:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4352:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4395:9:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4406:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4391:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4391:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4415:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4362:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:61:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4352:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4432:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4465:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4476:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4461:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4461:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4448:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:32:4"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4436:8:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4509:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4518:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4521:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4511:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4511:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4511:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4495:8:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4505:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4492:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:16:4"
															},
															"nodeType": "YulIf",
															"src": "4489:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4534:73:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4577:9:4"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4588:8:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4573:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4573:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4599:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4544:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4544:63:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4534:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IBEP20_$164t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3987:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3998:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4010:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4018:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4026:6:4",
														"type": ""
													}
												],
												"src": "3869:744:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4755:458:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4801:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4810:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4813:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4803:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4803:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4803:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4776:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4785:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4772:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4797:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4768:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4768:32:4"
															},
															"nodeType": "YulIf",
															"src": "4765:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4826:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4853:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4840:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:23:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4830:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4872:28:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4882:18:4",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4876:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4927:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4936:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4939:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4929:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4929:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4929:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4915:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4923:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4912:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4912:14:4"
															},
															"nodeType": "YulIf",
															"src": "4909:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4952:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4995:9:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5006:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4991:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4991:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5015:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4962:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4962:61:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4952:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5032:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5065:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5076:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5061:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5061:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5048:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5048:32:4"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5036:8:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5109:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5118:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5121:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5111:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5111:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5111:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5095:8:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5105:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5092:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:16:4"
															},
															"nodeType": "YulIf",
															"src": "5089:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5134:73:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:4"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5188:8:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5173:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5173:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5199:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5144:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5144:63:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5134:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4713:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4724:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4736:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4744:6:4",
														"type": ""
													}
												],
												"src": "4618:595:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5345:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5357:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5368:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5353:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5353:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5345:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5387:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5402:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5418:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5423:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5414:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5414:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5427:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5410:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5410:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5398:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5398:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5380:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5304:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5315:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5326:4:4",
														"type": ""
													}
												],
												"src": "5218:219:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5484:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5538:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5547:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5550:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5540:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5540:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5540:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5507:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5528:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5521:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5521:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5514:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5514:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5504:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5504:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5497:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5497:40:4"
															},
															"nodeType": "YulIf",
															"src": "5494:60:4"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5473:5:4",
														"type": ""
													}
												],
												"src": "5442:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5649:298:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5695:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5704:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5697:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5697:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5697:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5670:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5679:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5666:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5666:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5691:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5662:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5662:32:4"
															},
															"nodeType": "YulIf",
															"src": "5659:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5720:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5746:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5733:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5733:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5724:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5790:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5765:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5765:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5765:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5805:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5815:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5805:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5829:47:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5861:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5872:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5857:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5857:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5844:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5844:32:4"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5833:7:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5907:7:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5885:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5885:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5885:30:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5924:17:4",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5934:7:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5924:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5607:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5618:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5630:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5638:6:4",
														"type": ""
													}
												],
												"src": "5565:382:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6033:103:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6079:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6088:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6091:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6081:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6081:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6081:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6054:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6063:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6050:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6050:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6075:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6046:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6046:32:4"
															},
															"nodeType": "YulIf",
															"src": "6043:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6104:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6120:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6114:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6114:16:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6104:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5999:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6010:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6022:6:4",
														"type": ""
													}
												],
												"src": "5952:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6315:295:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6332:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6343:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6325:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6325:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6325:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6366:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6377:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6362:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6362:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6382:2:4",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6355:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6355:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6355:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6405:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6416:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6401:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6401:18:4"
																	},
																	{
																		"hexValue": "596f75206861766520746f207061792066656520746f2075736520536e697065",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6421:34:4",
																		"type": "",
																		"value": "You have to pay fee to use Snipe"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6394:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6394:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6394:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6476:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6487:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6472:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6472:18:4"
																	},
																	{
																		"hexValue": "46696e616e636520546f6b656e204d756c74692062756c6b2066756e6374696f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6492:34:4",
																		"type": "",
																		"value": "Finance Token Multi bulk functio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6465:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6465:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6465:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6547:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6558:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6543:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6543:19:4"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6564:3:4",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6536:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6536:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6536:32:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6577:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6589:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6600:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6585:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6585:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6577:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dff637c805372e1029bc5f3e694294c9c9184ce638d2f2a7c6e0686c1b13522a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6292:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6306:4:4",
														"type": ""
													}
												],
												"src": "6141:469:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6647:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6664:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6671:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6676:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6667:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6667:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6657:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6657:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6657:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6704:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6707:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6697:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6697:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6728:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6731:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6721:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6721:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6721:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6615:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6795:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6805:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6816:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6819:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6812:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6812:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6805:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6844:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6846:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6846:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6846:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6836:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6839:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6833:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6833:10:4"
															},
															"nodeType": "YulIf",
															"src": "6830:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6778:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6781:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6787:3:4",
														"type": ""
													}
												],
												"src": "6747:125:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6909:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6926:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6933:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6938:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6929:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6929:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6919:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6919:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6919:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6966:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6969:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6959:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6959:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6959:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6990:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6993:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6983:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6983:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6983:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6877:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7056:88:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7087:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7089:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7089:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7089:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7072:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7083:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7079:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7079:6:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7069:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7069:17:4"
															},
															"nodeType": "YulIf",
															"src": "7066:43:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7118:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7129:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7136:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7125:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7125:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7118:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7038:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7048:3:4",
														"type": ""
													}
												],
												"src": "7009:135:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7306:218:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7316:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7328:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7339:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7324:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7324:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7316:4:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7351:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7369:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7374:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7365:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7365:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7378:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7361:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7361:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7355:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7396:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7411:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7419:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7407:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7407:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7389:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7389:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7389:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7443:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7454:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7439:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7439:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7463:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7471:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7459:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7459:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7432:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7432:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7432:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7495:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7506:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7491:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7491:18:4"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7511:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7484:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7484:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7484:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7259:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7270:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7278:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7286:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7297:4:4",
														"type": ""
													}
												],
												"src": "7149:375:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7607:167:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7653:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7662:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7665:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7655:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7655:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7655:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7628:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7637:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7624:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7624:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7649:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7620:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7620:32:4"
															},
															"nodeType": "YulIf",
															"src": "7617:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7678:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7697:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7691:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7691:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7682:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7738:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7716:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7716:28:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7716:28:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7753:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7763:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7753:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7573:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7584:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7596:6:4",
														"type": ""
													}
												],
												"src": "7529:245:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7908:145:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7918:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7930:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7941:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7926:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7926:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7918:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7960:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7975:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7991:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7996:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7987:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7987:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8000:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7983:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7983:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7971:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7971:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7953:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7953:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7953:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8024:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8035:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8020:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8020:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8040:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8013:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8013:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8013:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7869:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7880:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7888:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7899:4:4",
														"type": ""
													}
												],
												"src": "7779:274:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8232:249:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8249:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8260:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8242:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8242:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8242:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8283:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8294:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8279:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8279:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8299:2:4",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8272:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8272:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8272:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8322:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8333:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8318:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8318:18:4"
																	},
																	{
																		"hexValue": "596f75206861766520746f207061792066656520746f2075736520536e697065",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8338:34:4",
																		"type": "",
																		"value": "You have to pay fee to use Snipe"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8311:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8311:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8311:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8393:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8404:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8389:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8389:18:4"
																	},
																	{
																		"hexValue": "46696e616e6365204d756c74692062756c6b2066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8409:29:4",
																		"type": "",
																		"value": "Finance Multi bulk function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8382:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8382:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8382:57:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8448:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8460:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8471:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8456:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8456:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8448:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4eb86dec3b7c3e53e01f18b918268fa96a47c207e64bdfa8013fcfdaf9f9175d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8209:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8223:4:4",
														"type": ""
													}
												],
												"src": "8058:423:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8660:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8677:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8688:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8670:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8670:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8670:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8711:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8722:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8707:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8707:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8727:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8700:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8700:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8700:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8750:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8761:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8746:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8746:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8766:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8739:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8739:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8739:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8821:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8832:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8817:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8817:18:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8837:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8810:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8810:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8810:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8855:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8867:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8878:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8863:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8863:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8855:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8637:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8651:4:4",
														"type": ""
													}
												],
												"src": "8486:402:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9067:182:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9084:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9095:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9077:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9077:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9077:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9118:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9129:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9114:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9114:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9134:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9107:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9107:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9107:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9157:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9168:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9153:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9153:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9173:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9146:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9146:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9146:62:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9217:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9229:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9240:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9225:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9225:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9217:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9044:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9058:4:4",
														"type": ""
													}
												],
												"src": "8893:356:4"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_contract$_IBEP20_$164t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IBEP20_$164__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_contract$_IBEP20_$164t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_dff637c805372e1029bc5f3e694294c9c9184ce638d2f2a7c6e0686c1b13522a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"You have to pay fee to use Snipe\")\n        mstore(add(headStart, 96), \"Finance Token Multi bulk functio\")\n        mstore(add(headStart, 128), \"n\")\n        tail := add(headStart, 160)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_4eb86dec3b7c3e53e01f18b918268fa96a47c207e64bdfa8013fcfdaf9f9175d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"You have to pay fee to use Snipe\")\n        mstore(add(headStart, 96), \"Finance Multi bulk function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100fe5760003560e01c80638da5cb5b11610095578063ddca3f4311610064578063ddca3f43146102b0578063e3cec849146102c6578063f2fde38b146102d9578063f7260d3e146102f9578063fb520af21461031957600080fd5b80638da5cb5b146102305780639c8b9e7b1461024e5780639cbd343314610264578063a4df02561461027757600080fd5b80633feff76d116100d15780633feff76d1461018357806344b6209d146101bb5780634b4fb1b0146101fb578063715018a61461021b57600080fd5b8063126ccd941461010357806317fc45e2146101255780632fc75eb01461014e5780633ccfd60b1461016e575b600080fd5b34801561010f57600080fd5b5061012361011e366004610adc565b610339565b005b34801561013157600080fd5b5061013b60065481565b6040519081526020015b60405180910390f35b34801561015a57600080fd5b50610123610169366004610b0c565b610368565b34801561017a57600080fd5b50610123610396565b34801561018f57600080fd5b506005546101a3906001600160a01b031681565b6040516001600160a01b039091168152602001610145565b3480156101c757600080fd5b506101eb6101d6366004610b38565b60046020526000908152604090205460ff1681565b6040519015158152602001610145565b34801561020757600080fd5b50610123610216366004610b38565b6103d8565b34801561022757600080fd5b50610123610404565b34801561023c57600080fd5b506000546001600160a01b03166101a3565b34801561025a57600080fd5b5061013b60035481565b610123610272366004610c96565b610416565b34801561028357600080fd5b506101eb610292366004610b38565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156102bc57600080fd5b5061013b60015481565b6101236102d4366004610d0c565b610730565b3480156102e557600080fd5b506101236102f4366004610b38565b610955565b34801561030557600080fd5b506002546101a3906001600160a01b031681565b34801561032557600080fd5b50610123610334366004610d7e565b6109cb565b610341610a1d565b600191909155600280546001600160a01b0319166001600160a01b03909216919091179055565b610370610a1d565b600580546001600160a01b0319166001600160a01b039390931692909217909155600655565b61039e610a1d565b600354156103d657600354604051339180156108fc02916000818181858888f193505050501580156103d4573d6000803e3d6000fd5b505b565b6103e0610a1d565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b61040c610a1d565b6103d66000610a77565b3360009081526004602052604090205460ff1615806104a157506006546005546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f9190610dac565b105b156105845760015434101561052d5760405162461bcd60e51b815260206004820152604160248201527f596f75206861766520746f207061792066656520746f2075736520536e69706560448201527f46696e616e636520546f6b656e204d756c74692062756c6b2066756e6374696f6064820152603760f91b608482015260a4015b60405180910390fd5b600154600360008282546105419190610ddb565b90915550506002546001546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610582573d6000803e3d6000fd5b505b6000805b83518110156105ca578281815181106105a3576105a3610df4565b6020026020010151826105b69190610ddb565b9150806105c281610e0a565b915050610588565b506040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038516906323b872dd906064016020604051808303816000875af115801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190610e23565b61064b57600080fd5b60005b835181101561072957846001600160a01b031663a9059cbb85838151811061067857610678610df4565b602002602001015185848151811061069257610692610df4565b60200260200101516040518363ffffffff1660e01b81526004016106cb9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af11580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e9190610e23565b61071757600080fd5b8061072181610e0a565b91505061064e565b5050505050565b3360009081526004602052604090205460ff1615806107bb57506006546005546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b99190610dac565b105b1561088f576001543410156108385760405162461bcd60e51b815260206004820152603b60248201527f596f75206861766520746f207061792066656520746f2075736520536e69706560448201527f46696e616e6365204d756c74692062756c6b2066756e6374696f6e00000000006064820152608401610524565b6001546003600082825461084c9190610ddb565b90915550506002546001546040516001600160a01b039092169181156108fc0291906000818181858888f1935050505015801561088d573d6000803e3d6000fd5b505b60005b8251811015610919578281815181106108ad576108ad610df4565b60200260200101516001600160a01b03166108fc8383815181106108d3576108d3610df4565b60200260200101519081150290604051600060405180830381858888f19350505050158015610906573d6000803e3d6000fd5b508061091181610e0a565b915050610892565b5047801561095057604051339082156108fc029083906000818181858888f1935050505015801561094e573d6000803e3d6000fd5b505b505050565b61095d610a1d565b6001600160a01b0381166109c25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610524565b6103d481610a77565b6109d3610a1d565b6001600160a01b03821660009081526004602052604090205460ff1615610a19576001600160a01b0382166000908152600460205260409020805460ff19168215151790555b5050565b6000546001600160a01b031633146103d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610524565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146103d457600080fd5b60008060408385031215610aef57600080fd5b823591506020830135610b0181610ac7565b809150509250929050565b60008060408385031215610b1f57600080fd5b8235610b2a81610ac7565b946020939093013593505050565b600060208284031215610b4a57600080fd5b8135610b5581610ac7565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b9b57610b9b610b5c565b604052919050565b600067ffffffffffffffff821115610bbd57610bbd610b5c565b5060051b60200190565b600082601f830112610bd857600080fd5b81356020610bed610be883610ba3565b610b72565b82815260059290921b84018101918181019086841115610c0c57600080fd5b8286015b84811015610c30578035610c2381610ac7565b8352918301918301610c10565b509695505050505050565b600082601f830112610c4c57600080fd5b81356020610c5c610be883610ba3565b82815260059290921b84018101918181019086841115610c7b57600080fd5b8286015b84811015610c305780358352918301918301610c7f565b600080600060608486031215610cab57600080fd5b8335610cb681610ac7565b9250602084013567ffffffffffffffff80821115610cd357600080fd5b610cdf87838801610bc7565b93506040860135915080821115610cf557600080fd5b50610d0286828701610c3b565b9150509250925092565b60008060408385031215610d1f57600080fd5b823567ffffffffffffffff80821115610d3757600080fd5b610d4386838701610bc7565b93506020850135915080821115610d5957600080fd5b50610d6685828601610c3b565b9150509250929050565b80151581146103d457600080fd5b60008060408385031215610d9157600080fd5b8235610d9c81610ac7565b91506020830135610b0181610d70565b600060208284031215610dbe57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610dee57610dee610dc5565b92915050565b634e487b7160e01b600052603260045260246000fd5b600060018201610e1c57610e1c610dc5565b5060010190565b600060208284031215610e3557600080fd5b8151610b5581610d7056fea2646970667358221220c2d0931c5a6a6d9e96072dec2b8fc798c6795a3d767a147d6fb23cb79e66722064736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDDCA3F43 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xE3CEC849 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xF7260D3E EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xFB520AF2 EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x9C8B9E7B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x9CBD3433 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA4DF0256 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FEFF76D GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3FEFF76D EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x44B6209D EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x4B4FB1B0 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x126CCD94 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x17FC45E2 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x2FC75EB0 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x16E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x339 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x396 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1A3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x404 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0x416 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1A3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x341 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x370 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x39E PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x3 SLOAD ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x40C PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x3D6 PUSH1 0x0 PUSH2 0xA77 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x4A1 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0xDAC JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x584 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520746F207061792066656520746F2075736520536E697065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x46696E616E636520546F6B656E204D756C74692062756C6B2066756E6374696F PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x541 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x582 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x5CA JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5A3 JUMPI PUSH2 0x5A3 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x5B6 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x5C2 DUP2 PUSH2 0xE0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x588 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x729 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x678 JUMPI PUSH2 0x678 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x692 JUMPI PUSH2 0x692 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CB SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70E SWAP2 SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0x721 DUP2 PUSH2 0xE0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x64E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x7BB JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x795 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0xDAC JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x88F JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520746F207061792066656520746F2075736520536E697065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x46696E616E6365204D756C74692062756C6B2066756E6374696F6E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x524 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x88D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x919 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8AD JUMPI PUSH2 0x8AD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8D3 JUMPI PUSH2 0x8D3 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH2 0x911 DUP2 PUSH2 0xE0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x892 JUMP JUMPDEST POP SELFBALANCE DUP1 ISZERO PUSH2 0x950 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x94E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x95D PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x524 JUMP JUMPDEST PUSH2 0x3D4 DUP2 PUSH2 0xA77 JUMP JUMPDEST PUSH2 0x9D3 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA19 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x524 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xB01 DUP2 PUSH2 0xAC7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xB2A DUP2 PUSH2 0xAC7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB55 DUP2 PUSH2 0xAC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9B PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBBD JUMPI PUSH2 0xBBD PUSH2 0xB5C JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xBED PUSH2 0xBE8 DUP4 PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0xB72 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xC0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xC30 JUMPI DUP1 CALLDATALOAD PUSH2 0xC23 DUP2 PUSH2 0xAC7 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xC10 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC5C PUSH2 0xBE8 DUP4 PUSH2 0xBA3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xC7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xC30 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xCB6 DUP2 PUSH2 0xAC7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCDF DUP8 DUP4 DUP9 ADD PUSH2 0xBC7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xCF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD02 DUP7 DUP3 DUP8 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD43 DUP7 DUP4 DUP8 ADD PUSH2 0xBC7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD66 DUP6 DUP3 DUP7 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD9C DUP2 PUSH2 0xAC7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xB01 DUP2 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xDEE JUMPI PUSH2 0xDEE PUSH2 0xDC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE1C JUMPI PUSH2 0xE1C PUSH2 0xDC5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB55 DUP2 PUSH2 0xD70 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xD0 SWAP4 SHR GAS PUSH11 0x6D9E96072DEC2B8FC798C6 PUSH26 0x5A3D767A147D6FB23CB79E66722064736F6C6343000810003300 ",
							"sourceMap": "139:2922:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:147;;;;;;;;;;-1:-1:-1;1999:147:3;;;;;:::i;:::-;;:::i;:::-;;417:23;;;;;;;;;;;;;;;;;;;616:25:4;;;604:2;589:18;417:23:3;;;;;;;;2781:154;;;;;;;;;;-1:-1:-1;2781:154:3;;;;;:::i;:::-;;:::i;2205:129::-;;;;;;;;;;;;;:::i;339:26::-;;;;;;;;;;-1:-1:-1;339:26:3;;;;-1:-1:-1;;;;;339:26:3;;;;;;-1:-1:-1;;;;;1164:32:4;;;1146:51;;1134:2;1119:18;339:26:3;986:217:4;285:47:3;;;;;;;;;;-1:-1:-1;285:47:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1625:14:4;;1618:22;1600:41;;1588:2;1573:18;285:47:3;1460:187:4;2379:106:3;;;;;;;;;;-1:-1:-1;2379:106:3;;;;;:::i;:::-;;:::i;1831:101:0:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;253:25:3;;;;;;;;;;;;;;;;1229:722;;;;;;:::i;:::-;;:::i;2943:115::-;;;;;;;;;;-1:-1:-1;2943:115:3;;;;;:::i;:::-;-1:-1:-1;;;;;3029:21:3;3006:4;3029:21;;;:15;:21;;;;;;;;;2943:115;190:18;;;;;;;;;;;;;;;;582:635;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;215:31:3:-;;;;;;;;;;-1:-1:-1;215:31:3;;;;-1:-1:-1;;;;;215:31:3;;;2567:167;;;;;;;;;;-1:-1:-1;2567:167:3;;;;;:::i;:::-;;:::i;1999:147::-;1094:13:0;:11;:13::i;:::-;2086:3:3::1;:12:::0;;;;2109:8:::1;:29:::0;;-1:-1:-1;;;;;;2109:29:3::1;-1:-1:-1::0;;;;;2109:29:3;;::::1;::::0;;;::::1;::::0;;1999:147::o;2781:154::-;1094:13:0;:11;:13::i;:::-;2878:12:3::1;:20:::0;;-1:-1:-1;;;;;;2878:20:3::1;-1:-1:-1::0;;;;;2878:20:3;;;::::1;::::0;;;::::1;::::0;;;2909:8:::1;:18:::0;2781:154::o;2205:129::-;1094:13:0;:11;:13::i;:::-;2258:10:3::1;::::0;:14;2255:71:::1;;2315:10;::::0;2286:40:::1;::::0;2294:10:::1;::::0;2286:40;::::1;;;::::0;::::1;::::0;;;2315:10;2294;2286:40;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2255:71;2205:129::o:0;2379:106::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2448:22:3::1;;::::0;;;:15:::1;:22;::::0;;;;:29;;-1:-1:-1;;2448:29:3::1;2473:4;2448:29;::::0;;2379:106::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;1229:722:3:-:0;1371:10;1355:27;;;;:15;:27;;;;;;;;1354:28;;:77;;-1:-1:-1;1423:8:3;;1386:12;;:34;;-1:-1:-1;;;1386:34:3;;1409:10;1386:34;;;1146:51:4;-1:-1:-1;;;;;1386:12:3;;;;:22;;1119:18:4;;1386:34:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;1354:77;1351:282;;;1470:3;;1457:9;:16;;1448:95;;;;-1:-1:-1;;;1448:95:3;;6343:2:4;1448:95:3;;;6325:21:4;6382:2;6362:18;;;6355:30;6421:34;6401:18;;;6394:62;6492:34;6472:18;;;6465:62;-1:-1:-1;;;6543:19:4;;;6536:32;6585:19;;1448:95:3;;;;;;;;;1572:3;;1558:10;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;1598:8:3;;;1617:3;1590:31;;-1:-1:-1;;;;;1598:8:3;;;;1590:31;;;;;1617:3;1598:8;1590:31;1598:8;1590:31;1617:3;1598:8;1590:31;;;;;;;;;;;;;;;;;;;;;1351:282;1643:13;1676:9;1671:79;1695:10;:17;1691:1;:21;1671:79;;;1741:6;1748:1;1741:9;;;;;;;;:::i;:::-;;;;;;;1732:18;;;;;:::i;:::-;;-1:-1:-1;1714:3:3;;;;:::i;:::-;;;;1671:79;;;-1:-1:-1;1769:52:3;;-1:-1:-1;;;1769:52:3;;1788:10;1769:52;;;7389:34:4;1808:4:3;7439:18:4;;;7432:43;7491:18;;;7484:34;;;-1:-1:-1;;;;;1769:18:3;;;;;7324::4;;1769:52:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1761:61;;;;;;1838:9;1833:110;1857:10;:17;1853:1;:21;1833:110;;;1902:5;-1:-1:-1;;;;;1902:14:3;;1917:10;1928:1;1917:13;;;;;;;;:::i;:::-;;;;;;;1932:6;1939:1;1932:9;;;;;;;;:::i;:::-;;;;;;;1902:40;;;;;;;;;;;;;;;-1:-1:-1;;;;;7971:32:4;;;;7953:51;;8035:2;8020:18;;8013:34;7941:2;7926:18;;7779:274;1902:40:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1894:49;;;;;;1876:3;;;;:::i;:::-;;;;1833:110;;;;1340:611;1229:722;;;:::o;582:635::-;708:10;692:27;;;;:15;:27;;;;;;;;691:28;;:77;;-1:-1:-1;760:8:3;;723:12;;:34;;-1:-1:-1;;;723:34:3;;746:10;723:34;;;1146:51:4;-1:-1:-1;;;;;723:12:3;;;;:22;;1119:18:4;;723:34:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;691:77;688:268;;;808:3;;795:9;:16;;786:89;;;;-1:-1:-1;;;786:89:3;;8260:2:4;786:89:3;;;8242:21:4;8299:2;8279:18;;;8272:30;8338:34;8318:18;;;8311:62;8409:29;8389:18;;;8382:57;8456:19;;786:89:3;8058:423:4;786:89:3;904:3;;890:10;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;922:8:3;;;940:3;922:22;;-1:-1:-1;;;;;922:8:3;;;;:22;;;;;940:3;922:8;:22;:8;:22;940:3;922:8;:22;;;;;;;;;;;;;;;;;;;;;688:268;971:9;966:103;990:10;:17;986:1;:21;966:103;;;1035:10;1046:1;1035:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1027:31:3;:42;1059:6;1066:1;1059:9;;;;;;;;:::i;:::-;;;;;;;1027:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1009:3:3;;;;:::i;:::-;;;;966:103;;;-1:-1:-1;1104:21:3;1146:11;;1142:67;;1172:37;;1180:10;;1172:37;;;;;1201:7;;1172:37;;;;1201:7;1180:10;1172:37;;;;;;;;;;;;;;;;;;;;;1142:67;677:540;582:635;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;8688:2:4;2161:73:0::1;::::0;::::1;8670:21:4::0;8727:2;8707:18;;;8700:30;8766:34;8746:18;;;8739:62;-1:-1:-1;;;8817:18:4;;;8810:36;8863:19;;2161:73:0::1;8486:402:4::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;2567:167:3:-:0;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2646:22:3;::::1;;::::0;;;:15:::1;:22;::::0;;;;;::::1;;2643:84;;;-1:-1:-1::0;;;;;2685:22:3;::::1;;::::0;;;:15:::1;:22;::::0;;;;:30;;-1:-1:-1;;2685:30:3::1;::::0;::::1;;;::::0;;2643:84:::1;2567:167:::0;;:::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;9095:2:4;1414:68:0;;;9077:21:4;;;9114:18;;;9107:30;9173:34;9153:18;;;9146:62;9225:18;;1414:68:0;8893:356:4;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:131:4:-;-1:-1:-1;;;;;89:31:4;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;331:9;318:23;308:33;;391:2;380:9;376:18;363:32;404:31;429:5;404:31;:::i;:::-;454:5;444:15;;;150:315;;;;;:::o;652:329::-;734:6;742;795:2;783:9;774:7;770:23;766:32;763:52;;;811:1;808;801:12;763:52;850:9;837:23;869:31;894:5;869:31;:::i;:::-;919:5;971:2;956:18;;;;943:32;;-1:-1:-1;;;652:329:4:o;1208:247::-;1267:6;1320:2;1308:9;1299:7;1295:23;1291:32;1288:52;;;1336:1;1333;1326:12;1288:52;1375:9;1362:23;1394:31;1419:5;1394:31;:::i;:::-;1444:5;1208:247;-1:-1:-1;;;1208:247:4:o;1860:127::-;1921:10;1916:3;1912:20;1909:1;1902:31;1952:4;1949:1;1942:15;1976:4;1973:1;1966:15;1992:275;2063:2;2057:9;2128:2;2109:13;;-1:-1:-1;;2105:27:4;2093:40;;2163:18;2148:34;;2184:22;;;2145:62;2142:88;;;2210:18;;:::i;:::-;2246:2;2239:22;1992:275;;-1:-1:-1;1992:275:4:o;2272:183::-;2332:4;2365:18;2357:6;2354:30;2351:56;;;2387:18;;:::i;:::-;-1:-1:-1;2432:1:4;2428:14;2444:4;2424:25;;2272:183::o;2460:737::-;2514:5;2567:3;2560:4;2552:6;2548:17;2544:27;2534:55;;2585:1;2582;2575:12;2534:55;2621:6;2608:20;2647:4;2671:60;2687:43;2727:2;2687:43;:::i;:::-;2671:60;:::i;:::-;2765:15;;;2851:1;2847:10;;;;2835:23;;2831:32;;;2796:12;;;;2875:15;;;2872:35;;;2903:1;2900;2893:12;2872:35;2939:2;2931:6;2927:15;2951:217;2967:6;2962:3;2959:15;2951:217;;;3047:3;3034:17;3064:31;3089:5;3064:31;:::i;:::-;3108:18;;3146:12;;;;2984;;2951:217;;;-1:-1:-1;3186:5:4;2460:737;-1:-1:-1;;;;;;2460:737:4:o;3202:662::-;3256:5;3309:3;3302:4;3294:6;3290:17;3286:27;3276:55;;3327:1;3324;3317:12;3276:55;3363:6;3350:20;3389:4;3413:60;3429:43;3469:2;3429:43;:::i;3413:60::-;3507:15;;;3593:1;3589:10;;;;3577:23;;3573:32;;;3538:12;;;;3617:15;;;3614:35;;;3645:1;3642;3635:12;3614:35;3681:2;3673:6;3669:15;3693:142;3709:6;3704:3;3701:15;3693:142;;;3775:17;;3763:30;;3813:12;;;;3726;;3693:142;;3869:744;4010:6;4018;4026;4079:2;4067:9;4058:7;4054:23;4050:32;4047:52;;;4095:1;4092;4085:12;4047:52;4134:9;4121:23;4153:31;4178:5;4153:31;:::i;:::-;4203:5;-1:-1:-1;4259:2:4;4244:18;;4231:32;4282:18;4312:14;;;4309:34;;;4339:1;4336;4329:12;4309:34;4362:61;4415:7;4406:6;4395:9;4391:22;4362:61;:::i;:::-;4352:71;;4476:2;4465:9;4461:18;4448:32;4432:48;;4505:2;4495:8;4492:16;4489:36;;;4521:1;4518;4511:12;4489:36;;4544:63;4599:7;4588:8;4577:9;4573:24;4544:63;:::i;:::-;4534:73;;;3869:744;;;;;:::o;4618:595::-;4736:6;4744;4797:2;4785:9;4776:7;4772:23;4768:32;4765:52;;;4813:1;4810;4803:12;4765:52;4853:9;4840:23;4882:18;4923:2;4915:6;4912:14;4909:34;;;4939:1;4936;4929:12;4909:34;4962:61;5015:7;5006:6;4995:9;4991:22;4962:61;:::i;:::-;4952:71;;5076:2;5065:9;5061:18;5048:32;5032:48;;5105:2;5095:8;5092:16;5089:36;;;5121:1;5118;5111:12;5089:36;;5144:63;5199:7;5188:8;5177:9;5173:24;5144:63;:::i;:::-;5134:73;;;4618:595;;;;;:::o;5442:118::-;5528:5;5521:13;5514:21;5507:5;5504:32;5494:60;;5550:1;5547;5540:12;5565:382;5630:6;5638;5691:2;5679:9;5670:7;5666:23;5662:32;5659:52;;;5707:1;5704;5697:12;5659:52;5746:9;5733:23;5765:31;5790:5;5765:31;:::i;:::-;5815:5;-1:-1:-1;5872:2:4;5857:18;;5844:32;5885:30;5844:32;5885:30;:::i;5952:184::-;6022:6;6075:2;6063:9;6054:7;6050:23;6046:32;6043:52;;;6091:1;6088;6081:12;6043:52;-1:-1:-1;6114:16:4;;5952:184;-1:-1:-1;5952:184:4:o;6615:127::-;6676:10;6671:3;6667:20;6664:1;6657:31;6707:4;6704:1;6697:15;6731:4;6728:1;6721:15;6747:125;6812:9;;;6833:10;;;6830:36;;;6846:18;;:::i;:::-;6747:125;;;;:::o;6877:127::-;6938:10;6933:3;6929:20;6926:1;6919:31;6969:4;6966:1;6959:15;6993:4;6990:1;6983:15;7009:135;7048:3;7069:17;;;7066:43;;7089:18;;:::i;:::-;-1:-1:-1;7136:1:4;7125:13;;7009:135::o;7529:245::-;7596:6;7649:2;7637:9;7628:7;7624:23;7620:32;7617:52;;;7665:1;7662;7655:12;7617:52;7697:9;7691:16;7716:28;7738:5;7716:28;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "740400",
								"executionCost": "75089",
								"totalCost": "815489"
							},
							"external": {
								"BNBmultisender(address[],uint256[])": "infinite",
								"SetTokenToholdAndQuantity(address,uint256)": "infinite",
								"TOKENmultisender(address,address[],uint256[])": "infinite",
								"authorizeToUse(address)": "infinite",
								"authorizedusers(address)": "2571",
								"fee()": "2306",
								"feeamounts()": "2329",
								"owner()": "2354",
								"quantity()": "2330",
								"readAuthorizedUsers(address)": "2633",
								"receiver()": "2425",
								"renounceOwnership()": "infinite",
								"setauthor(address,bool)": "infinite",
								"setfeeToUse(uint256,address)": "infinite",
								"tokenaddress()": "2360",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 3061,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 139,
									"end": 3061,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 139,
									"end": 3061,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 485,
									"end": 574,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 485,
									"end": 574,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 485,
									"end": 574,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 485,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 485,
									"end": 574,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 485,
									"end": 574,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 485,
									"end": 574,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 485,
									"end": 574,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 485,
									"end": 574,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 485,
									"end": 574,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1247,
									"end": 1254,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 510,
									"end": 518,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 510,
									"end": 537,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 510,
									"end": 537,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 510,
									"end": 537,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 510,
									"end": 537,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 510,
									"end": 537,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 510,
									"end": 537,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 510,
									"end": 537,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 510,
									"end": 537,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 510,
									"end": 537,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 554,
									"end": 566,
									"name": "PUSH",
									"source": 3,
									"value": "5AF3107A4000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 548,
									"end": 566,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 139,
									"end": 3061,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 139,
									"end": 3061,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 139,
									"end": 3061,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 139,
									"end": 3061,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 139,
									"end": 3061,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 3061,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 3061,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 3061,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 3061,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 139,
									"end": 3061,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 3061,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c2d0931c5a6a6d9e96072dec2b8fc798c6795a3d767a147d6fb23cb79e66722064736f6c63430008100033",
									".code": [
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "DDCA3F43"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "DDCA3F43"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "E3CEC849"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "F7260D3E"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "FB520AF2"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "9C8B9E7B"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "9CBD3433"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "A4DF0256"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "3FEFF76D"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "3FEFF76D"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "44B6209D"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "4B4FB1B0"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "126CCD94"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "17FC45E2"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "2FC75EB0"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "3CCFD60B"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 3061,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1999,
											"end": 2146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1999,
											"end": 2146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 417,
											"end": 440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 417,
											"end": 440,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 440,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 417,
											"end": 440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 417,
											"end": 440,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 417,
											"end": 440,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 417,
											"end": 440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 440,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 616,
											"end": 641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 616,
											"end": 641,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 641,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 604,
											"end": 606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 589,
											"end": 607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 417,
											"end": 440,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 417,
											"end": 440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 440,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 440,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2781,
											"end": 2935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2781,
											"end": 2935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2205,
											"end": 2334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 339,
											"end": 365,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 339,
											"end": 365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 339,
											"end": 365,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 339,
											"end": 365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 339,
											"end": 365,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 339,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 339,
											"end": 365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 339,
											"end": 365,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 339,
											"end": 365,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 339,
											"end": 365,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 365,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 339,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 339,
											"end": 365,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 339,
											"end": 365,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 339,
											"end": 365,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 339,
											"end": 365,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 339,
											"end": 365,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 339,
											"end": 365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 339,
											"end": 365,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 365,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1164,
											"end": 1196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1196,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1197,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 986,
											"end": 1203,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 285,
											"end": 332,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 285,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 285,
											"end": 332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 285,
											"end": 332,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 332,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1625,
											"end": 1639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1625,
											"end": 1639,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1640,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1600,
											"end": 1641,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1600,
											"end": 1641,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 285,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1460,
											"end": 1647,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2379,
											"end": 2485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2379,
											"end": 2485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 253,
											"end": 278,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 253,
											"end": 278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 253,
											"end": 278,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 253,
											"end": 278,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 253,
											"end": 278,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 253,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 253,
											"end": 278,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 253,
											"end": 278,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 278,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 253,
											"end": 278,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 253,
											"end": 278,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 253,
											"end": 278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 253,
											"end": 278,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 253,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 253,
											"end": 278,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 253,
											"end": 278,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 253,
											"end": 278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 253,
											"end": 278,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1229,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1229,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2943,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3029,
											"end": 3050,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3006,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3050,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3050,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3044,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3029,
											"end": 3050,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3050,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3050,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3050,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3050,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3050,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3029,
											"end": 3050,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3058,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 190,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 190,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 190,
											"end": 208,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 190,
											"end": 208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 208,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 190,
											"end": 208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 190,
											"end": 208,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 190,
											"end": 208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 208,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 190,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 190,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 190,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 190,
											"end": 208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 190,
											"end": 208,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 190,
											"end": 208,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 190,
											"end": 208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 190,
											"end": 208,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 582,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 582,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 215,
											"end": 246,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 215,
											"end": 246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 215,
											"end": 246,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 215,
											"end": 246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 246,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 215,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 215,
											"end": 246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 215,
											"end": 246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 246,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 215,
											"end": 246,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 215,
											"end": 246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 246,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 215,
											"end": 246,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 215,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 215,
											"end": 246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 215,
											"end": 246,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 215,
											"end": 246,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 215,
											"end": 246,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2567,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2567,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1999,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2086,
											"end": 2098,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2098,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2098,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2098,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2109,
											"end": 2138,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2138,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2138,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2138,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2781,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2878,
											"end": 2898,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2898,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2878,
											"end": 2898,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2878,
											"end": 2898,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2898,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2898,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2898,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2898,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2898,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2898,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2898,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2909,
											"end": 2927,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2205,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2258,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2272,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2255,
											"end": 2326,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2315,
											"end": 2325,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2326,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2294,
											"end": 2304,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2294,
											"end": 2304,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2325,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2294,
											"end": 2304,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2326,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2326,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2255,
											"end": 2326,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2379,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2470,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2470,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2470,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2470,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2470,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2477,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2477,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2448,
											"end": 2477,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2477,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1381,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1370,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1382,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1354,
											"end": 1431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1423,
											"end": 1431,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1423,
											"end": 1431,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1398,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1386,
											"end": 1398,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1419,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1197,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1398,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1408,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1386,
											"end": 1408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1386,
											"end": 1420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1386,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1431,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1431,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1354,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1633,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1351,
											"end": 1633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1473,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1470,
											"end": 1473,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1466,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1473,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1473,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6345,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6325,
											"end": 6346,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6382,
											"end": 6384,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6355,
											"end": 6385,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6455,
											"name": "PUSH",
											"source": 4,
											"value": "596F75206861766520746F207061792066656520746F2075736520536E697065"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 6456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "PUSH",
											"source": 4,
											"value": "46696E616E636520546F6B656E204D756C74692062756C6B2066756E6374696F"
										},
										{
											"begin": 6472,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 6472,
											"end": 6490,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6472,
											"end": 6490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6465,
											"end": 6527,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6543,
											"end": 6562,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6543,
											"end": 6562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6543,
											"end": 6562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6536,
											"end": 6568,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "PUSH",
											"source": 4,
											"value": "A4"
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1575,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1572,
											"end": 1575,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1568,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1558,
											"end": 1568,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1575,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1575,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1575,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1558,
											"end": 1575,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1575,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1558,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1575,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1558,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1575,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1575,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1575,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1598,
											"end": 1606,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1598,
											"end": 1606,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1606,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1598,
											"end": 1606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1606,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1606,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1606,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1606,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1606,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1606,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1633,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1351,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1643,
											"end": 1656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1750,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1671,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1705,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1712,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1712,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1750,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1671,
											"end": 1750,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1741,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1732,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1714,
											"end": 1717,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1714,
											"end": 1717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1714,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1717,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1714,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1671,
											"end": 1750,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1750,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1671,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7389,
											"end": 7423,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7432,
											"end": 7475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7491,
											"end": 7509,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 7491,
											"end": 7509,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7491,
											"end": 7509,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7484,
											"end": 7518,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7484,
											"end": 7518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7484,
											"end": 7518,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1769,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1761,
											"end": 1822,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1822,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1822,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1822,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1761,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1838,
											"end": 1847,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1943,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1833,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1867,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1874,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1853,
											"end": 1874,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1943,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1833,
											"end": 1943,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1902,
											"end": 1916,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1916,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1917,
											"end": 1927,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1917,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1930,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1938,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1932,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7971,
											"end": 8003,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7971,
											"end": 8003,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7971,
											"end": 8003,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7971,
											"end": 8003,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7953,
											"end": 8004,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7953,
											"end": 8004,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8035,
											"end": 8037,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8020,
											"end": 8038,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8013,
											"end": 8047,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7941,
											"end": 7943,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7779,
											"end": 8053,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1902,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1902,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1894,
											"end": 1943,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1943,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1943,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1943,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1894,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1876,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1833,
											"end": 1943,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1943,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1833,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 1951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 708,
											"end": 718,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 692,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 692,
											"end": 719,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 692,
											"end": 719,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 692,
											"end": 707,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 692,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 719,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 692,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 692,
											"end": 719,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 692,
											"end": 719,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 692,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 692,
											"end": 719,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 691,
											"end": 719,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 691,
											"end": 719,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 691,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 691,
											"end": 768,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 760,
											"end": 768,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 760,
											"end": 768,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 723,
											"end": 735,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 723,
											"end": 735,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 723,
											"end": 757,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 746,
											"end": 756,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1197,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 723,
											"end": 735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 723,
											"end": 735,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 723,
											"end": 735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 745,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 723,
											"end": 757,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 723,
											"end": 757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 723,
											"end": 757,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 723,
											"end": 757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 723,
											"end": 768,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 691,
											"end": 768,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 691,
											"end": 768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 688,
											"end": 956,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 688,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 688,
											"end": 956,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 808,
											"end": 811,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 808,
											"end": 811,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 795,
											"end": 804,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 795,
											"end": 811,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 795,
											"end": 811,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 786,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 786,
											"end": 875,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 786,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 875,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 786,
											"end": 875,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 786,
											"end": 875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8260,
											"end": 8262,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 786,
											"end": 875,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 786,
											"end": 875,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8242,
											"end": 8263,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8301,
											"name": "PUSH",
											"source": 4,
											"value": "3B"
										},
										{
											"begin": 8279,
											"end": 8297,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8279,
											"end": 8297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8272,
											"end": 8302,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8338,
											"end": 8372,
											"name": "PUSH",
											"source": 4,
											"value": "596F75206861766520746F207061792066656520746F2075736520536E697065"
										},
										{
											"begin": 8318,
											"end": 8336,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 8318,
											"end": 8336,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8318,
											"end": 8336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8311,
											"end": 8373,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8409,
											"end": 8438,
											"name": "PUSH",
											"source": 4,
											"value": "46696E616E6365204D756C74692062756C6B2066756E6374696F6E0000000000"
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8382,
											"end": 8439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8456,
											"end": 8475,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 8456,
											"end": 8475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 786,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 8058,
											"end": 8481,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 786,
											"end": 875,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 786,
											"end": 875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 904,
											"end": 907,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 904,
											"end": 907,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 890,
											"end": 900,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 890,
											"end": 900,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 890,
											"end": 907,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 890,
											"end": 907,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 890,
											"end": 907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 907,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 890,
											"end": 907,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 890,
											"end": 907,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 890,
											"end": 907,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 922,
											"end": 930,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 922,
											"end": 930,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 922,
											"end": 930,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 943,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 944,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 922,
											"end": 930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 922,
											"end": 930,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 922,
											"end": 930,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 922,
											"end": 930,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 922,
											"end": 944,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 940,
											"end": 943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 922,
											"end": 930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 944,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 922,
											"end": 930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 940,
											"end": 943,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 922,
											"end": 930,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 922,
											"end": 944,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 944,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 944,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 922,
											"end": 944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 688,
											"end": 956,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 688,
											"end": 956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 971,
											"end": 980,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1069,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 966,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 990,
											"end": 1000,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 990,
											"end": 1007,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 986,
											"end": 987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1007,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 966,
											"end": 1069,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 966,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 966,
											"end": 1069,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1045,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1047,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1035,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1027,
											"end": 1058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 1059,
											"end": 1065,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1059,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 1012,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1009,
											"end": 1012,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1009,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1012,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1009,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1012,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 966,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 966,
											"end": 1069,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 966,
											"end": 1069,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 966,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1104,
											"end": 1125,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1157,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1142,
											"end": 1209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1209,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1142,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 677,
											"end": 1217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 582,
											"end": 1217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 582,
											"end": 1217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8690,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8670,
											"end": 8691,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8727,
											"end": 8729,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8700,
											"end": 8730,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8766,
											"end": 8800,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8746,
											"end": 8764,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 8746,
											"end": 8764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8746,
											"end": 8764,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8739,
											"end": 8801,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8846,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8882,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 8863,
											"end": 8882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 8486,
											"end": 8888,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2646,
											"end": 2668,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2668,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2668,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2668,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2668,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2646,
											"end": 2668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2668,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2668,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2668,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2668,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2668,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2646,
											"end": 2668,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2643,
											"end": 2727,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2643,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2643,
											"end": 2727,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2685,
											"end": 2707,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2707,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2707,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2685,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2685,
											"end": 2707,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2707,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2685,
											"end": 2707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2707,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2715,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2715,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2685,
											"end": 2715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2715,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2715,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2715,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2715,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2715,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2643,
											"end": 2727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2643,
											"end": 2727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9095,
											"end": 9097,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9098,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9098,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9098,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9132,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9114,
											"end": 9132,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9132,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9107,
											"end": 9137,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9173,
											"end": 9207,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9146,
											"end": 9208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 8893,
											"end": 9249,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 150,
											"end": 465,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 150,
											"end": 465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 218,
											"end": 224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 279,
											"end": 281,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 276,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 258,
											"end": 265,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 254,
											"end": 277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 250,
											"end": 282,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 247,
											"end": 299,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 247,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 247,
											"end": 299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 295,
											"end": 296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 247,
											"end": 299,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 247,
											"end": 299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 331,
											"end": 340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 318,
											"end": 341,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 308,
											"end": 341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 308,
											"end": 341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 391,
											"end": 393,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 376,
											"end": 394,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 363,
											"end": 395,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 404,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 429,
											"end": 434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 404,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 404,
											"end": 435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 404,
											"end": 435,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 404,
											"end": 435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 454,
											"end": 459,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 444,
											"end": 459,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 444,
											"end": 459,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 444,
											"end": 459,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 150,
											"end": 465,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 150,
											"end": 465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 150,
											"end": 465,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 150,
											"end": 465,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 150,
											"end": 465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 150,
											"end": 465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 652,
											"end": 981,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 652,
											"end": 981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 734,
											"end": 740,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 795,
											"end": 797,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 792,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 774,
											"end": 781,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 770,
											"end": 793,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 766,
											"end": 798,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 763,
											"end": 815,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 763,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 763,
											"end": 815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 811,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 809,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 801,
											"end": 813,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 763,
											"end": 815,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 763,
											"end": 815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 850,
											"end": 859,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 837,
											"end": 860,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 869,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 894,
											"end": 899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 869,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 869,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 869,
											"end": 900,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 869,
											"end": 900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 919,
											"end": 924,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 956,
											"end": 974,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 956,
											"end": 974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 956,
											"end": 974,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 956,
											"end": 974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 943,
											"end": 975,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 943,
											"end": 975,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 652,
											"end": 981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1455,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1208,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1299,
											"end": 1306,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1318,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1323,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1340,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 1288,
											"end": 1340,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1338,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1340,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 1288,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1384,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 1419,
											"end": 1424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1394,
											"end": 1425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1449,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1455,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1987,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 1860,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 1916,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1912,
											"end": 1932,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1933,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1956,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 1957,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 1980,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1973,
											"end": 1974,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1981,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2267,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1992,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2065,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2109,
											"end": 2122,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2122,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2132,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2093,
											"end": 2133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2093,
											"end": 2133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2182,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2182,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2206,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2206,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2206,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2145,
											"end": 2207,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2142,
											"end": 2230,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2142,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2142,
											"end": 2230,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2210,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2267,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1992,
											"end": 2267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2455,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2272,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2384,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2407,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2351,
											"end": 2407,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2387,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2387,
											"end": 2405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2405,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2387,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2433,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2428,
											"end": 2442,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2448,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2424,
											"end": 2449,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 3197,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2460,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2570,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2564,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2571,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2534,
											"end": 2589,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2589,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2534,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2628,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2651,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2687,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 2727,
											"end": 2729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2687,
											"end": 2730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2730,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 2687,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2671,
											"end": 2731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2731,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2671,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2765,
											"end": 2780,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2765,
											"end": 2780,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2765,
											"end": 2780,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2852,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2847,
											"end": 2857,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2857,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2857,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2858,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2858,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2863,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2907,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2872,
											"end": 2907,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2903,
											"end": 2904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2901,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2907,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2872,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2941,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2927,
											"end": 2942,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3047,
											"end": 3050,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3034,
											"end": 3051,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3089,
											"end": 3094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3064,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3095,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3064,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3146,
											"end": 3158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3146,
											"end": 3158,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3146,
											"end": 3158,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3146,
											"end": 3158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 2996,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 2996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2951,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3186,
											"end": 3191,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 3197,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 3197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3202,
											"end": 3864,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 3202,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 3306,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3294,
											"end": 3300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3286,
											"end": 3313,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3276,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3276,
											"end": 3331,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3327,
											"end": 3328,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3325,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3329,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3276,
											"end": 3331,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3276,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3363,
											"end": 3369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3370,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3429,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3469,
											"end": 3471,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3429,
											"end": 3472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3473,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3413,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3522,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3593,
											"end": 3594,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3589,
											"end": 3599,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3589,
											"end": 3599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3589,
											"end": 3599,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3589,
											"end": 3599,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3600,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3600,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3605,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3605,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3617,
											"end": 3632,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3617,
											"end": 3632,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3617,
											"end": 3632,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3614,
											"end": 3649,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3614,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3614,
											"end": 3649,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3646,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3643,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3635,
											"end": 3647,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3614,
											"end": 3649,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3614,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3681,
											"end": 3683,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3679,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3709,
											"end": 3715,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3701,
											"end": 3716,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3792,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3792,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 3825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 3825,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 3825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 3825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3726,
											"end": 3738,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3726,
											"end": 3738,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3693,
											"end": 3835,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4010,
											"end": 4016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4026,
											"end": 4032,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4067,
											"end": 4076,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4058,
											"end": 4065,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4077,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4082,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4085,
											"end": 4097,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4134,
											"end": 4143,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4121,
											"end": 4144,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4153,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4259,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4231,
											"end": 4263,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 4309,
											"end": 4343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4337,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4343,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 4309,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4362,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 4415,
											"end": 4422,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4412,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4395,
											"end": 4404,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4413,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4362,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 4362,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4362,
											"end": 4423,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 4362,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4352,
											"end": 4423,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4352,
											"end": 4423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4476,
											"end": 4478,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4465,
											"end": 4474,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4448,
											"end": 4480,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4432,
											"end": 4480,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4432,
											"end": 4480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4505,
											"end": 4507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4503,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4508,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4489,
											"end": 4525,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4489,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 4489,
											"end": 4525,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4521,
											"end": 4522,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4518,
											"end": 4519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4511,
											"end": 4523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4489,
											"end": 4525,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 4489,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4489,
											"end": 4525,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 4599,
											"end": 4606,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4588,
											"end": 4596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4577,
											"end": 4586,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 4544,
											"end": 4607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4534,
											"end": 4607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4534,
											"end": 4607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4534,
											"end": 4607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4613,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4797,
											"end": 4799,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4785,
											"end": 4794,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4783,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4795,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4768,
											"end": 4800,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4814,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4810,
											"end": 4811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4803,
											"end": 4815,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4863,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4915,
											"end": 4921,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 4926,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4939,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4936,
											"end": 4937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 4941,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5004,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4991,
											"end": 5013,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 4962,
											"end": 5023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4952,
											"end": 5023,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4952,
											"end": 5023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5078,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5065,
											"end": 5074,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5061,
											"end": 5079,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5080,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5032,
											"end": 5080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5032,
											"end": 5080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5105,
											"end": 5107,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5095,
											"end": 5103,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 5199,
											"end": 5206,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5197,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 5144,
											"end": 5207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5134,
											"end": 5207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5134,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5134,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4618,
											"end": 5213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5560,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 5442,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5521,
											"end": 5534,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5535,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5507,
											"end": 5512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5536,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5494,
											"end": 5554,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5548,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5552,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5565,
											"end": 5947,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5565,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5630,
											"end": 5636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5691,
											"end": 5693,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5679,
											"end": 5688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5677,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5666,
											"end": 5689,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5694,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5659,
											"end": 5711,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5659,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 5659,
											"end": 5711,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5704,
											"end": 5705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5697,
											"end": 5709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5659,
											"end": 5711,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 5659,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5746,
											"end": 5755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5733,
											"end": 5756,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 5790,
											"end": 5795,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 5765,
											"end": 5796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5796,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 5765,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5815,
											"end": 5820,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5872,
											"end": 5874,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5844,
											"end": 5876,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5885,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 5844,
											"end": 5876,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5885,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 5885,
											"end": 5915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6136,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5952,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6077,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6063,
											"end": 6072,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6054,
											"end": 6061,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6050,
											"end": 6073,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6078,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6043,
											"end": 6095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6043,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 6043,
											"end": 6095,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6088,
											"end": 6089,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6081,
											"end": 6093,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6043,
											"end": 6095,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 6043,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6114,
											"end": 6130,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6114,
											"end": 6130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5952,
											"end": 6136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6615,
											"end": 6742,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 6615,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6676,
											"end": 6686,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 6671,
											"end": 6674,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6667,
											"end": 6687,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6664,
											"end": 6665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6707,
											"end": 6711,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6697,
											"end": 6712,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6731,
											"end": 6735,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6728,
											"end": 6729,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6736,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6872,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6747,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6812,
											"end": 6821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6812,
											"end": 6821,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6812,
											"end": 6821,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6833,
											"end": 6843,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6833,
											"end": 6843,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6833,
											"end": 6843,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6830,
											"end": 6866,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6830,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 6830,
											"end": 6866,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 6846,
											"end": 6864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 6846,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6872,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6877,
											"end": 7004,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 6877,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6938,
											"end": 6948,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 6933,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6926,
											"end": 6927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6919,
											"end": 6950,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 6973,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6966,
											"end": 6967,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6959,
											"end": 6974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6993,
											"end": 6997,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6990,
											"end": 6991,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 6998,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7009,
											"end": 7144,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 7009,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7048,
											"end": 7051,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7069,
											"end": 7086,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7069,
											"end": 7086,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7069,
											"end": 7086,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7066,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 7066,
											"end": 7109,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 7089,
											"end": 7107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7136,
											"end": 7137,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7125,
											"end": 7138,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7125,
											"end": 7138,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7009,
											"end": 7144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7774,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 7529,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7596,
											"end": 7602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7651,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7637,
											"end": 7646,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7628,
											"end": 7635,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7647,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7620,
											"end": 7652,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 7617,
											"end": 7669,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7617,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 7617,
											"end": 7669,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7663,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7667,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7617,
											"end": 7669,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 7617,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7697,
											"end": 7706,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7691,
											"end": 7707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7716,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 7738,
											"end": 7743,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7716,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 7716,
											"end": 7744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"SnipeFinanceMultisenders/IBEP20.sol",
								"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BNBmultisender(address[],uint256[])": "e3cec849",
							"SetTokenToholdAndQuantity(address,uint256)": "2fc75eb0",
							"TOKENmultisender(address,address[],uint256[])": "9cbd3433",
							"authorizeToUse(address)": "4b4fb1b0",
							"authorizedusers(address)": "44b6209d",
							"fee()": "ddca3f43",
							"feeamounts()": "9c8b9e7b",
							"owner()": "8da5cb5b",
							"quantity()": "17fc45e2",
							"readAuthorizedUsers(address)": "a4df0256",
							"receiver()": "f7260d3e",
							"renounceOwnership()": "715018a6",
							"setauthor(address,bool)": "fb520af2",
							"setfeeToUse(uint256,address)": "126ccd94",
							"tokenaddress()": "3feff76d",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"BNBmultisender\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"SetTokenToholdAndQuantity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TOKENmultisender\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"authorizeToUse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedusers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeamounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quantity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"readAuthorizedUsers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"setauthor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newfee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"setfeeToUse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenaddress\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":\"SnipeFinanceMultisenders\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"SnipeFinanceMultisenders/IBEP20.sol\":{\"keccak256\":\"0xff4033f573cb1426d8417bbb73a1c980f014803bbbb739b0a28c7e55048cda11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0cec866199794c1d8356dc4e4d41af9ddc588be16b30da43d63772943970643\",\"dweb:/ipfs/QmPvFxoryGjzB4HDsXn6rgZDFzw7p8wqRDBvj4jHtndCdS\"]},\"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol\":{\"keccak256\":\"0x0fef36e6b11d0e908f8d8f67d528d2091cf35002c1188503dcbdbdde40ebff60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e8d52f9b2a67144cf9e526beaf0f6329b4c4d33104ec703078c968cbf8ad8b5\",\"dweb:/ipfs/QmUhfZLCK9uYjAGFghQm4rDfnc2XMT3QmTfSunHJ8paZ8J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol:SnipeFinanceMultisenders",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 172,
								"contract": "SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol:SnipeFinanceMultisenders",
								"label": "fee",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 174,
								"contract": "SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol:SnipeFinanceMultisenders",
								"label": "receiver",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 176,
								"contract": "SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol:SnipeFinanceMultisenders",
								"label": "feeamounts",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 180,
								"contract": "SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol:SnipeFinanceMultisenders",
								"label": "authorizedusers",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 183,
								"contract": "SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol:SnipeFinanceMultisenders",
								"label": "tokenaddress",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IBEP20)164"
							},
							{
								"astId": 185,
								"contract": "SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol:SnipeFinanceMultisenders",
								"label": "quantity",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBEP20)164": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"SnipeFinanceMultisenders/IBEP20.sol": {
				"ast": {
					"absolutePath": "SnipeFinanceMultisenders/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							164
						]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "IBEP20",
							"nameLocation": "69:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a9059cbb",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "92:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "109:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "101:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "101:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "121:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "113:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "100:27:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "146:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "146:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "145:6:2"
									},
									"scope": 164,
									"src": "83:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "167:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "188:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "180:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "202:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "194:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "214:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "206:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "179:41:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "239:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "239:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:6:2"
									},
									"scope": 164,
									"src": "158:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "260:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "278:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "270:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "269:17:2"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "310:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:9:2"
									},
									"scope": 164,
									"src": "251:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 165,
							"src": "59:263:2",
							"usedErrors": []
						}
					],
					"src": "32:290:2"
				},
				"id": 2
			},
			"SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol": {
				"ast": {
					"absolutePath": "SnipeFinanceMultisenders/SnipeFinanceMultisenders.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"IBEP20": [
							164
						],
						"Ownable": [
							112
						],
						"SnipeFinanceMultisenders": [
							507
						]
					},
					"id": 508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": [
								"solidity",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "SnipeFinanceMultisenders/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 167,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 165,
							"src": "59:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 113,
							"src": "83:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 169,
										"name": "Ownable",
										"nameLocations": [
											"176:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "176:7:3"
									},
									"id": 170,
									"nodeType": "InheritanceSpecifier",
									"src": "176:7:3"
								}
							],
							"canonicalName": "SnipeFinanceMultisenders",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 507,
							"linearizedBaseContracts": [
								507,
								112,
								134
							],
							"name": "SnipeFinanceMultisenders",
							"nameLocation": "148:24:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "ddca3f43",
									"id": 172,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "205:3:3",
									"nodeType": "VariableDeclaration",
									"scope": 507,
									"src": "190:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 171,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "190:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7260d3e",
									"id": 174,
									"mutability": "mutable",
									"name": "receiver",
									"nameLocation": "238:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 507,
									"src": "215:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 173,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "215:15:3",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9c8b9e7b",
									"id": 176,
									"mutability": "mutable",
									"name": "feeamounts",
									"nameLocation": "268:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 507,
									"src": "253:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 175,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "253:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "44b6209d",
									"id": 180,
									"mutability": "mutable",
									"name": "authorizedusers",
									"nameLocation": "317:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 507,
									"src": "285:47:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 179,
										"keyType": {
											"id": 177,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "293:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "285:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 178,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "304:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3feff76d",
									"id": 183,
									"mutability": "mutable",
									"name": "tokenaddress",
									"nameLocation": "353:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 507,
									"src": "339:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$164",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 182,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 181,
											"name": "IBEP20",
											"nameLocations": [
												"339:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 164,
											"src": "339:6:3"
										},
										"referencedDeclaration": 164,
										"src": "339:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$164",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17fc45e2",
									"id": 185,
									"mutability": "mutable",
									"name": "quantity",
									"nameLocation": "432:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 507,
									"src": "417:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 184,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "417:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "499:75:3",
										"statements": [
											{
												"expression": {
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 188,
														"name": "receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "510:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 191,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "529:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "529:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "521:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 189,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "521:8:3",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "521:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "510:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "510:27:3"
											},
											{
												"expression": {
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 196,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "548:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_100000000000000_by_1",
															"typeString": "int_const 100000000000000"
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31",
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "554:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_100000000000000_by_1",
																"typeString": "int_const 100000000000000"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "558:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3134",
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "564:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_14_by_1",
																	"typeString": "int_const 14"
																},
																"value": "14"
															},
															"src": "558:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000_by_1",
																"typeString": "int_const 100000000000000"
															}
														},
														"src": "554:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000_by_1",
															"typeString": "int_const 100000000000000"
														}
													},
													"src": "548:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "548:18:3"
											}
										]
									},
									"id": 205,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:3"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:0:3"
									},
									"scope": 507,
									"src": "485:89:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "677:540:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "691:28:3",
														"subExpression": {
															"baseExpression": {
																"id": 214,
																"name": "authorizedusers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "692:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 217,
															"indexExpression": {
																"expression": {
																	"id": 215,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "708:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "712:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "708:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "692:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 221,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "746:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "750:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "746:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 219,
																	"name": "tokenaddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "723:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$164",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "736:9:3",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 163,
																"src": "723:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "723:34:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 224,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "760:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "723:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "691:77:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 246,
												"nodeType": "IfStatement",
												"src": "688:268:3",
												"trueBody": {
													"id": 245,
													"nodeType": "Block",
													"src": "771:185:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 228,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "795:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "799:5:3",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "795:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 230,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "808:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "795:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "596f75206861766520746f207061792066656520746f2075736520536e69706546696e616e6365204d756c74692062756c6b2066756e6374696f6e",
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "813:61:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4eb86dec3b7c3e53e01f18b918268fa96a47c207e64bdfa8013fcfdaf9f9175d",
																			"typeString": "literal_string \"You have to pay fee to use SnipeFinance Multi bulk function\""
																		},
																		"value": "You have to pay fee to use SnipeFinance Multi bulk function"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_4eb86dec3b7c3e53e01f18b918268fa96a47c207e64bdfa8013fcfdaf9f9175d",
																			"typeString": "literal_string \"You have to pay fee to use SnipeFinance Multi bulk function\""
																		}
																	],
																	"id": 227,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "786:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "786:89:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 234,
															"nodeType": "ExpressionStatement",
															"src": "786:89:3"
														},
														{
															"expression": {
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 235,
																	"name": "feeamounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "890:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 236,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "904:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "890:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 238,
															"nodeType": "ExpressionStatement",
															"src": "890:17:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "940:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 239,
																		"name": "receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "922:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "931:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "922:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "922:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 244,
															"nodeType": "ExpressionStatement",
															"src": "922:22:3"
														}
													]
												}
											},
											{
												"body": {
													"expression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 265,
																	"name": "values",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "1059:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 267,
																"indexExpression": {
																	"id": 266,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1066:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1059:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 260,
																			"name": "recipients",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 208,
																			"src": "1035:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 262,
																		"indexExpression": {
																			"id": 261,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 248,
																			"src": "1046:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1035:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1027:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 258,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1027:8:3",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1027:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1050:8:3",
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"src": "1027:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																"typeString": "function (uint256)"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1027:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 269,
													"nodeType": "ExpressionStatement",
													"src": "1027:42:3"
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 251,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "986:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 252,
															"name": "recipients",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "990:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1001:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "990:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "986:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 270,
												"initializationExpression": {
													"assignments": [
														248
													],
													"declarations": [
														{
															"constant": false,
															"id": 248,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "979:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 270,
															"src": "971:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 247,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "971:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 250,
													"initialValue": {
														"hexValue": "30",
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "983:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "971:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1009:3:3",
														"subExpression": {
															"id": 255,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "1009:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 257,
													"nodeType": "ExpressionStatement",
													"src": "1009:3:3"
												},
												"nodeType": "ForStatement",
												"src": "966:103:3"
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1094:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 292,
														"src": "1086:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1086:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 275,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1112:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SnipeFinanceMultisenders_$507",
																	"typeString": "contract SnipeFinanceMultisenders"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SnipeFinanceMultisenders_$507",
																	"typeString": "contract SnipeFinanceMultisenders"
																}
															],
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1104:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 273,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1104:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1104:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1118:7:3",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1104:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1086:39:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 279,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "1146:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1156:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1146:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "1142:67:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 288,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "1201:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 284,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1180:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1184:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1180:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1172:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 282,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1172:8:3",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1172:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1192:8:3",
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"src": "1172:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																"typeString": "function (uint256)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1172:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 290,
													"nodeType": "ExpressionStatement",
													"src": "1172:37:3"
												}
											}
										]
									},
									"functionSelector": "e3cec849",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "BNBmultisender",
									"nameLocation": "591:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "623:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "606:27:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 206,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "606:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 207,
													"nodeType": "ArrayTypeName",
													"src": "606:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "652:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "635:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 209,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "635:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 210,
													"nodeType": "ArrayTypeName",
													"src": "635:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:54:3"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:0:3"
									},
									"scope": 507,
									"src": "582:635:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "1340:611:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1354:28:3",
														"subExpression": {
															"baseExpression": {
																"id": 305,
																"name": "authorizedusers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "1355:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 308,
															"indexExpression": {
																"expression": {
																	"id": 306,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1371:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1375:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1371:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1355:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 312,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1409:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1413:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1409:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 310,
																	"name": "tokenaddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "1386:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$164",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1399:9:3",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 163,
																"src": "1386:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1386:34:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 315,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1423:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1386:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1354:77:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 339,
												"nodeType": "IfStatement",
												"src": "1351:282:3",
												"trueBody": {
													"id": 338,
													"nodeType": "Block",
													"src": "1433:200:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 319,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1457:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1461:5:3",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "1457:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 321,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "1470:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1457:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "596f75206861766520746f207061792066656520746f2075736520536e69706546696e616e636520546f6b656e204d756c74692062756c6b2066756e6374696f6e",
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1475:67:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dff637c805372e1029bc5f3e694294c9c9184ce638d2f2a7c6e0686c1b13522a",
																			"typeString": "literal_string \"You have to pay fee to use SnipeFinance Token Multi bulk function\""
																		},
																		"value": "You have to pay fee to use SnipeFinance Token Multi bulk function"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dff637c805372e1029bc5f3e694294c9c9184ce638d2f2a7c6e0686c1b13522a",
																			"typeString": "literal_string \"You have to pay fee to use SnipeFinance Token Multi bulk function\""
																		}
																	],
																	"id": 318,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1448:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1448:95:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 325,
															"nodeType": "ExpressionStatement",
															"src": "1448:95:3"
														},
														{
															"expression": {
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 326,
																	"name": "feeamounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "1558:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 327,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "1572:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1558:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 329,
															"nodeType": "ExpressionStatement",
															"src": "1558:17:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 335,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "1617:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 332,
																				"name": "receiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 174,
																				"src": "1598:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1590:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 330,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1590:8:3",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1590:17:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1608:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1590:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1590:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 337,
															"nodeType": "ExpressionStatement",
															"src": "1590:31:3"
														}
													]
												}
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "1651:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "1643:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1643:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"hexValue": "30",
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1659:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1643:17:3"
											},
											{
												"body": {
													"expression": {
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 355,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "1732:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"baseExpression": {
																"id": 356,
																"name": "values",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "1741:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 358,
															"indexExpression": {
																"id": 357,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "1748:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1741:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1732:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 360,
													"nodeType": "ExpressionStatement",
													"src": "1732:18:3"
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 348,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "1691:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 349,
															"name": "recipients",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "1695:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1706:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1695:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1691:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 361,
												"initializationExpression": {
													"assignments": [
														345
													],
													"declarations": [
														{
															"constant": false,
															"id": 345,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1684:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 361,
															"src": "1676:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 344,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1676:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 347,
													"initialValue": {
														"hexValue": "30",
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1688:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1676:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1714:3:3",
														"subExpression": {
															"id": 352,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "1714:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 354,
													"nodeType": "ExpressionStatement",
													"src": "1714:3:3"
												},
												"nodeType": "ForStatement",
												"src": "1671:79:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 365,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1788:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1792:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1788:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 369,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1808:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SnipeFinanceMultisenders_$507",
																				"typeString": "contract SnipeFinanceMultisenders"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SnipeFinanceMultisenders_$507",
																				"typeString": "contract SnipeFinanceMultisenders"
																			}
																		],
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1800:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 367,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1800:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1800:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 371,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "1815:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 363,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "1769:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$164",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1775:12:3",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 156,
																"src": "1769:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1769:52:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1761:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1761:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "1761:61:3"
											},
											{
												"body": {
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 389,
																			"name": "recipients",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 299,
																			"src": "1917:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 391,
																		"indexExpression": {
																			"id": 390,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 376,
																			"src": "1928:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1917:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 392,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1932:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 394,
																		"indexExpression": {
																			"id": 393,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 376,
																			"src": "1939:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1932:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 387,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "1902:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$164",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1908:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "1902:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1902:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 386,
															"name": "require",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967278,
																4294967278
															],
															"referencedDeclaration": 4294967278,
															"src": "1894:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																"typeString": "function (bool) pure"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1894:49:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 397,
													"nodeType": "ExpressionStatement",
													"src": "1894:49:3"
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 379,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "1853:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 380,
															"name": "recipients",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "1857:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1868:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1857:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1853:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"initializationExpression": {
													"assignments": [
														376
													],
													"declarations": [
														{
															"constant": false,
															"id": 376,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1846:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 398,
															"src": "1838:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 375,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1838:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 378,
													"initialValue": {
														"hexValue": "30",
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1850:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1838:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1876:3:3",
														"subExpression": {
															"id": 383,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "1876:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 385,
													"nodeType": "ExpressionStatement",
													"src": "1876:3:3"
												},
												"nodeType": "ForStatement",
												"src": "1833:110:3"
											}
										]
									},
									"functionSelector": "9cbd3433",
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "TOKENmultisender",
									"nameLocation": "1238:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1262:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1255:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$164",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 295,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 294,
														"name": "IBEP20",
														"nameLocations": [
															"1255:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 164,
														"src": "1255:6:3"
													},
													"referencedDeclaration": 164,
													"src": "1255:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$164",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "1286:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1269:27:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 297,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1269:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 298,
													"nodeType": "ArrayTypeName",
													"src": "1269:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1315:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1298:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 300,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1298:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 301,
													"nodeType": "ArrayTypeName",
													"src": "1298:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1254:68:3"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1340:0:3"
									},
									"scope": 507,
									"src": "1229:722:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "2075:71:3",
										"statements": [
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "2086:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 410,
														"name": "newfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "2092:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "2086:12:3"
											},
											{
												"expression": {
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 413,
														"name": "receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "2109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 416,
																"name": "_receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2128:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2120:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 414,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2120:8:3",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2120:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2109:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "2109:29:3"
											}
										]
									},
									"functionSelector": "126ccd94",
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 407,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 406,
												"name": "onlyOwner",
												"nameLocations": [
													"2056:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2056:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2056:9:3"
										}
									],
									"name": "setfeeToUse",
									"nameLocation": "2008:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "newfee",
												"nameLocation": "2029:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2021:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "2045:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2037:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2037:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:35:3"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2075:0:3"
									},
									"scope": 507,
									"src": "1999:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "2244:90:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 426,
														"name": "feeamounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2258:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2271:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2258:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 438,
												"nodeType": "IfStatement",
												"src": "2255:71:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 435,
																"name": "feeamounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "2315:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 431,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2294:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2298:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2294:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2286:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 429,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2286:8:3",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2286:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2306:8:3",
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"src": "2286:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																"typeString": "function (uint256)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2286:40:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 437,
													"nodeType": "ExpressionStatement",
													"src": "2286:40:3"
												}
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 424,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 423,
												"name": "onlyOwner",
												"nameLocations": [
													"2225:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2225:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2225:9:3"
										}
									],
									"name": "withdraw",
									"nameLocation": "2214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2222:2:3"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2244:0:3"
									},
									"scope": 507,
									"src": "2205:129:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "2437:48:3",
										"statements": [
											{
												"expression": {
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 447,
															"name": "authorizedusers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "2448:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 449,
														"indexExpression": {
															"id": 448,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "2464:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2448:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2473:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2448:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "2448:29:3"
											}
										]
									},
									"functionSelector": "4b4fb1b0",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 445,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 444,
												"name": "onlyOwner",
												"nameLocations": [
													"2418:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2418:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2418:9:3"
										}
									],
									"name": "authorizeToUse",
									"nameLocation": "2388:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "2411:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2403:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2402:15:3"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:0:3"
									},
									"scope": 507,
									"src": "2379:106:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "2632:102:3",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 463,
														"name": "authorizedusers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "2646:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 465,
													"indexExpression": {
														"id": 464,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "2662:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2646:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 473,
												"nodeType": "IfStatement",
												"src": "2643:84:3",
												"trueBody": {
													"id": 472,
													"nodeType": "Block",
													"src": "2670:57:3",
													"statements": [
														{
															"expression": {
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 466,
																		"name": "authorizedusers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 180,
																		"src": "2685:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 468,
																	"indexExpression": {
																		"id": 467,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2701:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2685:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 469,
																	"name": "_bool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "2710:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2685:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "2685:30:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "fb520af2",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 461,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 460,
												"name": "onlyOwner",
												"nameLocations": [
													"2613:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2613:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2613:9:3"
										}
									],
									"name": "setauthor",
									"nameLocation": "2576:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "2594:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "2586:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2586:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "_bool",
												"nameLocation": "2606:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "2601:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2601:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:27:3"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2632:0:3"
									},
									"scope": 507,
									"src": "2567:167:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "2867:68:3",
										"statements": [
											{
												"expression": {
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 485,
														"name": "tokenaddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "2878:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$164",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 486,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "2893:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$164",
															"typeString": "contract IBEP20"
														}
													},
													"src": "2878:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$164",
														"typeString": "contract IBEP20"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "2878:20:3"
											},
											{
												"expression": {
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 489,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "2909:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 490,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "2920:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2909:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "2909:18:3"
											}
										]
									},
									"functionSelector": "2fc75eb0",
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 483,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 482,
												"name": "onlyOwner",
												"nameLocations": [
													"2848:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2848:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2848:9:3"
										}
									],
									"name": "SetTokenToholdAndQuantity",
									"nameLocation": "2790:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2824:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2817:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$164",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 477,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 476,
														"name": "IBEP20",
														"nameLocations": [
															"2817:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 164,
														"src": "2817:6:3"
													},
													"referencedDeclaration": 164,
													"src": "2817:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$164",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2839:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2831:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:31:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2867:0:3"
									},
									"scope": 507,
									"src": "2781:154:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "3011:47:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 501,
														"name": "authorizedusers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3029:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 503,
													"indexExpression": {
														"id": 502,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "3045:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3029:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 500,
												"id": 504,
												"nodeType": "Return",
												"src": "3022:28:3"
											}
										]
									},
									"functionSelector": "a4df0256",
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readAuthorizedUsers",
									"nameLocation": "2952:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2980:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "2972:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2971:14:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3006:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3006:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:6:3"
									},
									"scope": 507,
									"src": "2943:115:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 508,
							"src": "139:2922:3",
							"usedErrors": []
						}
					],
					"src": "32:3029:3"
				},
				"id": 3
			}
		}
	}
}