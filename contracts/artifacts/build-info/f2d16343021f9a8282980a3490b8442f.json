{
	"id": "f2d16343021f9a8282980a3490b8442f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SnipeFinanceMultisenders_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n\n// File: contracts/SnipeFinanceMultisenders.sol\n\n//SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\n\n\n\n//the reason for this another interface creation because we want to use the decimal's function of each token and it's not available in standard interface\n// interface ICustomERC20 is IERC20 {\n//     function decimals() external view returns (uint256);\n// }\n\ncontract SnipeFinanceMultisenders is Ownable {\n    using Address for address;\n    uint256 public fee;\n    address payable public receiver; //tho owner of a contract\n    mapping(address => bool) public authorizedusers;\n    IERC20 public tokenAddress; //  token to hold for using  the tool for free\n    uint256 public quantity; // minimum hoding amount of tokenaddress at minimum tokens \n\n    constructor() {\n        receiver = payable(owner());\n        fee = 1 * 10**14;\n    }\n\n    //this modifier is responsible for letting know whetehr token holding has been set or not\n    modifier tokenChecker() {\n        require(address(tokenAddress) != address(0), \"token holding invalid\");\n        _;\n    }\n\n    function coinMultisender(\n        address[] memory recipients,\n        uint256[] memory values\n    ) external payable tokenChecker {\n        // sum up values\n        require(recipients.length == values.length, \"invalid input\");\n        uint256 totalValues;\n        for (uint256 i; i < values.length; i++) {\n            totalValues += values[i];\n        }\n\n        if (authorizedusers[msg.sender]) {\n            require(\n                msg.value == totalValues,\n                \"pay the exact amount to cover distribution\"\n            );\n            for (uint256 i = 0; i < recipients.length; i++) {\n                payable(recipients[i]).transfer(values[i]);\n            }\n        } else if (!authorizedusers[msg.sender]) {\n            if (tokenAddress.balanceOf(msg.sender) >= quantity) {\n                authorizedusers[msg.sender] = true;\n                require(\n                    msg.value == totalValues,\n                    \"holding quantity true but msg.value uncertain pay exact\"\n                );\n                for (uint256 i = 0; i < recipients.length; i++) {\n                    payable(recipients[i]).transfer(values[i]);\n                }\n            } else if (tokenAddress.balanceOf(msg.sender) < quantity) {\n                uint256 toBeIncluded = fee + totalValues;\n                require(\n                    msg.value == toBeIncluded,\n                    \"holding & authorization false pay exact fee\"\n                );\n                payable(receiver).transfer(fee);\n                for (uint256 i = 0; i < recipients.length; i++) {\n                    payable(recipients[i]).transfer(values[i]);\n                }\n            }\n        }\n    }\n\n    function TOKENmultisender(//ICustomERC20 REPLACED WITH ERC20\n        IERC20 token,\n        address[] memory recipients,\n        uint256[] memory values\n    ) external payable tokenChecker {\n        require(address(token).isContract() == true, \"not a contract\"); //this will check whether it's a contract or EOA address\n        require(recipients.length == values.length, \"invalid input\");\n        // uint256 fetched = fetchDecimals(token);\n\n        // // Convert values to fetched token decimals\n        // for (uint256 i = 0; i < values.length; i++) {\n        //     values[i] = values[i] * (10**fetched);\n        // }\n\n        if (authorizedusers[msg.sender]) {\n            for (uint256 i = 0; i < values.length; i++) {\n                require(\n                    token.transferFrom(msg.sender, recipients[i], values[i]),\n                    \"error in distribution\"\n                );\n            }\n        } else if (!authorizedusers[msg.sender]) {\n            if (tokenAddress.balanceOf(msg.sender) >= quantity) {\n                authorizedusers[msg.sender] = true;\n                for (uint256 i = 0; i < values.length; i++) {\n                    require(\n                        token.transferFrom(\n                            msg.sender,\n                            recipients[i],\n                            values[i]\n                        ),\n                        \"error in distribution\"\n                    );\n                }\n            } else if (tokenAddress.balanceOf(msg.sender) < quantity) {\n                require(\n                    msg.value == fee,\n                    \"holding & authorization false pay exact fee\"\n                );\n                payable(receiver).transfer(fee);\n                for (uint256 i = 0; i < values.length; i++) {\n                    require(\n                        token.transferFrom(\n                            msg.sender,\n                            recipients[i],\n                            values[i]\n                        ),\n                        \"error in distribution\"\n                    );\n                }\n            }\n        }\n    } //function ending\n\n    // setfeeToUse  --- function 1\n    function setfeeToUse(uint256 newfee, address _receiver) external onlyOwner {\n        fee = newfee;\n        receiver = payable(_receiver);\n    }\n\n    // this function will authorize the user  (user have to be unauthorised first)\n    function authorizeUser(address user) external onlyOwner {\n        require(authorizedusers[user] == false, \"user is already authorized\");\n        authorizedusers[user] = true;\n    }\n\n    // this function will unauthorize the user  (user have to be authorised first)\n    function unauthorizeUser(address user) external onlyOwner {\n        require(authorizedusers[user] == true, \"user is already unauthorized\");\n        authorizedusers[user] = false;\n    }\n    function readAuthorizedUsers(address user) external view returns(bool){\n        return authorizedusers[user];\n    }\n\n    // Set Token Address and Quantity\n    function SetTokenToholdAndQuantity(IERC20 token, uint256 _amount)\n        external\n        onlyOwner\n    {\n        tokenAddress = token;\n        quantity = _amount;\n    }\n\n    //get fee details function is also removed from here because the fee variable is also a public\n\n    //the function is responsible for handling the withdrawal of coin's;\n    function withdrawCoins(uint256 amount) external onlyOwner {\n        require(address(this).balance >= amount, \"invalid balance to withdraw\");\n        payable(msg.sender).transfer(amount);\n    }\n\n    //the function is responsible for handling the withdrawal of any erc20 token;\n    function withdrawToken(IERC20 token, uint256 amount) public onlyOwner {\n        require(\n            token.balanceOf(address(this)) >= amount,\n            \"contract doesn't have enough token's\"\n        );\n        token.transfer(msg.sender, amount);\n    }\n\n    //get balance of a contract\n    function contractBalance() public view onlyOwner returns(uint256){\n        return address(this).balance;\n    }\n  \n  //this function is responsible for fetching the input token decimal's\n    // function fetchDecimals(ICustomERC20 token) public view returns (uint256) {\n    //     // MyToken myToken = MyToken(address(token));\n    //     return token.decimals();\n    // }\n   \n   //necessary for contract to recieve coin's\n    receive() external payable {} \n\n    function getTokenBalance(address account) external view returns(uint256){\n        return tokenAddress.balanceOf(account);\n    }\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 50
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "petersburg"
		}
	},
	"output": {
		"contracts": {
			"contracts/SnipeFinanceMultisenders_flattened.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":216:9385  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":216:9385  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122049f6d423a50592fce12107cc2d6969cb0ba6431df47834b89d48bb1d1aa4038364736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122049f6d423a50592fce12107cc2d6969cb0ba6431df47834b89d48bb1d1aa4038364736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0xF6 0xD4 0x23 0xA5 SDIV SWAP3 0xFC 0xE1 0x21 SMOD 0xCC 0x2D PUSH10 0x69CB0BA6431DF47834B8 SWAP14 BASEFEE 0xBB SAR BYTE LOG4 SUB DUP4 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "216:9169:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122049f6d423a50592fce12107cc2d6969cb0ba6431df47834b89d48bb1d1aa4038364736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0xF6 0xD4 0x23 0xA5 SDIV SWAP3 0xFC 0xE1 0x21 SMOD 0xCC 0x2D PUSH10 0x69CB0BA6431DF47834B8 SWAP14 BASEFEE 0xBB SAR BYTE LOG4 SUB DUP4 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "216:9169:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 216,
									"end": 9385,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122049f6d423a50592fce12107cc2d6969cb0ba6431df47834b89d48bb1d1aa4038364736f6c634300080d0033",
									".code": [
										{
											"begin": 216,
											"end": 9385,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 216,
											"end": 9385,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 216,
											"end": 9385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 9385,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 9385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 9385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 216,
											"end": 9385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 9385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 9385,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SnipeFinanceMultisenders_flattened.sol\":\"Address\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"contracts/SnipeFinanceMultisenders_flattened.sol\":{\"keccak256\":\"0x493232e25f30c3d13942ffa7b4d3c1a7c03d80f038a62a4ca53c70593f79f4fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d124a0d3287305e7850f7ed93effbf452e0feb745b27ece9970bcb52dc8f34b\",\"dweb:/ipfs/QmaPG5hq116EADveEBzw8w7UJvb9yfg4ZbkYJxcvPGp4bZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SnipeFinanceMultisenders_flattened.sol\":\"Context\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"contracts/SnipeFinanceMultisenders_flattened.sol\":{\"keccak256\":\"0x493232e25f30c3d13942ffa7b4d3c1a7c03d80f038a62a4ca53c70593f79f4fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d124a0d3287305e7850f7ed93effbf452e0feb745b27ece9970bcb52dc8f34b\",\"dweb:/ipfs/QmaPG5hq116EADveEBzw8w7UJvb9yfg4ZbkYJxcvPGp4bZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SnipeFinanceMultisenders_flattened.sol\":\"IERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"contracts/SnipeFinanceMultisenders_flattened.sol\":{\"keccak256\":\"0x493232e25f30c3d13942ffa7b4d3c1a7c03d80f038a62a4ca53c70593f79f4fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d124a0d3287305e7850f7ed93effbf452e0feb745b27ece9970bcb52dc8f34b\",\"dweb:/ipfs/QmaPG5hq116EADveEBzw8w7UJvb9yfg4ZbkYJxcvPGp4bZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SnipeFinanceMultisenders_flattened.sol\":\"Ownable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"contracts/SnipeFinanceMultisenders_flattened.sol\":{\"keccak256\":\"0x493232e25f30c3d13942ffa7b4d3c1a7c03d80f038a62a4ca53c70593f79f4fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d124a0d3287305e7850f7ed93effbf452e0feb745b27ece9970bcb52dc8f34b\",\"dweb:/ipfs/QmaPG5hq116EADveEBzw8w7UJvb9yfg4ZbkYJxcvPGp4bZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 356,
								"contract": "contracts/SnipeFinanceMultisenders_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SnipeFinanceMultisenders": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "SetTokenToholdAndQuantity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TOKENmultisender",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "authorizeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "authorizedusers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "coinMultisender",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getTokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "quantity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "readAuthorizedUsers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "receiver",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newfee",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								}
							],
							"name": "setfeeToUse",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "unauthorizeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawCoins",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":15991:22903  contract SnipeFinanceMultisenders is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16382:16466  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11180:11212  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":10127:10137  msg.sender */\n  caller\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11180:11198  _transferOwnership */\n  tag_8\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11180:11212  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11491:11498  address */\n  0x00\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11517:11523  _owner */\n  sload\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16406:16414  receiver */\n  0x02\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16406:16433  receiver = payable(owner()) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11517:11523  _owner */\n  swap1\n  swap3\n  and\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16406:16433  receiver = payable(owner()) */\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16449:16459  1 * 10**14 */\n  0x5af3107a4000\n  0x01\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16443:16459  fee = 1 * 10**14 */\n  sstore\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":15991:22903  contract SnipeFinanceMultisenders is Ownable {... */\n  jump(tag_12)\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12670:12857  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12743:12759  address oldOwner */\n  0x00\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12762:12768  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12778:12795  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12810:12850  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12762:12768  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12810:12850  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12743:12759  address oldOwner */\n  swap1\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12810:12850  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12733:12857  {... */\n  pop\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12670:12857  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":15991:22903  contract SnipeFinanceMultisenders is Ownable {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":15991:22903  contract SnipeFinanceMultisenders is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9cbd3433\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9e281a98\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa4df0256\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd908e6ce\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf7260d3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf9f95a0f\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x126ccd94\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x17fc45e2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2fc75eb0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3aecd0e3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x44b6209d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x478aa69e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x67c2a360\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8b7afe2e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20543:20686  function setfeeToUse(uint256 newfee, address _receiver) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16292:16315  uint256 public quantity */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      sload(0x05)\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":616:641   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":604:606   */\n      0x20\n        /* \"#utility.yul\":589:607   */\n      add\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16292:16315  uint256 public quantity */\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21392:21562  function SetTokenToholdAndQuantity(IERC20 token, uint256 _amount)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_26\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22773:22900  function getTokenBalance(address account) external view returns(uint256){... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_31\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16160:16207  mapping(address => bool) public authorizedusers */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_48:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":1403:1417   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1396:1418   */\n      iszero\n        /* \"#utility.yul\":1378:1419   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1366:1368   */\n      0x20\n        /* \"#utility.yul\":1351:1369   */\n      add\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16160:16207  mapping(address => bool) public authorizedusers */\n      tag_33\n        /* \"#utility.yul\":1238:1425   */\n      jump\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21044:21228  function unauthorizeUser(address user) external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_26\n      tag_54\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20775:20955  function authorizeUser(address user) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_26\n      tag_58\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12068:12169  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_26\n      tag_62\n      jump\t// in\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22313:22423  function contractBalance() public view onlyOwner returns(uint256){... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_31\n      tag_65\n      jump\t// in\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11445:11530  function owner() public view virtual returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11491:11498  address */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11517:11523  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11445:11530  function owner() public view virtual returns (address) {... */\n    tag_68:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18371:20484  function TOKENmultisender(//ICustomERC20 REPLACED WITH ERC20... */\n    tag_13:\n      tag_26\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16213:16239  IERC20 public tokenAddress */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      sload(0x04)\n      tag_68\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22021:22275  function withdrawToken(IERC20 token, uint256 amount) public onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_26\n      tag_83\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21233:21348  function readAuthorizedUsers(address user) external view returns(bool){... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_47\n      tag_87\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21320:21341  authorizedusers[user] */\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21298:21302  bool */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21320:21341  authorizedusers[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21320:21335  authorizedusers */\n      0x03\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21320:21341  authorizedusers[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21233:21348  function readAuthorizedUsers(address user) external view returns(bool){... */\n      jump\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16693:18365  function coinMultisender(... */\n    tag_17:\n      tag_26\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16073:16091  uint256 public fee */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_31\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12318:12516  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_26\n      tag_100\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16097:16128  address payable public receiver */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      sload(0x02)\n      tag_68\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21741:21933  function withdrawCoins(uint256 amount) external onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_26\n      tag_109\n      calldatasize\n      0x04\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20543:20686  function setfeeToUse(uint256 newfee, address _receiver) external onlyOwner {... */\n    tag_29:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      tag_113\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11349  _checkOwner */\n      tag_114\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20628:20631  fee */\n      0x01\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20628:20640  fee = newfee */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20650:20658  receiver */\n      0x02\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20650:20679  receiver = payable(_receiver) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20543:20686  function setfeeToUse(uint256 newfee, address _receiver) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21392:21562  function SetTokenToholdAndQuantity(IERC20 token, uint256 _amount)... */\n    tag_39:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      tag_117\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11349  _checkOwner */\n      tag_114\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21507:21519  tokenAddress */\n      0x04\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21507:21527  tokenAddress = token */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21537:21545  quantity */\n      0x05\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21537:21555  quantity = _amount */\n      sstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21392:21562  function SetTokenToholdAndQuantity(IERC20 token, uint256 _amount)... */\n      jump\t// out\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22773:22900  function getTokenBalance(address account) external view returns(uint256){... */\n    tag_44:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22862:22874  tokenAddress */\n      0x04\n      dup1\n      sload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22862:22893  tokenAddress.balanceOf(account) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22837:22844  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22862:22874  tokenAddress */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22862:22884  tokenAddress.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22862:22893  tokenAddress.balanceOf(account) */\n      tag_120\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22885:22892  account */\n      dup7\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22862:22893  tokenAddress.balanceOf(account) */\n      add\n      tag_71\n      jump\t// in\n    tag_120:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22855:22893  return tokenAddress.balanceOf(account) */\n      swap3\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22773:22900  function getTokenBalance(address account) external view returns(uint256){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21044:21228  function unauthorizeUser(address user) external onlyOwner {... */\n    tag_55:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      tag_126\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11349  _checkOwner */\n      tag_114\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      jump\t// in\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21120:21141  authorizedusers[user] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21120:21135  authorizedusers */\n      0x03\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21120:21141  authorizedusers[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21120:21149  authorizedusers[user] == true */\n      iszero\n      iszero\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21120:21141  authorizedusers[user] */\n      0x01\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21120:21149  authorizedusers[user] == true */\n      eq\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21112:21182  require(authorizedusers[user] == true, \"user is already unauthorized\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6018:6020   */\n      0x20\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21112:21182  require(authorizedusers[user] == true, \"user is already unauthorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6000:6021   */\n      mstore\n        /* \"#utility.yul\":6057:6059   */\n      0x1c\n        /* \"#utility.yul\":6037:6055   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6030:6060   */\n      mstore\n        /* \"#utility.yul\":6096:6126   */\n      0x7573657220697320616c726561647920756e617574686f72697a656400000000\n        /* \"#utility.yul\":6076:6094   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6069:6127   */\n      mstore\n        /* \"#utility.yul\":6144:6162   */\n      0x64\n      add\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21112:21182  require(authorizedusers[user] == true, \"user is already unauthorized\") */\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21192:21213  authorizedusers[user] */\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21216:21221  false */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21192:21213  authorizedusers[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21192:21207  authorizedusers */\n      0x03\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21192:21213  authorizedusers[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21192:21221  authorizedusers[user] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21044:21228  function unauthorizeUser(address user) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20775:20955  function authorizeUser(address user) external onlyOwner {... */\n    tag_59:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      tag_132\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11349  _checkOwner */\n      tag_114\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20849:20870  authorizedusers[user] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20849:20864  authorizedusers */\n      0x03\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20849:20870  authorizedusers[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20849:20879  authorizedusers[user] == false */\n      iszero\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20841:20910  require(authorizedusers[user] == false, \"user is already authorized\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6375:6377   */\n      0x20\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20841:20910  require(authorizedusers[user] == false, \"user is already authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6357:6378   */\n      mstore\n        /* \"#utility.yul\":6414:6416   */\n      0x1a\n        /* \"#utility.yul\":6394:6412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6387:6417   */\n      mstore\n      shl(0x32, 0x1d5cd95c881a5cc8185b1c9958591e48185d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":6433:6451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6426:6482   */\n      mstore\n        /* \"#utility.yul\":6499:6517   */\n      0x64\n      add\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20841:20910  require(authorizedusers[user] == false, \"user is already authorized\") */\n      tag_129\n        /* \"#utility.yul\":6173:6523   */\n      jump\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20841:20910  require(authorizedusers[user] == false, \"user is already authorized\") */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20920:20941  authorizedusers[user] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20920:20935  authorizedusers */\n      0x03\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20920:20941  authorizedusers[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20920:20948  authorizedusers[user] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20944:20948  true */\n      0x01\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20920:20948  authorizedusers[user] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20775:20955  function authorizeUser(address user) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12068:12169  function renounceOwnership() public virtual onlyOwner {... */\n    tag_62:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      tag_138\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11349  _checkOwner */\n      tag_114\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      jump\t// in\n    tag_138:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12132:12162  _transferOwnership(address(0)) */\n      tag_140\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12159:12160  0 */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12132:12150  _transferOwnership */\n      tag_141\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12132:12162  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12068:12169  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22313:22423  function contractBalance() public view onlyOwner returns(uint256){... */\n    tag_65:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22370:22377  uint256 */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      tag_143\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11349  _checkOwner */\n      tag_114\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      jump\t// in\n    tag_143:\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22403:22407  this */\n      address\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22395:22416  address(this).balance */\n      balance\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22313:22423  function contractBalance() public view onlyOwner returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18371:20484  function TOKENmultisender(//ICustomERC20 REPLACED WITH ERC20... */\n    tag_75:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16616:16628  tokenAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16600:16669  require(address(tokenAddress) != address(0), \"token holding invalid\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_149\n      jump\t// in\n    tag_147:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18608:18612  true */\n      0x01\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18577:18602  address(token).isContract */\n      dup5\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":1724:1743  account.code.length */\n      extcodesize\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":1724:1747  account.code.length > 0 */\n      iszero\n      iszero\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18577:18612  address(token).isContract() == true */\n      eq\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18569:18631  require(address(token).isContract() == true, \"not a contract\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7080:7082   */\n      0x20\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18569:18631  require(address(token).isContract() == true, \"not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7062:7083   */\n      mstore\n        /* \"#utility.yul\":7119:7121   */\n      0x0e\n        /* \"#utility.yul\":7099:7117   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7092:7122   */\n      mstore\n      shl(0x92, 0x1b9bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":7138:7156   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7131:7175   */\n      mstore\n        /* \"#utility.yul\":7192:7210   */\n      0x64\n      add\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18569:18631  require(address(token).isContract() == true, \"not a contract\") */\n      tag_129\n        /* \"#utility.yul\":6878:7216   */\n      jump\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18569:18631  require(address(token).isContract() == true, \"not a contract\") */\n    tag_153:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18727:18733  values */\n      dup1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18727:18740  values.length */\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18706:18716  recipients */\n      dup3\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18706:18723  recipients.length */\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18706:18740  recipients.length == values.length */\n      eq\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18698:18758  require(recipients.length == values.length, \"invalid input\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_158\n      jump\t// in\n    tag_156:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19020:19030  msg.sender */\n      caller\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19004:19031  authorizedusers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19004:19019  authorizedusers */\n      0x03\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19004:19031  authorizedusers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19000:20478  if (authorizedusers[msg.sender]) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19052:19061  uint256 i */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19047:19272  for (uint256 i = 0; i < values.length; i++) {... */\n    tag_160:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19071:19077  values */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19071:19084  values.length */\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19067:19068  i */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19067:19084  i < values.length */\n      lt\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19047:19272  for (uint256 i = 0; i < values.length; i++) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19138:19143  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19138:19156  token.transferFrom */\n      and\n      0x23b872dd\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19157:19167  msg.sender */\n      caller\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19169:19179  recipients */\n      dup6\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19180:19181  i */\n      dup5\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19169:19182  recipients[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19184:19190  values */\n      dup6\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19191:19192  i */\n      dup6\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19184:19193  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_167\n      jumpi\n      tag_167\n      tag_165\n      jump\t// in\n    tag_167:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19138:19194  token.transferFrom(msg.sender, recipients[i], values[i]) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19109:19257  require(... */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_176\n      jump\t// in\n    tag_174:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19086:19089  i++ */\n      dup1\n      tag_177\n      dup2\n      tag_178\n      jump\t// in\n    tag_177:\n      swap2\n      pop\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19047:19272  for (uint256 i = 0; i < values.length; i++) {... */\n      jump(tag_160)\n    tag_161:\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18371:20484  function TOKENmultisender(//ICustomERC20 REPLACED WITH ERC20... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19000:20478  if (authorizedusers[msg.sender]) {... */\n    tag_159:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19309:19319  msg.sender */\n      caller\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19293:19320  authorizedusers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19293:19308  authorizedusers */\n      0x03\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19293:19320  authorizedusers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19288:20478  if (!authorizedusers[msg.sender]) {... */\n      tag_205\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19378:19386  quantity */\n      sload(0x05)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19340:19352  tokenAddress */\n      0x04\n      dup1\n      sload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19340:19374  tokenAddress.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19340:19352  tokenAddress */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19340:19362  tokenAddress.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19340:19374  tokenAddress.balanceOf(msg.sender) */\n      tag_181\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19363:19373  msg.sender */\n      caller\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19340:19374  tokenAddress.balanceOf(msg.sender) */\n      add\n      tag_71\n      jump\t// in\n    tag_181:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_184:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19340:19386  tokenAddress.balanceOf(msg.sender) >= quantity */\n      lt\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19336:20468  if (tokenAddress.balanceOf(msg.sender) >= quantity) {... */\n      tag_185\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19422:19432  msg.sender */\n      caller\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19406:19433  authorizedusers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19406:19421  authorizedusers */\n      0x03\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19406:19433  authorizedusers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19406:19440  authorizedusers[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19436:19440  true */\n      0x01\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19406:19440  authorizedusers[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19458:19813  for (uint256 i = 0; i < values.length; i++) {... */\n    tag_186:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19482:19488  values */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19482:19495  values.length */\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19478:19479  i */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19478:19495  i < values.length */\n      lt\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19458:19813  for (uint256 i = 0; i < values.length; i++) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19557:19562  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19557:19575  token.transferFrom */\n      and\n      0x23b872dd\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19605:19615  msg.sender */\n      caller\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19645:19655  recipients */\n      dup6\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19656:19657  i */\n      dup5\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19645:19658  recipients[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_190\n      jumpi\n      tag_190\n      tag_165\n      jump\t// in\n    tag_190:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19688:19694  values */\n      dup6\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19695:19696  i */\n      dup6\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19688:19697  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_192\n      jumpi\n      tag_192\n      tag_165\n      jump\t// in\n    tag_192:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19557:19723  token.transferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_193:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_196:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19524:19794  require(... */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_176\n      jump\t// in\n    tag_197:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19497:19500  i++ */\n      dup1\n      tag_199\n      dup2\n      tag_178\n      jump\t// in\n    tag_199:\n      swap2\n      pop\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19458:19813  for (uint256 i = 0; i < values.length; i++) {... */\n      jump(tag_186)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19336:20468  if (tokenAddress.balanceOf(msg.sender) >= quantity) {... */\n    tag_185:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19874:19882  quantity */\n      sload(0x05)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19837:19849  tokenAddress */\n      0x04\n      dup1\n      sload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19837:19871  tokenAddress.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19837:19849  tokenAddress */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19837:19859  tokenAddress.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19837:19871  tokenAddress.balanceOf(msg.sender) */\n      tag_201\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19860:19870  msg.sender */\n      caller\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19837:19871  tokenAddress.balanceOf(msg.sender) */\n      add\n      tag_71\n      jump\t// in\n    tag_201:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_204\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_204:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19837:19882  tokenAddress.balanceOf(msg.sender) < quantity */\n      lt\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19833:20468  if (tokenAddress.balanceOf(msg.sender) < quantity) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19944:19947  fee */\n      sload(0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19931:19940  msg.value */\n      callvalue\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19931:19947  msg.value == fee */\n      eq\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19902:20032  require(... */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_208\n      jump\t// in\n    tag_206:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20058:20066  receiver */\n      sload(0x02)\n      0x01\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20077:20080  fee */\n      sload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20050:20081  payable(receiver).transfer(fee) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20058:20066  receiver */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20050:20081  payable(receiver).transfer(fee) */\n      dup2\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20077:20080  fee */\n      swap1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20058:20066  receiver */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20050:20081  payable(receiver).transfer(fee) */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20058:20066  receiver */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20050:20081  payable(receiver).transfer(fee) */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20077:20080  fee */\n      dup6\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20058:20066  receiver */\n      dup9\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20050:20081  payable(receiver).transfer(fee) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20104:20113  uint256 i */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20099:20454  for (uint256 i = 0; i < values.length; i++) {... */\n    tag_211:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20123:20129  values */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20123:20136  values.length */\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20119:20120  i */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20119:20136  i < values.length */\n      lt\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20099:20454  for (uint256 i = 0; i < values.length; i++) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20198:20203  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20198:20216  token.transferFrom */\n      and\n      0x23b872dd\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20246:20256  msg.sender */\n      caller\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20286:20296  recipients */\n      dup6\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20297:20298  i */\n      dup5\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20286:20299  recipients[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_215\n      tag_165\n      jump\t// in\n    tag_215:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20329:20335  values */\n      dup6\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20336:20337  i */\n      dup6\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20329:20338  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_217\n      jumpi\n      tag_217\n      tag_165\n      jump\t// in\n    tag_217:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20198:20364  token.transferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_218:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_221:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20165:20435  require(... */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_176\n      jump\t// in\n    tag_222:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20138:20141  i++ */\n      dup1\n      tag_224\n      dup2\n      tag_178\n      jump\t// in\n    tag_224:\n      swap2\n      pop\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":20099:20454  for (uint256 i = 0; i < values.length; i++) {... */\n      jump(tag_211)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":19833:20468  if (tokenAddress.balanceOf(msg.sender) < quantity) {... */\n    tag_205:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18371:20484  function TOKENmultisender(//ICustomERC20 REPLACED WITH ERC20... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22021:22275  function withdrawToken(IERC20 token, uint256 amount) public onlyOwner {... */\n    tag_84:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      tag_226\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11349  _checkOwner */\n      tag_114\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      jump\t// in\n    tag_226:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22122:22152  token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22156:22162  amount */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22122:22137  token.balanceOf */\n      dup5\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22122:22152  token.balanceOf(address(this)) */\n      tag_228\n      swap1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22146:22150  this */\n      address\n      swap1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22122:22152  token.balanceOf(address(this)) */\n      0x04\n      add\n      tag_71\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_231:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22122:22162  token.balanceOf(address(this)) >= amount */\n      lt\n      iszero\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22101:22224  require(... */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9593:9595   */\n      0x20\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22101:22224  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9575:9596   */\n      mstore\n        /* \"#utility.yul\":9632:9634   */\n      0x24\n        /* \"#utility.yul\":9612:9630   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9605:9635   */\n      mstore\n        /* \"#utility.yul\":9671:9705   */\n      0x636f6e747261637420646f65736e2774206861766520656e6f75676820746f6b\n        /* \"#utility.yul\":9651:9669   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9644:9706   */\n      mstore\n      shl(0xe0, 0x656e2773)\n        /* \"#utility.yul\":9722:9740   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9715:9749   */\n      mstore\n        /* \"#utility.yul\":9766:9785   */\n      0x84\n      add\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22101:22224  require(... */\n      tag_129\n        /* \"#utility.yul\":9391:9791   */\n      jump\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22101:22224  require(... */\n    tag_232:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22234:22268  token.transfer(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22249:22259  msg.sender */\n      caller\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22234:22268  token.transfer(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9970:10021   */\n      mstore\n        /* \"#utility.yul\":10037:10055   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10030:10064   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22234:22248  token.transfer */\n      dup4\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":9943:9961   */\n      0x44\n      add\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":22234:22268  token.transfer(msg.sender, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_205\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16693:18365  function coinMultisender(... */\n    tag_93:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16616:16628  tokenAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16600:16669  require(address(tokenAddress) != address(0), \"token holding invalid\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_149\n      jump\t// in\n    tag_242:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16888:16894  values */\n      dup1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16888:16901  values.length */\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16867:16877  recipients */\n      dup3\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16867:16884  recipients.length */\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16867:16901  recipients.length == values.length */\n      eq\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16859:16919  require(recipients.length == values.length, \"invalid input\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_158\n      jump\t// in\n    tag_245:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16929:16948  uint256 totalValues */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16963:16972  uint256 i */\n      dup1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16958:17047  for (uint256 i; i < values.length; i++) {... */\n    tag_247:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16978:16984  values */\n      dup3\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16978:16991  values.length */\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16974:16975  i */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16974:16991  i < values.length */\n      lt\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16958:17047  for (uint256 i; i < values.length; i++) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17027:17033  values */\n      dup3\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17034:17035  i */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17027:17036  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_251\n      jumpi\n      tag_251\n      tag_165\n      jump\t// in\n    tag_251:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17012:17036  totalValues += values[i] */\n      dup3\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      swap2\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16993:16996  i++ */\n      dup1\n      tag_254\n      dup2\n      tag_178\n      jump\t// in\n    tag_254:\n      swap2\n      pop\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16958:17047  for (uint256 i; i < values.length; i++) {... */\n      jump(tag_247)\n    tag_248:\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17077:17087  msg.sender */\n      caller\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17061:17088  authorizedusers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17061:17076  authorizedusers */\n      0x03\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17061:17088  authorizedusers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17057:18359  if (authorizedusers[msg.sender]) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17142:17153  totalValues */\n      dup1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17129:17138  msg.value */\n      callvalue\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17129:17153  msg.value == totalValues */\n      eq\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17104:17229  require(... */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10410:10412   */\n      0x20\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17104:17229  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10392:10413   */\n      mstore\n        /* \"#utility.yul\":10449:10451   */\n      0x2a\n        /* \"#utility.yul\":10429:10447   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10422:10452   */\n      mstore\n        /* \"#utility.yul\":10488:10522   */\n      0x7061792074686520657861637420616d6f756e7420746f20636f766572206469\n        /* \"#utility.yul\":10468:10486   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10461:10523   */\n      mstore\n      shl(0xb1, 0x39ba3934b13aba34b7b7)\n        /* \"#utility.yul\":10539:10557   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10532:10572   */\n      mstore\n        /* \"#utility.yul\":10589:10608   */\n      0x84\n      add\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17104:17229  require(... */\n      tag_129\n        /* \"#utility.yul\":10208:10614   */\n      jump\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17104:17229  require(... */\n    tag_256:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17248:17257  uint256 i */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17243:17366  for (uint256 i = 0; i < recipients.length; i++) {... */\n    tag_259:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17267:17277  recipients */\n      dup4\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17267:17284  recipients.length */\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17263:17264  i */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17263:17284  i < recipients.length */\n      lt\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17243:17366  for (uint256 i = 0; i < recipients.length; i++) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17317:17327  recipients */\n      dup4\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17328:17329  i */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17317:17330  recipients[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_263\n      jumpi\n      tag_263\n      tag_165\n      jump\t// in\n    tag_263:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17309:17340  payable(recipients[i]).transfer */\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17309:17351  payable(recipients[i]).transfer(values[i]) */\n      0x08fc\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17341:17347  values */\n      dup5\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17348:17349  i */\n      dup4\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17341:17350  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_265\n      jumpi\n      tag_265\n      tag_165\n      jump\t// in\n    tag_265:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17309:17351  payable(recipients[i]).transfer(values[i]) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_267:\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17286:17289  i++ */\n      dup1\n      tag_268\n      dup2\n      tag_178\n      jump\t// in\n    tag_268:\n      swap2\n      pop\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17243:17366  for (uint256 i = 0; i < recipients.length; i++) {... */\n      jump(tag_259)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17057:18359  if (authorizedusers[msg.sender]) {... */\n    tag_255:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17403:17413  msg.sender */\n      caller\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17387:17414  authorizedusers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17387:17402  authorizedusers */\n      0x03\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17387:17414  authorizedusers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17382:18359  if (!authorizedusers[msg.sender]) {... */\n      tag_205\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17472:17480  quantity */\n      sload(0x05)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17434:17446  tokenAddress */\n      0x04\n      dup1\n      sload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17434:17468  tokenAddress.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17434:17446  tokenAddress */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17434:17456  tokenAddress.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17434:17468  tokenAddress.balanceOf(msg.sender) */\n      tag_271\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17457:17467  msg.sender */\n      caller\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17434:17468  tokenAddress.balanceOf(msg.sender) */\n      add\n      tag_71\n      jump\t// in\n    tag_271:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_273\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_273:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_274\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_274:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17434:17480  tokenAddress.balanceOf(msg.sender) >= quantity */\n      lt\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17430:18349  if (tokenAddress.balanceOf(msg.sender) >= quantity) {... */\n      tag_275\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17516:17526  msg.sender */\n      caller\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17500:17527  authorizedusers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17500:17515  authorizedusers */\n      0x03\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17500:17527  authorizedusers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17500:17534  authorizedusers[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17530:17534  true */\n      0x01\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17500:17534  authorizedusers[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17581:17590  msg.value */\n      callvalue\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17581:17605  msg.value == totalValues */\n      dup2\n      eq\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17552:17702  require(... */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10821:10823   */\n      0x20\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17552:17702  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10803:10824   */\n      mstore\n        /* \"#utility.yul\":10860:10862   */\n      0x37\n        /* \"#utility.yul\":10840:10858   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10833:10863   */\n      mstore\n        /* \"#utility.yul\":10899:10933   */\n      0x686f6c64696e67207175616e74697479207472756520627574206d73672e7661\n        /* \"#utility.yul\":10879:10897   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10872:10934   */\n      mstore\n      shl(0x4a, 0x1b1d59481d5b98d95c9d185a5b881c185e48195e1858dd)\n        /* \"#utility.yul\":10950:10968   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10943:10996   */\n      mstore\n        /* \"#utility.yul\":11013:11032   */\n      0x84\n      add\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17552:17702  require(... */\n      tag_129\n        /* \"#utility.yul\":10619:11038   */\n      jump\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17552:17702  require(... */\n    tag_276:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17725:17734  uint256 i */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17720:17851  for (uint256 i = 0; i < recipients.length; i++) {... */\n    tag_279:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17744:17754  recipients */\n      dup4\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17744:17761  recipients.length */\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17740:17741  i */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17740:17761  i < recipients.length */\n      lt\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17720:17851  for (uint256 i = 0; i < recipients.length; i++) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17798:17808  recipients */\n      dup4\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17809:17810  i */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17798:17811  recipients[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_283\n      jumpi\n      tag_283\n      tag_165\n      jump\t// in\n    tag_283:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17790:17821  payable(recipients[i]).transfer */\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17790:17832  payable(recipients[i]).transfer(values[i]) */\n      0x08fc\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17822:17828  values */\n      dup5\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17829:17830  i */\n      dup4\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17822:17831  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_285\n      jumpi\n      tag_285\n      tag_165\n      jump\t// in\n    tag_285:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17790:17832  payable(recipients[i]).transfer(values[i]) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_287\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_287:\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17763:17766  i++ */\n      dup1\n      tag_288\n      dup2\n      tag_178\n      jump\t// in\n    tag_288:\n      swap2\n      pop\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17720:17851  for (uint256 i = 0; i < recipients.length; i++) {... */\n      jump(tag_279)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17430:18349  if (tokenAddress.balanceOf(msg.sender) >= quantity) {... */\n    tag_275:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17912:17920  quantity */\n      sload(0x05)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17875:17887  tokenAddress */\n      0x04\n      dup1\n      sload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17875:17909  tokenAddress.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17875:17887  tokenAddress */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17875:17897  tokenAddress.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17875:17909  tokenAddress.balanceOf(msg.sender) */\n      tag_290\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17898:17908  msg.sender */\n      caller\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17875:17909  tokenAddress.balanceOf(msg.sender) */\n      add\n      tag_71\n      jump\t// in\n    tag_290:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_292\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_292:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_293\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_293:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17875:17920  tokenAddress.balanceOf(msg.sender) < quantity */\n      lt\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17871:18349  if (tokenAddress.balanceOf(msg.sender) < quantity) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17940:17960  uint256 toBeIncluded */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17969:17980  totalValues */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17963:17966  fee */\n      sload(0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17963:17980  fee + totalValues */\n      tag_295\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_295:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17940:17980  uint256 toBeIncluded = fee + totalValues */\n      swap1\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18040:18052  toBeIncluded */\n      dup1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18027:18036  msg.value */\n      callvalue\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18027:18052  msg.value == toBeIncluded */\n      eq\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17998:18137  require(... */\n      tag_296\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_208\n      jump\t// in\n    tag_296:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18163:18171  receiver */\n      sload(0x02)\n      0x01\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18182:18185  fee */\n      sload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18155:18186  payable(receiver).transfer(fee) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18163:18171  receiver */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18155:18186  payable(receiver).transfer(fee) */\n      dup2\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18182:18185  fee */\n      swap1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18163:18171  receiver */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18155:18186  payable(receiver).transfer(fee) */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18163:18171  receiver */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18155:18186  payable(receiver).transfer(fee) */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18182:18185  fee */\n      dup6\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18163:18171  receiver */\n      dup9\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18155:18186  payable(receiver).transfer(fee) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_299\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_299:\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18209:18218  uint256 i */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18204:18335  for (uint256 i = 0; i < recipients.length; i++) {... */\n    tag_300:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18228:18238  recipients */\n      dup5\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18228:18245  recipients.length */\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18224:18225  i */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18224:18245  i < recipients.length */\n      lt\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18204:18335  for (uint256 i = 0; i < recipients.length; i++) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18282:18292  recipients */\n      dup5\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18293:18294  i */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18282:18295  recipients[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_304\n      jumpi\n      tag_304\n      tag_165\n      jump\t// in\n    tag_304:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18274:18305  payable(recipients[i]).transfer */\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18274:18316  payable(recipients[i]).transfer(values[i]) */\n      0x08fc\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18306:18312  values */\n      dup6\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18313:18314  i */\n      dup4\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18306:18315  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_306\n      jumpi\n      tag_306\n      tag_165\n      jump\t// in\n    tag_306:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18274:18316  payable(recipients[i]).transfer(values[i]) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_308\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_308:\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18247:18250  i++ */\n      dup1\n      tag_309\n      dup2\n      tag_178\n      jump\t// in\n    tag_309:\n      swap2\n      pop\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":18204:18335  for (uint256 i = 0; i < recipients.length; i++) {... */\n      jump(tag_300)\n    tag_301:\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":17922:18349  {... */\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16824:18365  {... */\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":16693:18365  function coinMultisender(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12318:12516  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_101:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      tag_311\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11349  _checkOwner */\n      tag_114\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      jump\t// in\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12406:12428  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12398:12471  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11245:11247   */\n      0x20\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12398:12471  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11227:11248   */\n      mstore\n        /* \"#utility.yul\":11284:11286   */\n      0x26\n        /* \"#utility.yul\":11264:11282   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11257:11287   */\n      mstore\n        /* \"#utility.yul\":11323:11357   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11303:11321   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11296:11358   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11374:11392   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11367:11403   */\n      mstore\n        /* \"#utility.yul\":11420:11439   */\n      0x84\n      add\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12398:12471  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_129\n        /* \"#utility.yul\":11043:11445   */\n      jump\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12398:12471  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_313:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12481:12509  _transferOwnership(newOwner) */\n      tag_316\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12500:12508  newOwner */\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12481:12499  _transferOwnership */\n      tag_141\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12481:12509  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_316:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12318:12516  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21741:21933  function withdrawCoins(uint256 amount) external onlyOwner {... */\n    tag_111:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      tag_318\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11349  _checkOwner */\n      tag_114\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11338:11351  _checkOwner() */\n      jump\t// in\n    tag_318:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21825:21829  this */\n      address\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21817:21838  address(this).balance */\n      balance\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21817:21848  address(this).balance >= amount */\n      dup2\n      gt\n      iszero\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21809:21880  require(address(this).balance >= amount, \"invalid balance to withdraw\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11652:11654   */\n      0x20\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21809:21880  require(address(this).balance >= amount, \"invalid balance to withdraw\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11634:11655   */\n      mstore\n        /* \"#utility.yul\":11691:11693   */\n      0x1b\n        /* \"#utility.yul\":11671:11689   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11664:11694   */\n      mstore\n      shl(0x28, 0x696e76616c69642062616c616e636520746f207769746864726177)\n        /* \"#utility.yul\":11710:11728   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11703:11760   */\n      mstore\n        /* \"#utility.yul\":11777:11795   */\n      0x64\n      add\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21809:21880  require(address(this).balance >= amount, \"invalid balance to withdraw\") */\n      tag_129\n        /* \"#utility.yul\":11450:11801   */\n      jump\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21809:21880  require(address(this).balance >= amount, \"invalid balance to withdraw\") */\n    tag_320:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21890:21926  payable(msg.sender).transfer(amount) */\n      mload(0x40)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21898:21908  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21890:21926  payable(msg.sender).transfer(amount) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21919:21925  amount */\n      dup4\n      swap1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21890:21926  payable(msg.sender).transfer(amount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21919:21925  amount */\n      dup6\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21898:21908  msg.sender */\n      dup9\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21890:21926  payable(msg.sender).transfer(amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_324\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_324:\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":21741:21933  function withdrawCoins(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11603:11733  function _checkOwner() internal view virtual {... */\n    tag_114:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11491:11498  address */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11517:11523  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":10127:10137  msg.sender */\n      caller\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11666:11689  owner() == _msgSender() */\n      eq\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11658:11726  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12008:12010   */\n      0x20\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11658:11726  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11990:12011   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12027:12045   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12020:12050   */\n      mstore\n        /* \"#utility.yul\":12086:12120   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12066:12084   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12059:12121   */\n      mstore\n        /* \"#utility.yul\":12138:12156   */\n      0x64\n      add\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":11658:11726  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_129\n        /* \"#utility.yul\":11806:12162   */\n      jump\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12670:12857  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_141:\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12743:12759  address oldOwner */\n      0x00\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12762:12768  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12778:12795  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12810:12850  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12762:12768  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12810:12850  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12743:12759  address oldOwner */\n      swap1\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12810:12850  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12733:12857  {... */\n      pop\n        /* \"contracts/SnipeFinanceMultisenders_flattened.sol\":12670:12857  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_335:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:465   */\n    tag_28:\n        /* \"#utility.yul\":218:224   */\n      0x00\n        /* \"#utility.yul\":226:232   */\n      dup1\n        /* \"#utility.yul\":279:281   */\n      0x40\n        /* \"#utility.yul\":267:276   */\n      dup4\n        /* \"#utility.yul\":258:265   */\n      dup6\n        /* \"#utility.yul\":254:277   */\n      sub\n        /* \"#utility.yul\":250:282   */\n      slt\n        /* \"#utility.yul\":247:299   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":295:296   */\n      0x00\n        /* \"#utility.yul\":292:293   */\n      dup1\n        /* \"#utility.yul\":285:297   */\n      revert\n        /* \"#utility.yul\":247:299   */\n    tag_346:\n        /* \"#utility.yul\":331:340   */\n      dup3\n        /* \"#utility.yul\":318:341   */\n      calldataload\n        /* \"#utility.yul\":308:341   */\n      swap2\n      pop\n        /* \"#utility.yul\":391:393   */\n      0x20\n        /* \"#utility.yul\":380:389   */\n      dup4\n        /* \"#utility.yul\":376:394   */\n      add\n        /* \"#utility.yul\":363:395   */\n      calldataload\n        /* \"#utility.yul\":404:435   */\n      tag_347\n        /* \"#utility.yul\":429:434   */\n      dup2\n        /* \"#utility.yul\":404:435   */\n      tag_335\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":454:459   */\n      dup1\n        /* \"#utility.yul\":444:459   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":150:465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":652:981   */\n    tag_38:\n        /* \"#utility.yul\":734:740   */\n      0x00\n        /* \"#utility.yul\":742:748   */\n      dup1\n        /* \"#utility.yul\":795:797   */\n      0x40\n        /* \"#utility.yul\":783:792   */\n      dup4\n        /* \"#utility.yul\":774:781   */\n      dup6\n        /* \"#utility.yul\":770:793   */\n      sub\n        /* \"#utility.yul\":766:798   */\n      slt\n        /* \"#utility.yul\":763:815   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":811:812   */\n      0x00\n        /* \"#utility.yul\":808:809   */\n      dup1\n        /* \"#utility.yul\":801:813   */\n      revert\n        /* \"#utility.yul\":763:815   */\n    tag_350:\n        /* \"#utility.yul\":850:859   */\n      dup3\n        /* \"#utility.yul\":837:860   */\n      calldataload\n        /* \"#utility.yul\":869:900   */\n      tag_351\n        /* \"#utility.yul\":894:899   */\n      dup2\n        /* \"#utility.yul\":869:900   */\n      tag_335\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":919:924   */\n      swap5\n        /* \"#utility.yul\":971:973   */\n      0x20\n        /* \"#utility.yul\":956:974   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":943:975   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":652:981   */\n      jump\t// out\n        /* \"#utility.yul\":986:1233   */\n    tag_43:\n        /* \"#utility.yul\":1045:1051   */\n      0x00\n        /* \"#utility.yul\":1098:1100   */\n      0x20\n        /* \"#utility.yul\":1086:1095   */\n      dup3\n        /* \"#utility.yul\":1077:1084   */\n      dup5\n        /* \"#utility.yul\":1073:1096   */\n      sub\n        /* \"#utility.yul\":1069:1101   */\n      slt\n        /* \"#utility.yul\":1066:1118   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":1114:1115   */\n      0x00\n        /* \"#utility.yul\":1111:1112   */\n      dup1\n        /* \"#utility.yul\":1104:1116   */\n      revert\n        /* \"#utility.yul\":1066:1118   */\n    tag_353:\n        /* \"#utility.yul\":1153:1162   */\n      dup2\n        /* \"#utility.yul\":1140:1163   */\n      calldataload\n        /* \"#utility.yul\":1172:1203   */\n      tag_354\n        /* \"#utility.yul\":1197:1202   */\n      dup2\n        /* \"#utility.yul\":1172:1203   */\n      tag_335\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":1222:1227   */\n      swap4\n        /* \"#utility.yul\":986:1233   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1633   */\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1594:1626   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1576:1627   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1564:1566   */\n      0x20\n        /* \"#utility.yul\":1549:1567   */\n      add\n      swap1\n        /* \"#utility.yul\":1430:1633   */\n      jump\t// out\n        /* \"#utility.yul\":1638:1765   */\n    tag_336:\n        /* \"#utility.yul\":1699:1709   */\n      0x4e487b71\n        /* \"#utility.yul\":1694:1697   */\n      0xe0\n        /* \"#utility.yul\":1690:1710   */\n      shl\n        /* \"#utility.yul\":1687:1688   */\n      0x00\n        /* \"#utility.yul\":1680:1711   */\n      mstore\n        /* \"#utility.yul\":1730:1734   */\n      0x41\n        /* \"#utility.yul\":1727:1728   */\n      0x04\n        /* \"#utility.yul\":1720:1735   */\n      mstore\n        /* \"#utility.yul\":1754:1758   */\n      0x24\n        /* \"#utility.yul\":1751:1752   */\n      0x00\n        /* \"#utility.yul\":1744:1759   */\n      revert\n        /* \"#utility.yul\":1770:2045   */\n    tag_337:\n        /* \"#utility.yul\":1841:1843   */\n      0x40\n        /* \"#utility.yul\":1835:1844   */\n      mload\n        /* \"#utility.yul\":1906:1908   */\n      0x1f\n        /* \"#utility.yul\":1887:1900   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1883:1910   */\n      and\n        /* \"#utility.yul\":1871:1911   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1926:1960   */\n      dup2\n      gt\n        /* \"#utility.yul\":1962:1984   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1923:1985   */\n      or\n        /* \"#utility.yul\":1920:2008   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":1988:2006   */\n      tag_360\n      tag_336\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":2024:2026   */\n      0x40\n        /* \"#utility.yul\":2017:2039   */\n      mstore\n        /* \"#utility.yul\":1770:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2233   */\n    tag_338:\n        /* \"#utility.yul\":2110:2114   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2135:2141   */\n      dup3\n        /* \"#utility.yul\":2132:2162   */\n      gt\n        /* \"#utility.yul\":2129:2185   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":2165:2183   */\n      tag_363\n      tag_336\n      jump\t// in\n    tag_363:\n      pop\n        /* \"#utility.yul\":2210:2211   */\n      0x05\n        /* \"#utility.yul\":2206:2220   */\n      shl\n        /* \"#utility.yul\":2222:2226   */\n      0x20\n        /* \"#utility.yul\":2202:2227   */\n      add\n      swap1\n        /* \"#utility.yul\":2050:2233   */\n      jump\t// out\n        /* \"#utility.yul\":2238:2975   */\n    tag_339:\n        /* \"#utility.yul\":2292:2297   */\n      0x00\n        /* \"#utility.yul\":2345:2348   */\n      dup3\n        /* \"#utility.yul\":2338:2342   */\n      0x1f\n        /* \"#utility.yul\":2330:2336   */\n      dup4\n        /* \"#utility.yul\":2326:2343   */\n      add\n        /* \"#utility.yul\":2322:2349   */\n      slt\n        /* \"#utility.yul\":2312:2367   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":2363:2364   */\n      0x00\n        /* \"#utility.yul\":2360:2361   */\n      dup1\n        /* \"#utility.yul\":2353:2365   */\n      revert\n        /* \"#utility.yul\":2312:2367   */\n    tag_365:\n        /* \"#utility.yul\":2399:2405   */\n      dup2\n        /* \"#utility.yul\":2386:2406   */\n      calldataload\n        /* \"#utility.yul\":2425:2429   */\n      0x20\n        /* \"#utility.yul\":2449:2509   */\n      tag_366\n        /* \"#utility.yul\":2465:2508   */\n      tag_367\n        /* \"#utility.yul\":2505:2507   */\n      dup4\n        /* \"#utility.yul\":2465:2508   */\n      tag_338\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2449:2509   */\n      tag_337\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2543:2558   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":2629:2630   */\n      0x05\n        /* \"#utility.yul\":2625:2635   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":2613:2636   */\n      dup5\n      add\n        /* \"#utility.yul\":2609:2641   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":2574:2586   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2653:2668   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":2650:2685   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":2681:2682   */\n      0x00\n        /* \"#utility.yul\":2678:2679   */\n      dup1\n        /* \"#utility.yul\":2671:2683   */\n      revert\n        /* \"#utility.yul\":2650:2685   */\n    tag_368:\n        /* \"#utility.yul\":2717:2719   */\n      dup3\n        /* \"#utility.yul\":2709:2715   */\n      dup7\n        /* \"#utility.yul\":2705:2720   */\n      add\n        /* \"#utility.yul\":2729:2946   */\n    tag_369:\n        /* \"#utility.yul\":2745:2751   */\n      dup5\n        /* \"#utility.yul\":2740:2743   */\n      dup2\n        /* \"#utility.yul\":2737:2752   */\n      lt\n        /* \"#utility.yul\":2729:2946   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2825:2828   */\n      dup1\n        /* \"#utility.yul\":2812:2829   */\n      calldataload\n        /* \"#utility.yul\":2842:2873   */\n      tag_372\n        /* \"#utility.yul\":2867:2872   */\n      dup2\n        /* \"#utility.yul\":2842:2873   */\n      tag_335\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2886:2904   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2924:2936   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":2762:2774   */\n      dup4\n      add\n        /* \"#utility.yul\":2729:2946   */\n      jump(tag_369)\n    tag_371:\n      pop\n        /* \"#utility.yul\":2964:2969   */\n      swap7\n        /* \"#utility.yul\":2238:2975   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2980:3642   */\n    tag_340:\n        /* \"#utility.yul\":3034:3039   */\n      0x00\n        /* \"#utility.yul\":3087:3090   */\n      dup3\n        /* \"#utility.yul\":3080:3084   */\n      0x1f\n        /* \"#utility.yul\":3072:3078   */\n      dup4\n        /* \"#utility.yul\":3068:3085   */\n      add\n        /* \"#utility.yul\":3064:3091   */\n      slt\n        /* \"#utility.yul\":3054:3109   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3102:3103   */\n      dup1\n        /* \"#utility.yul\":3095:3107   */\n      revert\n        /* \"#utility.yul\":3054:3109   */\n    tag_374:\n        /* \"#utility.yul\":3141:3147   */\n      dup2\n        /* \"#utility.yul\":3128:3148   */\n      calldataload\n        /* \"#utility.yul\":3167:3171   */\n      0x20\n        /* \"#utility.yul\":3191:3251   */\n      tag_375\n        /* \"#utility.yul\":3207:3250   */\n      tag_367\n        /* \"#utility.yul\":3247:3249   */\n      dup4\n        /* \"#utility.yul\":3207:3250   */\n      tag_338\n      jump\t// in\n        /* \"#utility.yul\":3191:3251   */\n    tag_375:\n        /* \"#utility.yul\":3285:3300   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":3371:3372   */\n      0x05\n        /* \"#utility.yul\":3367:3377   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":3355:3378   */\n      dup5\n      add\n        /* \"#utility.yul\":3351:3383   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":3316:3328   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3395:3410   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3392:3427   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":3423:3424   */\n      0x00\n        /* \"#utility.yul\":3420:3421   */\n      dup1\n        /* \"#utility.yul\":3413:3425   */\n      revert\n        /* \"#utility.yul\":3392:3427   */\n    tag_377:\n        /* \"#utility.yul\":3459:3461   */\n      dup3\n        /* \"#utility.yul\":3451:3457   */\n      dup7\n        /* \"#utility.yul\":3447:3462   */\n      add\n        /* \"#utility.yul\":3471:3613   */\n    tag_378:\n        /* \"#utility.yul\":3487:3493   */\n      dup5\n        /* \"#utility.yul\":3482:3485   */\n      dup2\n        /* \"#utility.yul\":3479:3494   */\n      lt\n        /* \"#utility.yul\":3471:3613   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":3553:3570   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3541:3571   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3591:3603   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3504:3516   */\n      dup4\n      add\n        /* \"#utility.yul\":3471:3613   */\n      jump(tag_378)\n        /* \"#utility.yul\":3647:4391   */\n    tag_74:\n        /* \"#utility.yul\":3788:3794   */\n      0x00\n        /* \"#utility.yul\":3796:3802   */\n      dup1\n        /* \"#utility.yul\":3804:3810   */\n      0x00\n        /* \"#utility.yul\":3857:3859   */\n      0x60\n        /* \"#utility.yul\":3845:3854   */\n      dup5\n        /* \"#utility.yul\":3836:3843   */\n      dup7\n        /* \"#utility.yul\":3832:3855   */\n      sub\n        /* \"#utility.yul\":3828:3860   */\n      slt\n        /* \"#utility.yul\":3825:3877   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":3873:3874   */\n      0x00\n        /* \"#utility.yul\":3870:3871   */\n      dup1\n        /* \"#utility.yul\":3863:3875   */\n      revert\n        /* \"#utility.yul\":3825:3877   */\n    tag_382:\n        /* \"#utility.yul\":3912:3921   */\n      dup4\n        /* \"#utility.yul\":3899:3922   */\n      calldataload\n        /* \"#utility.yul\":3931:3962   */\n      tag_383\n        /* \"#utility.yul\":3956:3961   */\n      dup2\n        /* \"#utility.yul\":3931:3962   */\n      tag_335\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3981:3986   */\n      swap3\n      pop\n        /* \"#utility.yul\":4037:4039   */\n      0x20\n        /* \"#utility.yul\":4022:4040   */\n      dup5\n      add\n        /* \"#utility.yul\":4009:4041   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4090:4104   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4087:4121   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4114:4115   */\n      dup1\n        /* \"#utility.yul\":4107:4119   */\n      revert\n        /* \"#utility.yul\":4087:4121   */\n    tag_384:\n        /* \"#utility.yul\":4140:4201   */\n      tag_385\n        /* \"#utility.yul\":4193:4200   */\n      dup8\n        /* \"#utility.yul\":4184:4190   */\n      dup4\n        /* \"#utility.yul\":4173:4182   */\n      dup9\n        /* \"#utility.yul\":4169:4191   */\n      add\n        /* \"#utility.yul\":4140:4201   */\n      tag_339\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4130:4201   */\n      swap4\n      pop\n        /* \"#utility.yul\":4254:4256   */\n      0x40\n        /* \"#utility.yul\":4243:4252   */\n      dup7\n        /* \"#utility.yul\":4239:4257   */\n      add\n        /* \"#utility.yul\":4226:4258   */\n      calldataload\n        /* \"#utility.yul\":4210:4258   */\n      swap2\n      pop\n        /* \"#utility.yul\":4283:4285   */\n      dup1\n        /* \"#utility.yul\":4273:4281   */\n      dup3\n        /* \"#utility.yul\":4270:4286   */\n      gt\n        /* \"#utility.yul\":4267:4303   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":4299:4300   */\n      0x00\n        /* \"#utility.yul\":4296:4297   */\n      dup1\n        /* \"#utility.yul\":4289:4301   */\n      revert\n        /* \"#utility.yul\":4267:4303   */\n    tag_386:\n      pop\n        /* \"#utility.yul\":4322:4385   */\n      tag_387\n        /* \"#utility.yul\":4377:4384   */\n      dup7\n        /* \"#utility.yul\":4366:4374   */\n      dup3\n        /* \"#utility.yul\":4355:4364   */\n      dup8\n        /* \"#utility.yul\":4351:4375   */\n      add\n        /* \"#utility.yul\":4322:4385   */\n      tag_340\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4312:4385   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3647:4391   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4618:5213   */\n    tag_92:\n        /* \"#utility.yul\":4736:4742   */\n      0x00\n        /* \"#utility.yul\":4744:4750   */\n      dup1\n        /* \"#utility.yul\":4797:4799   */\n      0x40\n        /* \"#utility.yul\":4785:4794   */\n      dup4\n        /* \"#utility.yul\":4776:4783   */\n      dup6\n        /* \"#utility.yul\":4772:4795   */\n      sub\n        /* \"#utility.yul\":4768:4800   */\n      slt\n        /* \"#utility.yul\":4765:4817   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":4813:4814   */\n      0x00\n        /* \"#utility.yul\":4810:4811   */\n      dup1\n        /* \"#utility.yul\":4803:4815   */\n      revert\n        /* \"#utility.yul\":4765:4817   */\n    tag_390:\n        /* \"#utility.yul\":4853:4862   */\n      dup3\n        /* \"#utility.yul\":4840:4863   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4923:4925   */\n      dup1\n        /* \"#utility.yul\":4915:4921   */\n      dup3\n        /* \"#utility.yul\":4912:4926   */\n      gt\n        /* \"#utility.yul\":4909:4943   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":4939:4940   */\n      0x00\n        /* \"#utility.yul\":4936:4937   */\n      dup1\n        /* \"#utility.yul\":4929:4941   */\n      revert\n        /* \"#utility.yul\":4909:4943   */\n    tag_391:\n        /* \"#utility.yul\":4962:5023   */\n      tag_392\n        /* \"#utility.yul\":5015:5022   */\n      dup7\n        /* \"#utility.yul\":5006:5012   */\n      dup4\n        /* \"#utility.yul\":4995:5004   */\n      dup8\n        /* \"#utility.yul\":4991:5013   */\n      add\n        /* \"#utility.yul\":4962:5023   */\n      tag_339\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":4952:5023   */\n      swap4\n      pop\n        /* \"#utility.yul\":5076:5078   */\n      0x20\n        /* \"#utility.yul\":5065:5074   */\n      dup6\n        /* \"#utility.yul\":5061:5079   */\n      add\n        /* \"#utility.yul\":5048:5080   */\n      calldataload\n        /* \"#utility.yul\":5032:5080   */\n      swap2\n      pop\n        /* \"#utility.yul\":5105:5107   */\n      dup1\n        /* \"#utility.yul\":5095:5103   */\n      dup3\n        /* \"#utility.yul\":5092:5108   */\n      gt\n        /* \"#utility.yul\":5089:5125   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":5121:5122   */\n      0x00\n        /* \"#utility.yul\":5118:5119   */\n      dup1\n        /* \"#utility.yul\":5111:5123   */\n      revert\n        /* \"#utility.yul\":5089:5125   */\n    tag_393:\n      pop\n        /* \"#utility.yul\":5144:5207   */\n      tag_394\n        /* \"#utility.yul\":5199:5206   */\n      dup6\n        /* \"#utility.yul\":5188:5196   */\n      dup3\n        /* \"#utility.yul\":5177:5186   */\n      dup7\n        /* \"#utility.yul\":5173:5197   */\n      add\n        /* \"#utility.yul\":5144:5207   */\n      tag_340\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":5134:5207   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4618:5213   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5442:5622   */\n    tag_110:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5554:5556   */\n      0x20\n        /* \"#utility.yul\":5542:5551   */\n      dup3\n        /* \"#utility.yul\":5533:5540   */\n      dup5\n        /* \"#utility.yul\":5529:5552   */\n      sub\n        /* \"#utility.yul\":5525:5557   */\n      slt\n        /* \"#utility.yul\":5522:5574   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":5570:5571   */\n      0x00\n        /* \"#utility.yul\":5567:5568   */\n      dup1\n        /* \"#utility.yul\":5560:5572   */\n      revert\n        /* \"#utility.yul\":5522:5574   */\n    tag_397:\n      pop\n        /* \"#utility.yul\":5593:5616   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5442:5622   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5627:5811   */\n    tag_124:\n        /* \"#utility.yul\":5697:5703   */\n      0x00\n        /* \"#utility.yul\":5750:5752   */\n      0x20\n        /* \"#utility.yul\":5738:5747   */\n      dup3\n        /* \"#utility.yul\":5729:5736   */\n      dup5\n        /* \"#utility.yul\":5725:5748   */\n      sub\n        /* \"#utility.yul\":5721:5753   */\n      slt\n        /* \"#utility.yul\":5718:5770   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":5766:5767   */\n      0x00\n        /* \"#utility.yul\":5763:5764   */\n      dup1\n        /* \"#utility.yul\":5756:5768   */\n      revert\n        /* \"#utility.yul\":5718:5770   */\n    tag_399:\n      pop\n        /* \"#utility.yul\":5789:5805   */\n      mload\n      swap2\n        /* \"#utility.yul\":5627:5811   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6528:6873   */\n    tag_149:\n        /* \"#utility.yul\":6730:6732   */\n      0x20\n        /* \"#utility.yul\":6712:6733   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6769:6771   */\n      0x15\n        /* \"#utility.yul\":6749:6767   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6742:6772   */\n      mstore\n      shl(0x5a, 0x1d1bdad95b881a1bdb191a5b99c81a5b9d985b1a59)\n        /* \"#utility.yul\":6803:6805   */\n      0x40\n        /* \"#utility.yul\":6788:6806   */\n      dup3\n      add\n        /* \"#utility.yul\":6781:6832   */\n      mstore\n        /* \"#utility.yul\":6864:6866   */\n      0x60\n        /* \"#utility.yul\":6849:6867   */\n      add\n      swap1\n        /* \"#utility.yul\":6528:6873   */\n      jump\t// out\n        /* \"#utility.yul\":7221:7558   */\n    tag_158:\n        /* \"#utility.yul\":7423:7425   */\n      0x20\n        /* \"#utility.yul\":7405:7426   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7462:7464   */\n      0x0d\n        /* \"#utility.yul\":7442:7460   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7435:7465   */\n      mstore\n      shl(0x9a, 0x1a5b9d985b1a59081a5b9c1d5d)\n        /* \"#utility.yul\":7496:7498   */\n      0x40\n        /* \"#utility.yul\":7481:7499   */\n      dup3\n      add\n        /* \"#utility.yul\":7474:7517   */\n      mstore\n        /* \"#utility.yul\":7549:7551   */\n      0x60\n        /* \"#utility.yul\":7534:7552   */\n      add\n      swap1\n        /* \"#utility.yul\":7221:7558   */\n      jump\t// out\n        /* \"#utility.yul\":7563:7690   */\n    tag_165:\n        /* \"#utility.yul\":7624:7634   */\n      0x4e487b71\n        /* \"#utility.yul\":7619:7622   */\n      0xe0\n        /* \"#utility.yul\":7615:7635   */\n      shl\n        /* \"#utility.yul\":7612:7613   */\n      0x00\n        /* \"#utility.yul\":7605:7636   */\n      mstore\n        /* \"#utility.yul\":7655:7659   */\n      0x32\n        /* \"#utility.yul\":7652:7653   */\n      0x04\n        /* \"#utility.yul\":7645:7660   */\n      mstore\n        /* \"#utility.yul\":7679:7683   */\n      0x24\n        /* \"#utility.yul\":7676:7677   */\n      0x00\n        /* \"#utility.yul\":7669:7684   */\n      revert\n        /* \"#utility.yul\":7695:8070   */\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7953:7968   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":7935:7969   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8005:8020   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":8000:8002   */\n      0x20\n        /* \"#utility.yul\":7985:8003   */\n      dup3\n      add\n        /* \"#utility.yul\":7978:8021   */\n      mstore\n        /* \"#utility.yul\":8052:8054   */\n      0x40\n        /* \"#utility.yul\":8037:8055   */\n      dup2\n      add\n        /* \"#utility.yul\":8030:8064   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7885:7887   */\n      0x60\n        /* \"#utility.yul\":7870:7888   */\n      add\n      swap1\n        /* \"#utility.yul\":7695:8070   */\n      jump\t// out\n        /* \"#utility.yul\":8075:8352   */\n    tag_173:\n        /* \"#utility.yul\":8142:8148   */\n      0x00\n        /* \"#utility.yul\":8195:8197   */\n      0x20\n        /* \"#utility.yul\":8183:8192   */\n      dup3\n        /* \"#utility.yul\":8174:8181   */\n      dup5\n        /* \"#utility.yul\":8170:8193   */\n      sub\n        /* \"#utility.yul\":8166:8198   */\n      slt\n        /* \"#utility.yul\":8163:8215   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":8211:8212   */\n      0x00\n        /* \"#utility.yul\":8208:8209   */\n      dup1\n        /* \"#utility.yul\":8201:8213   */\n      revert\n        /* \"#utility.yul\":8163:8215   */\n    tag_408:\n        /* \"#utility.yul\":8243:8252   */\n      dup2\n        /* \"#utility.yul\":8237:8253   */\n      mload\n        /* \"#utility.yul\":8296:8301   */\n      dup1\n        /* \"#utility.yul\":8289:8302   */\n      iszero\n        /* \"#utility.yul\":8282:8303   */\n      iszero\n        /* \"#utility.yul\":8275:8280   */\n      dup2\n        /* \"#utility.yul\":8272:8304   */\n      eq\n        /* \"#utility.yul\":8262:8322   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":8318:8319   */\n      0x00\n        /* \"#utility.yul\":8315:8316   */\n      dup1\n        /* \"#utility.yul\":8308:8320   */\n      revert\n        /* \"#utility.yul\":8357:8702   */\n    tag_176:\n        /* \"#utility.yul\":8559:8561   */\n      0x20\n        /* \"#utility.yul\":8541:8562   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8598:8600   */\n      0x15\n        /* \"#utility.yul\":8578:8596   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8571:8601   */\n      mstore\n      shl(0x59, 0x32b93937b91034b7103234b9ba3934b13aba34b7b7)\n        /* \"#utility.yul\":8632:8634   */\n      0x40\n        /* \"#utility.yul\":8617:8635   */\n      dup3\n      add\n        /* \"#utility.yul\":8610:8661   */\n      mstore\n        /* \"#utility.yul\":8693:8695   */\n      0x60\n        /* \"#utility.yul\":8678:8696   */\n      add\n      swap1\n        /* \"#utility.yul\":8357:8702   */\n      jump\t// out\n        /* \"#utility.yul\":8707:8834   */\n    tag_341:\n        /* \"#utility.yul\":8768:8778   */\n      0x4e487b71\n        /* \"#utility.yul\":8763:8766   */\n      0xe0\n        /* \"#utility.yul\":8759:8779   */\n      shl\n        /* \"#utility.yul\":8756:8757   */\n      0x00\n        /* \"#utility.yul\":8749:8780   */\n      mstore\n        /* \"#utility.yul\":8799:8803   */\n      0x11\n        /* \"#utility.yul\":8796:8797   */\n      0x04\n        /* \"#utility.yul\":8789:8804   */\n      mstore\n        /* \"#utility.yul\":8823:8827   */\n      0x24\n        /* \"#utility.yul\":8820:8821   */\n      0x00\n        /* \"#utility.yul\":8813:8828   */\n      revert\n        /* \"#utility.yul\":8839:8974   */\n    tag_178:\n        /* \"#utility.yul\":8878:8881   */\n      0x00\n        /* \"#utility.yul\":8899:8916   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":8896:8939   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":8919:8937   */\n      tag_414\n      tag_341\n      jump\t// in\n    tag_414:\n      pop\n        /* \"#utility.yul\":8966:8967   */\n      0x01\n        /* \"#utility.yul\":8955:8968   */\n      add\n      swap1\n        /* \"#utility.yul\":8839:8974   */\n      jump\t// out\n        /* \"#utility.yul\":8979:9386   */\n    tag_208:\n        /* \"#utility.yul\":9181:9183   */\n      0x20\n        /* \"#utility.yul\":9163:9184   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9220:9222   */\n      0x2b\n        /* \"#utility.yul\":9200:9218   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9193:9223   */\n      mstore\n        /* \"#utility.yul\":9259:9293   */\n      0x686f6c64696e67202620617574686f72697a6174696f6e2066616c7365207061\n        /* \"#utility.yul\":9254:9256   */\n      0x40\n        /* \"#utility.yul\":9239:9257   */\n      dup3\n      add\n        /* \"#utility.yul\":9232:9294   */\n      mstore\n      shl(0xa8, 0x7920657861637420666565)\n        /* \"#utility.yul\":9325:9327   */\n      0x60\n        /* \"#utility.yul\":9310:9328   */\n      dup3\n      add\n        /* \"#utility.yul\":9303:9344   */\n      mstore\n        /* \"#utility.yul\":9376:9379   */\n      0x80\n        /* \"#utility.yul\":9361:9380   */\n      add\n      swap1\n        /* \"#utility.yul\":8979:9386   */\n      jump\t// out\n        /* \"#utility.yul\":10075:10203   */\n    tag_253:\n        /* \"#utility.yul\":10115:10118   */\n      0x00\n        /* \"#utility.yul\":10146:10147   */\n      dup3\n        /* \"#utility.yul\":10142:10148   */\n      not\n        /* \"#utility.yul\":10139:10140   */\n      dup3\n        /* \"#utility.yul\":10136:10149   */\n      gt\n        /* \"#utility.yul\":10133:10172   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":10152:10170   */\n      tag_420\n      tag_341\n      jump\t// in\n    tag_420:\n      pop\n        /* \"#utility.yul\":10188:10197   */\n      add\n      swap1\n        /* \"#utility.yul\":10075:10203   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c5ef9ed6cdb996a81768cde690905a32c50dc4ad66688802dbf57a65234d180664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_577": {
									"entryPoint": null,
									"id": 577,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_340": {
									"entryPoint": null,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_460": {
									"entryPoint": 75,
									"id": 460,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_389": {
									"entryPoint": null,
									"id": 389,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361004b565b600054600280546001600160a01b0319166001600160a01b03909216919091179055655af3107a400060015561009b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61169f806100aa6000396000f3fe6080604052600436106100f85760003560e01c80638da5cb5b116100905780638da5cb5b146102395780639cbd3433146102605780639d76ea58146102735780639e281a9814610293578063a4df0256146102b3578063d908e6ce146102ec578063ddca3f43146102ff578063f2fde38b14610315578063f7260d3e14610335578063f9f95a0f1461035557600080fd5b8063126ccd941461010457806317fc45e2146101265780632fc75eb01461014f5780633aecd0e31461016f57806344b6209d1461018f578063478aa69e146101cf57806367c2a360146101ef578063715018a61461020f5780638b7afe2e1461022457600080fd5b366100ff57005b600080fd5b34801561011057600080fd5b5061012461011f366004611220565b610375565b005b34801561013257600080fd5b5061013c60055481565b6040519081526020015b60405180910390f35b34801561015b57600080fd5b5061012461016a366004611250565b6103a4565b34801561017b57600080fd5b5061013c61018a36600461127c565b6103d2565b34801561019b57600080fd5b506101bf6101aa36600461127c565b60036020526000908152604090205460ff1681565b6040519015158152602001610146565b3480156101db57600080fd5b506101246101ea36600461127c565b61044b565b3480156101fb57600080fd5b5061012461020a36600461127c565b6104e6565b34801561021b57600080fd5b50610124610578565b34801561023057600080fd5b5061013c61058c565b34801561024557600080fd5b506000546001600160a01b03165b60405161014691906112a0565b61012461026e3660046113ec565b61059c565b34801561027f57600080fd5b50600454610253906001600160a01b031681565b34801561029f57600080fd5b506101246102ae366004611250565b610a70565b3480156102bf57600080fd5b506101bf6102ce36600461127c565b6001600160a01b031660009081526003602052604090205460ff1690565b6101246102fa366004611461565b610bb2565b34801561030b57600080fd5b5061013c60015481565b34801561032157600080fd5b5061012461033036600461127c565b611060565b34801561034157600080fd5b50600254610253906001600160a01b031681565b34801561036157600080fd5b506101246103703660046114c4565b6110d9565b61037d611161565b600191909155600280546001600160a01b0319166001600160a01b03909216919091179055565b6103ac611161565b600480546001600160a01b0319166001600160a01b039390931692909217909155600555565b600480546040516370a0823160e01b81526000926001600160a01b03909216916370a0823191610404918691016112a0565b602060405180830381865afa158015610421573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044591906114dd565b92915050565b610453611161565b6001600160a01b03811660009081526003602052604090205460ff1615156001146104c55760405162461bcd60e51b815260206004820152601c60248201527f7573657220697320616c726561647920756e617574686f72697a65640000000060448201526064015b60405180910390fd5b6001600160a01b03166000908152600360205260409020805460ff19169055565b6104ee611161565b6001600160a01b03811660009081526003602052604090205460ff16156105545760405162461bcd60e51b815260206004820152601a6024820152791d5cd95c881a5cc8185b1c9958591e48185d5d1a1bdc9a5e995960321b60448201526064016104bc565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b610580611161565b61058a60006111bb565b565b6000610596611161565b50303190565b6004546001600160a01b03166105c45760405162461bcd60e51b81526004016104bc906114f6565b60016001600160a01b0384163b1515146106115760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd08184818dbdb9d1c9858dd60921b60448201526064016104bc565b80518251146106325760405162461bcd60e51b81526004016104bc90611525565b3360009081526003602052604090205460ff161561072f5760005b815181101561072957836001600160a01b03166323b872dd338584815181106106785761067861154c565b60200260200101518585815181106106925761069261154c565b60200260200101516040518463ffffffff1660e01b81526004016106b893929190611562565b6020604051808303816000875af11580156106d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fb9190611586565b6107175760405162461bcd60e51b81526004016104bc906115a8565b80610721816115ed565b91505061064d565b50505050565b3360009081526003602052604090205460ff16610a6b57600554600480546040516370a0823160e01b81526001600160a01b03909116916370a0823191610778913391016112a0565b602060405180830381865afa158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b991906114dd565b106108b557336000908152600360205260408120805460ff191660011790555b815181101561072957836001600160a01b03166323b872dd338584815181106108045761080461154c565b602002602001015185858151811061081e5761081e61154c565b60200260200101516040518463ffffffff1660e01b815260040161084493929190611562565b6020604051808303816000875af1158015610863573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108879190611586565b6108a35760405162461bcd60e51b81526004016104bc906115a8565b806108ad816115ed565b9150506107d9565b600554600480546040516370a0823160e01b81526001600160a01b03909116916370a08231916108e7913391016112a0565b602060405180830381865afa158015610904573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092891906114dd565b1015610a6b57600154341461094f5760405162461bcd60e51b81526004016104bc90611606565b6002546001546040516001600160a01b039092169181156108fc0291906000818181858888f1935050505015801561098b573d6000803e3d6000fd5b5060005b815181101561072957836001600160a01b03166323b872dd338584815181106109ba576109ba61154c565b60200260200101518585815181106109d4576109d461154c565b60200260200101516040518463ffffffff1660e01b81526004016109fa93929190611562565b6020604051808303816000875af1158015610a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3d9190611586565b610a595760405162461bcd60e51b81526004016104bc906115a8565b80610a63816115ed565b91505061098f565b505050565b610a78611161565b6040516370a0823160e01b815281906001600160a01b038416906370a0823190610aa69030906004016112a0565b602060405180830381865afa158015610ac3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae791906114dd565b1015610b415760405162461bcd60e51b8152602060048201526024808201527f636f6e747261637420646f65736e2774206861766520656e6f75676820746f6b604482015263656e277360e01b60648201526084016104bc565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610b8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b9190611586565b6004546001600160a01b0316610bda5760405162461bcd60e51b81526004016104bc906114f6565b8051825114610bfb5760405162461bcd60e51b81526004016104bc90611525565b6000805b8251811015610c4157828181518110610c1a57610c1a61154c565b602002602001015182610c2d9190611651565b915080610c39816115ed565b915050610bff565b503360009081526003602052604090205460ff1615610d4657803414610cbc5760405162461bcd60e51b815260206004820152602a60248201527f7061792074686520657861637420616d6f756e7420746f20636f76657220646960448201526939ba3934b13aba34b7b760b11b60648201526084016104bc565b60005b835181101561072957838181518110610cda57610cda61154c565b60200260200101516001600160a01b03166108fc848381518110610d0057610d0061154c565b60200260200101519081150290604051600060405180830381858888f19350505050158015610d33573d6000803e3d6000fd5b5080610d3e816115ed565b915050610cbf565b3360009081526003602052604090205460ff16610a6b57600554600480546040516370a0823160e01b81526001600160a01b03909116916370a0823191610d8f913391016112a0565b602060405180830381865afa158015610dac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd091906114dd565b10610ee857336000908152600360205260409020805460ff19166001179055348114610e5e5760405162461bcd60e51b815260206004820152603760248201527f686f6c64696e67207175616e74697479207472756520627574206d73672e76616044820152761b1d59481d5b98d95c9d185a5b881c185e48195e1858dd604a1b60648201526084016104bc565b60005b835181101561072957838181518110610e7c57610e7c61154c565b60200260200101516001600160a01b03166108fc848381518110610ea257610ea261154c565b60200260200101519081150290604051600060405180830381858888f19350505050158015610ed5573d6000803e3d6000fd5b5080610ee0816115ed565b915050610e61565b600554600480546040516370a0823160e01b81526001600160a01b03909116916370a0823191610f1a913391016112a0565b602060405180830381865afa158015610f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5b91906114dd565b1015610a6b57600081600154610f719190611651565b9050803414610f925760405162461bcd60e51b81526004016104bc90611606565b6002546001546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610fce573d6000803e3d6000fd5b5060005b845181101561105957848181518110610fed57610fed61154c565b60200260200101516001600160a01b03166108fc8583815181106110135761101361154c565b60200260200101519081150290604051600060405180830381858888f19350505050158015611046573d6000803e3d6000fd5b5080611051816115ed565b915050610fd2565b5050505050565b611068611161565b6001600160a01b0381166110cd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104bc565b6110d6816111bb565b50565b6110e1611161565b30318111156111305760405162461bcd60e51b815260206004820152601b60248201527a696e76616c69642062616c616e636520746f20776974686472617760281b60448201526064016104bc565b604051339082156108fc029083906000818181858888f1935050505015801561115d573d6000803e3d6000fd5b5050565b6000546001600160a01b0316331461058a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146110d657600080fd5b6000806040838503121561123357600080fd5b8235915060208301356112458161120b565b809150509250929050565b6000806040838503121561126357600080fd5b823561126e8161120b565b946020939093013593505050565b60006020828403121561128e57600080fd5b81356112998161120b565b9392505050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156112f2576112f26112b4565b604052919050565b60006001600160401b03821115611313576113136112b4565b5060051b60200190565b600082601f83011261132e57600080fd5b8135602061134361133e836112fa565b6112ca565b82815260059290921b8401810191818101908684111561136257600080fd5b8286015b848110156113865780356113798161120b565b8352918301918301611366565b509695505050505050565b600082601f8301126113a257600080fd5b813560206113b261133e836112fa565b82815260059290921b840181019181810190868411156113d157600080fd5b8286015b8481101561138657803583529183019183016113d5565b60008060006060848603121561140157600080fd5b833561140c8161120b565b925060208401356001600160401b038082111561142857600080fd5b6114348783880161131d565b9350604086013591508082111561144a57600080fd5b5061145786828701611391565b9150509250925092565b6000806040838503121561147457600080fd5b82356001600160401b038082111561148b57600080fd5b6114978683870161131d565b935060208501359150808211156114ad57600080fd5b506114ba85828601611391565b9150509250929050565b6000602082840312156114d657600080fd5b5035919050565b6000602082840312156114ef57600080fd5b5051919050565b6020808252601590820152741d1bdad95b881a1bdb191a5b99c81a5b9d985b1a59605a1b604082015260600190565b6020808252600d908201526c1a5b9d985b1a59081a5b9c1d5d609a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561159857600080fd5b8151801515811461129957600080fd5b60208082526015908201527432b93937b91034b7103234b9ba3934b13aba34b7b760591b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000600182016115ff576115ff6115d7565b5060010190565b6020808252602b908201527f686f6c64696e67202620617574686f72697a6174696f6e2066616c736520706160408201526a792065786163742066656560a81b606082015260800190565b60008219821115611664576116646115d7565b50019056fea2646970667358221220c5ef9ed6cdb996a81768cde690905a32c50dc4ad66688802dbf57a65234d180664736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x4B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH6 0x5AF3107A4000 PUSH1 0x1 SSTORE PUSH2 0x9B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x169F DUP1 PUSH2 0xAA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x90 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x9CBD3433 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xA4DF0256 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xD908E6CE EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xF7260D3E EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF9F95A0F EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x126CCD94 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x17FC45E2 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x2FC75EB0 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x3AECD0E3 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x44B6209D EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x478AA69E EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x67C2A360 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x8B7AFE2E EQ PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xFF JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x3D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x578 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x58C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x253 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1461 JUMP JUMPDEST PUSH2 0xBB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x1060 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x253 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0x10D9 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH2 0x404 SWAP2 DUP7 SWAP2 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x421 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x453 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7573657220697320616C726561647920756E617574686F72697A656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x1D5CD95C881A5CC8185B1C9958591E48185D5D1A1BDC9A5E9959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x580 PUSH2 0x1161 JUMP JUMPDEST PUSH2 0x58A PUSH1 0x0 PUSH2 0x11BB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 PUSH2 0x1161 JUMP JUMPDEST POP ADDRESS BALANCE SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO ISZERO EQ PUSH2 0x611 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1B9BDD08184818DBDB9D1C9858DD PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BC JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x1525 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x729 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x678 JUMPI PUSH2 0x678 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x692 JUMPI PUSH2 0x692 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x15A8 JUMP JUMPDEST DUP1 PUSH2 0x721 DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0x64D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA6B JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH2 0x778 SWAP2 CALLER SWAP2 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x795 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST LT PUSH2 0x8B5 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x729 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x804 JUMPI PUSH2 0x804 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x81E JUMPI PUSH2 0x81E PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x844 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x863 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x15A8 JUMP JUMPDEST DUP1 PUSH2 0x8AD DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH2 0x8E7 SWAP2 CALLER SWAP2 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST LT ISZERO PUSH2 0xA6B JUMPI PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x98B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x729 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x9BA JUMPI PUSH2 0x9BA PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x9D4 JUMPI PUSH2 0x9D4 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x15A8 JUMP JUMPDEST DUP1 PUSH2 0xA63 DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0x98F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA78 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xAA6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE7 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST LT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x636F6E747261637420646F65736E2774206861766520656E6F75676820746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x656E2773 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x14F6 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xBFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xC41 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC1A JUMPI PUSH2 0xC1A PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0xC2D SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xC39 DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBFF JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD46 JUMPI DUP1 CALLVALUE EQ PUSH2 0xCBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7061792074686520657861637420616D6F756E7420746F20636F766572206469 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39BA3934B13ABA34B7B7 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x729 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCDA JUMPI PUSH2 0xCDA PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD00 JUMPI PUSH2 0xD00 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH2 0xD3E DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCBF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA6B JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH2 0xD8F SWAP2 CALLER SWAP2 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD0 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST LT PUSH2 0xEE8 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLVALUE DUP2 EQ PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686F6C64696E67207175616E74697479207472756520627574206D73672E7661 PUSH1 0x44 DUP3 ADD MSTORE PUSH23 0x1B1D59481D5B98D95C9D185A5B881C185E48195E1858DD PUSH1 0x4A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x729 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xE7C JUMPI PUSH2 0xE7C PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xEA2 JUMPI PUSH2 0xEA2 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xED5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH2 0xEE0 DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH2 0xF1A SWAP2 CALLER SWAP2 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5B SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST LT ISZERO PUSH2 0xA6B JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0xF71 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0xF92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1059 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xFED JUMPI PUSH2 0xFED PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1013 JUMPI PUSH2 0x1013 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1046 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH2 0x1051 DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFD2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1068 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x10D6 DUP2 PUSH2 0x11BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x10E1 PUSH2 0x1161 JUMP JUMPDEST ADDRESS BALANCE DUP2 GT ISZERO PUSH2 0x1130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x696E76616C69642062616C616E636520746F207769746864726177 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x115D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1245 DUP2 PUSH2 0x120B JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x120B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x128E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1299 DUP2 PUSH2 0x120B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12F2 JUMPI PUSH2 0x12F2 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1313 JUMPI PUSH2 0x1313 PUSH2 0x12B4 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x132E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1343 PUSH2 0x133E DUP4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x12CA JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1386 JUMPI DUP1 CALLDATALOAD PUSH2 0x1379 DUP2 PUSH2 0x120B JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1366 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x13B2 PUSH2 0x133E DUP4 PUSH2 0x12FA JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x13D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1386 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x140C DUP2 PUSH2 0x120B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1434 DUP8 DUP4 DUP9 ADD PUSH2 0x131D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x144A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1457 DUP7 DUP3 DUP8 ADD PUSH2 0x1391 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x148B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1497 DUP7 DUP4 DUP8 ADD PUSH2 0x131D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14BA DUP6 DUP3 DUP7 ADD PUSH2 0x1391 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x1D1BDAD95B881A1BDB191A5B99C81A5B9D985B1A59 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x1A5B9D985B1A59081A5B9C1D5D PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x32B93937B91034B7103234B9BA3934B13ABA34B7B7 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x15FF JUMPI PUSH2 0x15FF PUSH2 0x15D7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x686F6C64696E67202620617574686F72697A6174696F6E2066616C7365207061 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x7920657861637420666565 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1664 JUMPI PUSH2 0x1664 PUSH2 0x15D7 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xEF SWAP15 0xD6 0xCD 0xB9 SWAP7 0xA8 OR PUSH9 0xCDE690905A32C50DC4 0xAD PUSH7 0x688802DBF57A65 0x23 0x4D XOR MOD PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "15991:6912:0:-:0;;;16382:84;;;;;;;;;-1:-1:-1;11180:32:0;10127:10;11180:18;:32::i;:::-;11491:7;11517:6;16406:8;:27;;-1:-1:-1;;;;;;16406:27:0;-1:-1:-1;;;;;11517:6:0;;;16406:27;;;;;;16449:10;-1:-1:-1;16443:16:0;15991:6912;;12670:187;12743:16;12762:6;;-1:-1:-1;;;;;12778:17:0;;;-1:-1:-1;;;;;;12778:17:0;;;;;;12810:40;;12762:6;;;;;;;12810:40;;12743:16;12810:40;12733:124;12670:187;:::o;15991:6912::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SetTokenToholdAndQuantity_1059": {
									"entryPoint": 932,
									"id": 1059,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@TOKENmultisender_961": {
									"entryPoint": 1436,
									"id": 961,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_1137": {
									"entryPoint": null,
									"id": 1137,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_403": {
									"entryPoint": 4449,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_340": {
									"entryPoint": null,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_460": {
									"entryPoint": 4539,
									"id": 460,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorizeUser_1005": {
									"entryPoint": 1254,
									"id": 1005,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorizedusers_552": {
									"entryPoint": null,
									"id": 552,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@coinMultisender_787": {
									"entryPoint": 2994,
									"id": 787,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@contractBalance_1133": {
									"entryPoint": 1420,
									"id": 1133,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fee_546": {
									"entryPoint": null,
									"id": 546,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getTokenBalance_1150": {
									"entryPoint": 978,
									"id": 1150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_389": {
									"entryPoint": null,
									"id": 389,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@quantity_557": {
									"entryPoint": null,
									"id": 557,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@readAuthorizedUsers_1040": {
									"entryPoint": null,
									"id": 1040,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@receiver_548": {
									"entryPoint": null,
									"id": 548,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_417": {
									"entryPoint": 1400,
									"id": 417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setfeeToUse_982": {
									"entryPoint": 885,
									"id": 982,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@tokenAddress_555": {
									"entryPoint": null,
									"id": 555,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_440": {
									"entryPoint": 4192,
									"id": 440,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unauthorizeUser_1028": {
									"entryPoint": 1099,
									"id": 1028,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawCoins_1087": {
									"entryPoint": 4313,
									"id": 1087,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawToken_1119": {
									"entryPoint": 2672,
									"id": 1119,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 4893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 5009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$538t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_contract$_IERC20_$538t_uint256": {
									"entryPoint": 4688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 4640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$538__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_137df310803ee84d23f123870fcea3fa051f1a17a2a89c034789caae5279ebf8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2832899018d9da418848985d975d1ba29b8679d90938e7cd751a28e43f0189d1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5221fdcb7445ee7f562476d696ae220376f6a7b9504b31f06f66a7e5b67c32df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_82c10e93bbd13b0460ce791b951fa263cf5be7ed8aed4ea34092e6ae7ad4208c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9a6cc60d48549f2b79fa7c56847ec072da3ccce4bd39fca877825249a1e26989__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a47627c35bdac8e1d8ad9b73cf460ba55e95f357cb07512a4d4f9e03fc865e3a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b8ef2cda135cfd4aa6c55296dd494fc35754a3e48990a617951944e75b24e69a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c36446f4599a87e50828defd8186412ad178b5ee72b5620562535da019b5382c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c81a16bce43cf1e488ba306b4f2d44785440e9bb736dbcc9777b0fe5af654cdb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dbab81719f15ade78f76dcdbf7cff531fc5f9822fe7e8466ffdd2feb23510f3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ead087751ee72390abf94c065c146a7a9dbeacfb318a2e1d7864a935edc603fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 4619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12164:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:1"
															},
															"nodeType": "YulIf",
															"src": "69:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "283:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "292:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "295:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "285:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "285:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "285:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "258:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "267:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "254:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "279:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "250:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:32:1"
															},
															"nodeType": "YulIf",
															"src": "247:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "308:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "331:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "318:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "308:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "350:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "391:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "376:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "363:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "363:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "354:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "429:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "404:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "404:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "404:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "444:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "454:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "444:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "195:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "206:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "218:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "150:315:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "571:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "581:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "581:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "623:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "634:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "616:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "540:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "551:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "562:4:1",
														"type": ""
													}
												],
												"src": "470:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "753:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "799:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "808:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "811:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "801:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "801:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "801:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "774:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "783:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "795:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "766:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:32:1"
															},
															"nodeType": "YulIf",
															"src": "763:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "824:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "850:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "837:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "828:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "894:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "869:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "869:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "909:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "919:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "933:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "960:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "971:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "943:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "933:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$538t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "711:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "722:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "734:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "742:6:1",
														"type": ""
													}
												],
												"src": "652:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1056:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1102:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1111:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1114:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1104:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1104:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1104:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1077:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1086:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1073:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1073:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1098:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1069:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1069:32:1"
															},
															"nodeType": "YulIf",
															"src": "1066:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1127:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1153:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1140:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1131:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1197:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1172:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1172:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1222:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1022:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1033:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1045:6:1",
														"type": ""
													}
												],
												"src": "986:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1333:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1343:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1355:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1366:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1343:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1385:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1410:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1403:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1403:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1396:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1396:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1378:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1378:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1302:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1313:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1324:4:1",
														"type": ""
													}
												],
												"src": "1238:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1541:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1553:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1564:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1549:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1549:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1541:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1583:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1614:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1619:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1610:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1610:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1623:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1606:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1606:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1594:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1576:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1576:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1500:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1511:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1522:4:1",
														"type": ""
													}
												],
												"src": "1430:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1670:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1699:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1690:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1680:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1680:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1727:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1730:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1720:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1720:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1751:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1754:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1744:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1744:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1638:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1815:230:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1825:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1835:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1835:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1825:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1853:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1875:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "1891:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1897:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1887:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1887:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1906:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1902:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1902:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1883:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1883:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1871:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1857:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1986:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1988:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1988:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1929:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1941:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1926:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1926:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1965:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1977:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1962:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1923:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1923:62:1"
															},
															"nodeType": "YulIf",
															"src": "1920:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2024:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2028:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2017:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2017:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2017:22:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1795:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1804:6:1",
														"type": ""
													}
												],
												"src": "1770:275:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2119:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2163:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2165:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2165:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2165:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2135:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2143:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2132:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2132:30:1"
															},
															"nodeType": "YulIf",
															"src": "2129:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2194:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2210:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2213:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2206:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2222:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2202:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2202:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2194:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2099:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2110:4:1",
														"type": ""
													}
												],
												"src": "2050:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2302:673:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2351:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2360:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2363:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2353:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2353:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2353:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2330:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2338:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2326:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2326:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2345:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:35:1"
															},
															"nodeType": "YulIf",
															"src": "2312:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2376:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2399:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2386:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2386:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2380:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2415:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2425:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2419:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2438:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2505:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "2465:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2465:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2449:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2442:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2518:16:1",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "2531:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "2522:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2550:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2555:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2543:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2567:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2578:3:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2583:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2574:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2574:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2567:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2595:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2617:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2629:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2632:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2625:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2625:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2613:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2613:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2638:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2609:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2609:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2599:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2669:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2678:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2681:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2671:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2671:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2671:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2656:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2664:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2653:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:15:1"
															},
															"nodeType": "YulIf",
															"src": "2650:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2694:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2709:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2717:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2705:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2698:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2785:161:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2799:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2825:3:1"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "2812:12:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2812:17:1"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "2803:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "2867:5:1"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "2842:24:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2842:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2842:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2893:3:1"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "2898:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2886:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2886:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2886:18:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2917:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2928:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2933:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2924:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2924:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2917:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2740:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2745:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2737:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2737:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2753:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2755:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2766:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2771:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2762:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2762:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2755:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2733:3:1",
																"statements": []
															},
															"src": "2729:217:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2955:14:1",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "2964:5:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2955:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2276:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2284:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2292:5:1",
														"type": ""
													}
												],
												"src": "2238:737:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3044:598:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3093:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3102:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3095:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3095:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3095:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3072:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3080:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3068:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3068:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3087:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3064:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3064:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3057:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3057:35:1"
															},
															"nodeType": "YulIf",
															"src": "3054:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3118:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3141:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3128:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3122:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3157:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3167:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3161:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3180:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3247:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "3207:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3207:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3191:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3191:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3184:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3260:16:1",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "3273:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "3264:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3292:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3297:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3285:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3285:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3285:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3309:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3320:3:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3325:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3316:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3309:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3337:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3359:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3371:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3374:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3367:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3367:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3355:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3380:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3351:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3351:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3341:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3411:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3420:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3423:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3413:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3413:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3413:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3398:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3406:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3395:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3395:15:1"
															},
															"nodeType": "YulIf",
															"src": "3392:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3436:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3451:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3459:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3447:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3440:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3527:86:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3548:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3566:3:1"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3553:12:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3553:17:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3541:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3541:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3541:30:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3584:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3595:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3600:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3591:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3591:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3584:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3482:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3487:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3479:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3479:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3495:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3497:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3508:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3513:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3504:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3504:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3497:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3475:3:1",
																"statements": []
															},
															"src": "3471:142:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3622:14:1",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "3631:5:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3622:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3018:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3026:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3034:5:1",
														"type": ""
													}
												],
												"src": "2980:662:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3815:576:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3861:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3870:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3873:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3863:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3863:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3863:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3836:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3845:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3832:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3857:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3828:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:32:1"
															},
															"nodeType": "YulIf",
															"src": "3825:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3886:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3912:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3899:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3899:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3890:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3956:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3931:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3931:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3931:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3971:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3981:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3995:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4026:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4037:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4022:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4022:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4009:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4009:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3999:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4050:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4060:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4054:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4105:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4114:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4117:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4107:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4107:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4107:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4093:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4101:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4090:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4090:14:1"
															},
															"nodeType": "YulIf",
															"src": "4087:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4130:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4184:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4169:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4193:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4140:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4140:61:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4130:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4210:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4243:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4254:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4239:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4226:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4214:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4287:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4296:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4299:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4289:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4289:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4289:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4273:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4283:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4270:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4270:16:1"
															},
															"nodeType": "YulIf",
															"src": "4267:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4312:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4355:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4366:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4351:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4377:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4322:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4322:63:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4312:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$538t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3765:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3776:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3788:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3796:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3804:6:1",
														"type": ""
													}
												],
												"src": "3647:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4511:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4521:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4533:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4544:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4529:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4529:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4521:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4563:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4578:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4594:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4599:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4590:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4590:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4603:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4586:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4586:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4574:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4574:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4556:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4556:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$538__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4480:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4491:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4502:4:1",
														"type": ""
													}
												],
												"src": "4396:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4755:458:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4801:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4810:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4813:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4803:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4803:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4803:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4776:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4785:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4772:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4797:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4768:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4768:32:1"
															},
															"nodeType": "YulIf",
															"src": "4765:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4826:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4853:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4840:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4830:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4872:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4882:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4876:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4915:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4923:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4912:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4912:14:1"
															},
															"nodeType": "YulIf",
															"src": "4909:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4952:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4995:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5006:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4991:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4991:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5015:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4962:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4962:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4952:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5032:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5065:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5076:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5061:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5061:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5048:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5048:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5036:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5109:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5118:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5121:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5111:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5111:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5111:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5095:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5105:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5092:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:16:1"
															},
															"nodeType": "YulIf",
															"src": "5089:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5134:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5188:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5173:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5173:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5199:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5144:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5144:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5134:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4713:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4724:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4736:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4744:6:1",
														"type": ""
													}
												],
												"src": "4618:595:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5345:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5357:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5368:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5353:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5345:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5387:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5402:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5418:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5423:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5414:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5414:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5427:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5410:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5410:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5398:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5380:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5304:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5315:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5326:4:1",
														"type": ""
													}
												],
												"src": "5218:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5512:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5558:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5567:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5570:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5560:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5560:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5560:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5533:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5542:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5529:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5525:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5525:32:1"
															},
															"nodeType": "YulIf",
															"src": "5522:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5583:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5606:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5593:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5583:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5478:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5489:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5501:6:1",
														"type": ""
													}
												],
												"src": "5442:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5708:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5754:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5763:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5766:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5756:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5756:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5756:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5729:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5738:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5725:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5750:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5721:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5721:32:1"
															},
															"nodeType": "YulIf",
															"src": "5718:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5779:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5795:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5789:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5789:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5779:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5674:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5685:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5697:6:1",
														"type": ""
													}
												],
												"src": "5627:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5990:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6007:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6018:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6000:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6000:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6041:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6052:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6037:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6037:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6057:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6030:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6030:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6030:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6080:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6091:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6076:18:1"
																	},
																	{
																		"hexValue": "7573657220697320616c726561647920756e617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6096:30:1",
																		"type": "",
																		"value": "user is already unauthorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6069:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6069:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6069:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6136:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6148:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6159:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6144:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6144:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6136:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a47627c35bdac8e1d8ad9b73cf460ba55e95f357cb07512a4d4f9e03fc865e3a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5967:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5981:4:1",
														"type": ""
													}
												],
												"src": "5816:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6347:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6364:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6375:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6357:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6357:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6398:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6409:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6394:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6414:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6387:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6387:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6437:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6448:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6433:18:1"
																	},
																	{
																		"hexValue": "7573657220697320616c726561647920617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6453:28:1",
																		"type": "",
																		"value": "user is already authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6426:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6426:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6491:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6503:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6499:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5221fdcb7445ee7f562476d696ae220376f6a7b9504b31f06f66a7e5b67c32df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6324:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6338:4:1",
														"type": ""
													}
												],
												"src": "6173:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6702:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6719:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6730:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6712:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6712:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6753:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6764:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6749:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6749:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6769:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6742:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6742:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6742:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6792:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6803:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6788:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6788:18:1"
																	},
																	{
																		"hexValue": "746f6b656e20686f6c64696e6720696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6808:23:1",
																		"type": "",
																		"value": "token holding invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6781:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6781:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6781:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6841:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6853:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6864:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6849:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6849:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6841:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a6cc60d48549f2b79fa7c56847ec072da3ccce4bd39fca877825249a1e26989__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6679:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6693:4:1",
														"type": ""
													}
												],
												"src": "6528:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7052:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7069:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7080:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7062:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7062:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7062:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7103:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7114:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7099:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7119:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7092:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7092:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7142:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7153:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7138:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7138:18:1"
																	},
																	{
																		"hexValue": "6e6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7158:16:1",
																		"type": "",
																		"value": "not a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7131:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7131:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7184:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7196:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7207:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7192:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7192:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7184:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2832899018d9da418848985d975d1ba29b8679d90938e7cd751a28e43f0189d1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7029:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7043:4:1",
														"type": ""
													}
												],
												"src": "6878:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7395:163:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7412:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7423:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7405:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7405:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7405:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7446:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7457:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7442:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7442:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7462:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7435:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7435:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7435:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7485:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7496:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7481:18:1"
																	},
																	{
																		"hexValue": "696e76616c696420696e707574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7501:15:1",
																		"type": "",
																		"value": "invalid input"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7474:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7526:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7538:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7549:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7534:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7534:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7526:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dbab81719f15ade78f76dcdbf7cff531fc5f9822fe7e8466ffdd2feb23510f3b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7372:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7386:4:1",
														"type": ""
													}
												],
												"src": "7221:337:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7595:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7612:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7619:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7624:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7605:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7605:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7652:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7655:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7645:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7645:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7676:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7679:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7669:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7669:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7669:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7563:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7852:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7862:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7874:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7885:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7870:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7870:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7862:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7897:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7915:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7920:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7911:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7911:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7924:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7907:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7907:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7901:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7942:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7957:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7965:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7953:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7935:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7935:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7935:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7989:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8000:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7985:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8009:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8017:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8005:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8005:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7978:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7978:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7978:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8041:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8052:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8037:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8037:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8057:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8030:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8030:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7805:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7816:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7824:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7832:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7843:4:1",
														"type": ""
													}
												],
												"src": "7695:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8153:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8199:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8208:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8211:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8201:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8201:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8201:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8174:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8183:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8170:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8170:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8195:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8166:32:1"
															},
															"nodeType": "YulIf",
															"src": "8163:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8224:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8243:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8237:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8237:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8228:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8306:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8315:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8318:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8308:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8308:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8308:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8275:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "8296:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "8289:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8289:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8282:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8282:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8272:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8272:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8265:40:1"
															},
															"nodeType": "YulIf",
															"src": "8262:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8331:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8341:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8331:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8119:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8130:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8142:6:1",
														"type": ""
													}
												],
												"src": "8075:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8531:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8548:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8559:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8541:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8541:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8582:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8593:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8578:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8598:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8571:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8571:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8571:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8621:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8632:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8617:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8617:18:1"
																	},
																	{
																		"hexValue": "6572726f7220696e20646973747269627574696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8637:23:1",
																		"type": "",
																		"value": "error in distribution"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8610:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8610:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8670:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8682:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8693:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8678:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8678:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8670:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b8ef2cda135cfd4aa6c55296dd494fc35754a3e48990a617951944e75b24e69a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8508:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8522:4:1",
														"type": ""
													}
												],
												"src": "8357:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8739:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8756:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8763:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8768:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8759:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8759:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8749:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8749:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8749:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8796:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8799:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8789:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8789:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8789:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8820:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8823:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8813:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8813:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8813:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8707:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8886:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8917:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8919:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8919:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8919:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8902:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8913:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8909:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8899:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8899:17:1"
															},
															"nodeType": "YulIf",
															"src": "8896:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8948:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8959:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8966:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8955:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8955:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8948:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8868:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8878:3:1",
														"type": ""
													}
												],
												"src": "8839:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9153:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9163:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9163:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9163:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9204:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9215:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9200:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9220:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9193:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9193:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9243:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9254:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9239:18:1"
																	},
																	{
																		"hexValue": "686f6c64696e67202620617574686f72697a6174696f6e2066616c7365207061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9259:34:1",
																		"type": "",
																		"value": "holding & authorization false pa"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9232:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9232:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9314:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9325:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9310:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9310:18:1"
																	},
																	{
																		"hexValue": "7920657861637420666565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9330:13:1",
																		"type": "",
																		"value": "y exact fee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9303:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9303:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9303:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9353:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9365:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9376:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9361:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9361:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9353:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_137df310803ee84d23f123870fcea3fa051f1a17a2a89c034789caae5279ebf8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9130:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9144:4:1",
														"type": ""
													}
												],
												"src": "8979:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9565:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9582:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9593:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9575:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9575:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9575:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9616:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9627:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9612:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9612:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9632:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9605:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9605:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9605:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9655:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9666:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9651:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9651:18:1"
																	},
																	{
																		"hexValue": "636f6e747261637420646f65736e2774206861766520656e6f75676820746f6b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9671:34:1",
																		"type": "",
																		"value": "contract doesn't have enough tok"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9644:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9644:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9644:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9726:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9737:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9722:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9722:18:1"
																	},
																	{
																		"hexValue": "656e2773",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9742:6:1",
																		"type": "",
																		"value": "en's"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9715:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9715:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9715:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9758:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9770:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9781:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9766:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9766:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9758:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_82c10e93bbd13b0460ce791b951fa263cf5be7ed8aed4ea34092e6ae7ad4208c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9542:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9556:4:1",
														"type": ""
													}
												],
												"src": "9391:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9925:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9935:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9947:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9958:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9943:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9943:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9935:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9977:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9992:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10008:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10013:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10004:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10004:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10017:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10000:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10000:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9988:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9970:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9970:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10041:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10052:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10037:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10037:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10057:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10030:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10030:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10030:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9886:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9897:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9905:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9916:4:1",
														"type": ""
													}
												],
												"src": "9796:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10123:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10150:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10152:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10152:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10152:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10139:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10146:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10142:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10142:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10136:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10136:13:1"
															},
															"nodeType": "YulIf",
															"src": "10133:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10181:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10192:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10195:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10188:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10188:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10181:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10106:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10109:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10115:3:1",
														"type": ""
													}
												],
												"src": "10075:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10382:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10399:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10410:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10392:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10392:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10392:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10433:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10444:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10429:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10429:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10449:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10422:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10422:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10422:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10472:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10483:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10468:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10468:18:1"
																	},
																	{
																		"hexValue": "7061792074686520657861637420616d6f756e7420746f20636f766572206469",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10488:34:1",
																		"type": "",
																		"value": "pay the exact amount to cover di"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10461:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10461:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10461:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10543:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10554:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10539:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10539:18:1"
																	},
																	{
																		"hexValue": "73747269627574696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10559:12:1",
																		"type": "",
																		"value": "stribution"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10532:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10532:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10532:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10581:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10604:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10589:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10581:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c36446f4599a87e50828defd8186412ad178b5ee72b5620562535da019b5382c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10359:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10373:4:1",
														"type": ""
													}
												],
												"src": "10208:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10793:245:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10810:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10821:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10803:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10803:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10803:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10844:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10855:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10840:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10860:2:1",
																		"type": "",
																		"value": "55"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10833:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10833:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10833:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10883:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10894:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10879:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10879:18:1"
																	},
																	{
																		"hexValue": "686f6c64696e67207175616e74697479207472756520627574206d73672e7661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10899:34:1",
																		"type": "",
																		"value": "holding quantity true but msg.va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10872:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10872:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10872:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10954:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10965:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10950:18:1"
																	},
																	{
																		"hexValue": "6c756520756e6365727461696e20706179206578616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10970:25:1",
																		"type": "",
																		"value": "lue uncertain pay exact"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10943:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10943:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11005:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11017:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11028:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11013:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11013:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11005:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ead087751ee72390abf94c065c146a7a9dbeacfb318a2e1d7864a935edc603fc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10770:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10784:4:1",
														"type": ""
													}
												],
												"src": "10619:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11217:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11234:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11245:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11227:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11227:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11227:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11268:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11279:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11264:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11264:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11284:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11257:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11257:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11257:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11307:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11318:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11303:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11303:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11323:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11296:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11296:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11378:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11389:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11374:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11374:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11394:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11367:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11367:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11367:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11412:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11424:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11435:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11420:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11420:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11412:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11194:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11208:4:1",
														"type": ""
													}
												],
												"src": "11043:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11624:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11641:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11652:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11634:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11634:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11675:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11686:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11671:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11671:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11691:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11664:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11664:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11664:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11714:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11725:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11710:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11710:18:1"
																	},
																	{
																		"hexValue": "696e76616c69642062616c616e636520746f207769746864726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11730:29:1",
																		"type": "",
																		"value": "invalid balance to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11703:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11703:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11769:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11781:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11792:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11777:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11777:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11769:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c81a16bce43cf1e488ba306b4f2d44785440e9bb736dbcc9777b0fe5af654cdb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11601:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11615:4:1",
														"type": ""
													}
												],
												"src": "11450:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11980:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11997:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12008:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11990:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11990:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11990:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12031:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12042:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12027:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12047:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12020:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12020:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12070:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12081:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12066:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12066:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12086:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12059:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12059:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12059:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12130:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12142:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12153:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12138:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12138:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12130:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11957:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11971:4:1",
														"type": ""
													}
												],
												"src": "11806:356:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$538t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$538t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$538__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_a47627c35bdac8e1d8ad9b73cf460ba55e95f357cb07512a4d4f9e03fc865e3a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"user is already unauthorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5221fdcb7445ee7f562476d696ae220376f6a7b9504b31f06f66a7e5b67c32df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"user is already authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9a6cc60d48549f2b79fa7c56847ec072da3ccce4bd39fca877825249a1e26989__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"token holding invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2832899018d9da418848985d975d1ba29b8679d90938e7cd751a28e43f0189d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"not a contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dbab81719f15ade78f76dcdbf7cff531fc5f9822fe7e8466ffdd2feb23510f3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"invalid input\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_b8ef2cda135cfd4aa6c55296dd494fc35754a3e48990a617951944e75b24e69a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"error in distribution\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_137df310803ee84d23f123870fcea3fa051f1a17a2a89c034789caae5279ebf8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"holding & authorization false pa\")\n        mstore(add(headStart, 96), \"y exact fee\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_82c10e93bbd13b0460ce791b951fa263cf5be7ed8aed4ea34092e6ae7ad4208c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"contract doesn't have enough tok\")\n        mstore(add(headStart, 96), \"en's\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_c36446f4599a87e50828defd8186412ad178b5ee72b5620562535da019b5382c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"pay the exact amount to cover di\")\n        mstore(add(headStart, 96), \"stribution\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ead087751ee72390abf94c065c146a7a9dbeacfb318a2e1d7864a935edc603fc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"holding quantity true but msg.va\")\n        mstore(add(headStart, 96), \"lue uncertain pay exact\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c81a16bce43cf1e488ba306b4f2d44785440e9bb736dbcc9777b0fe5af654cdb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"invalid balance to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f85760003560e01c80638da5cb5b116100905780638da5cb5b146102395780639cbd3433146102605780639d76ea58146102735780639e281a9814610293578063a4df0256146102b3578063d908e6ce146102ec578063ddca3f43146102ff578063f2fde38b14610315578063f7260d3e14610335578063f9f95a0f1461035557600080fd5b8063126ccd941461010457806317fc45e2146101265780632fc75eb01461014f5780633aecd0e31461016f57806344b6209d1461018f578063478aa69e146101cf57806367c2a360146101ef578063715018a61461020f5780638b7afe2e1461022457600080fd5b366100ff57005b600080fd5b34801561011057600080fd5b5061012461011f366004611220565b610375565b005b34801561013257600080fd5b5061013c60055481565b6040519081526020015b60405180910390f35b34801561015b57600080fd5b5061012461016a366004611250565b6103a4565b34801561017b57600080fd5b5061013c61018a36600461127c565b6103d2565b34801561019b57600080fd5b506101bf6101aa36600461127c565b60036020526000908152604090205460ff1681565b6040519015158152602001610146565b3480156101db57600080fd5b506101246101ea36600461127c565b61044b565b3480156101fb57600080fd5b5061012461020a36600461127c565b6104e6565b34801561021b57600080fd5b50610124610578565b34801561023057600080fd5b5061013c61058c565b34801561024557600080fd5b506000546001600160a01b03165b60405161014691906112a0565b61012461026e3660046113ec565b61059c565b34801561027f57600080fd5b50600454610253906001600160a01b031681565b34801561029f57600080fd5b506101246102ae366004611250565b610a70565b3480156102bf57600080fd5b506101bf6102ce36600461127c565b6001600160a01b031660009081526003602052604090205460ff1690565b6101246102fa366004611461565b610bb2565b34801561030b57600080fd5b5061013c60015481565b34801561032157600080fd5b5061012461033036600461127c565b611060565b34801561034157600080fd5b50600254610253906001600160a01b031681565b34801561036157600080fd5b506101246103703660046114c4565b6110d9565b61037d611161565b600191909155600280546001600160a01b0319166001600160a01b03909216919091179055565b6103ac611161565b600480546001600160a01b0319166001600160a01b039390931692909217909155600555565b600480546040516370a0823160e01b81526000926001600160a01b03909216916370a0823191610404918691016112a0565b602060405180830381865afa158015610421573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044591906114dd565b92915050565b610453611161565b6001600160a01b03811660009081526003602052604090205460ff1615156001146104c55760405162461bcd60e51b815260206004820152601c60248201527f7573657220697320616c726561647920756e617574686f72697a65640000000060448201526064015b60405180910390fd5b6001600160a01b03166000908152600360205260409020805460ff19169055565b6104ee611161565b6001600160a01b03811660009081526003602052604090205460ff16156105545760405162461bcd60e51b815260206004820152601a6024820152791d5cd95c881a5cc8185b1c9958591e48185d5d1a1bdc9a5e995960321b60448201526064016104bc565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b610580611161565b61058a60006111bb565b565b6000610596611161565b50303190565b6004546001600160a01b03166105c45760405162461bcd60e51b81526004016104bc906114f6565b60016001600160a01b0384163b1515146106115760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd08184818dbdb9d1c9858dd60921b60448201526064016104bc565b80518251146106325760405162461bcd60e51b81526004016104bc90611525565b3360009081526003602052604090205460ff161561072f5760005b815181101561072957836001600160a01b03166323b872dd338584815181106106785761067861154c565b60200260200101518585815181106106925761069261154c565b60200260200101516040518463ffffffff1660e01b81526004016106b893929190611562565b6020604051808303816000875af11580156106d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fb9190611586565b6107175760405162461bcd60e51b81526004016104bc906115a8565b80610721816115ed565b91505061064d565b50505050565b3360009081526003602052604090205460ff16610a6b57600554600480546040516370a0823160e01b81526001600160a01b03909116916370a0823191610778913391016112a0565b602060405180830381865afa158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b991906114dd565b106108b557336000908152600360205260408120805460ff191660011790555b815181101561072957836001600160a01b03166323b872dd338584815181106108045761080461154c565b602002602001015185858151811061081e5761081e61154c565b60200260200101516040518463ffffffff1660e01b815260040161084493929190611562565b6020604051808303816000875af1158015610863573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108879190611586565b6108a35760405162461bcd60e51b81526004016104bc906115a8565b806108ad816115ed565b9150506107d9565b600554600480546040516370a0823160e01b81526001600160a01b03909116916370a08231916108e7913391016112a0565b602060405180830381865afa158015610904573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092891906114dd565b1015610a6b57600154341461094f5760405162461bcd60e51b81526004016104bc90611606565b6002546001546040516001600160a01b039092169181156108fc0291906000818181858888f1935050505015801561098b573d6000803e3d6000fd5b5060005b815181101561072957836001600160a01b03166323b872dd338584815181106109ba576109ba61154c565b60200260200101518585815181106109d4576109d461154c565b60200260200101516040518463ffffffff1660e01b81526004016109fa93929190611562565b6020604051808303816000875af1158015610a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3d9190611586565b610a595760405162461bcd60e51b81526004016104bc906115a8565b80610a63816115ed565b91505061098f565b505050565b610a78611161565b6040516370a0823160e01b815281906001600160a01b038416906370a0823190610aa69030906004016112a0565b602060405180830381865afa158015610ac3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae791906114dd565b1015610b415760405162461bcd60e51b8152602060048201526024808201527f636f6e747261637420646f65736e2774206861766520656e6f75676820746f6b604482015263656e277360e01b60648201526084016104bc565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610b8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b9190611586565b6004546001600160a01b0316610bda5760405162461bcd60e51b81526004016104bc906114f6565b8051825114610bfb5760405162461bcd60e51b81526004016104bc90611525565b6000805b8251811015610c4157828181518110610c1a57610c1a61154c565b602002602001015182610c2d9190611651565b915080610c39816115ed565b915050610bff565b503360009081526003602052604090205460ff1615610d4657803414610cbc5760405162461bcd60e51b815260206004820152602a60248201527f7061792074686520657861637420616d6f756e7420746f20636f76657220646960448201526939ba3934b13aba34b7b760b11b60648201526084016104bc565b60005b835181101561072957838181518110610cda57610cda61154c565b60200260200101516001600160a01b03166108fc848381518110610d0057610d0061154c565b60200260200101519081150290604051600060405180830381858888f19350505050158015610d33573d6000803e3d6000fd5b5080610d3e816115ed565b915050610cbf565b3360009081526003602052604090205460ff16610a6b57600554600480546040516370a0823160e01b81526001600160a01b03909116916370a0823191610d8f913391016112a0565b602060405180830381865afa158015610dac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd091906114dd565b10610ee857336000908152600360205260409020805460ff19166001179055348114610e5e5760405162461bcd60e51b815260206004820152603760248201527f686f6c64696e67207175616e74697479207472756520627574206d73672e76616044820152761b1d59481d5b98d95c9d185a5b881c185e48195e1858dd604a1b60648201526084016104bc565b60005b835181101561072957838181518110610e7c57610e7c61154c565b60200260200101516001600160a01b03166108fc848381518110610ea257610ea261154c565b60200260200101519081150290604051600060405180830381858888f19350505050158015610ed5573d6000803e3d6000fd5b5080610ee0816115ed565b915050610e61565b600554600480546040516370a0823160e01b81526001600160a01b03909116916370a0823191610f1a913391016112a0565b602060405180830381865afa158015610f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5b91906114dd565b1015610a6b57600081600154610f719190611651565b9050803414610f925760405162461bcd60e51b81526004016104bc90611606565b6002546001546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610fce573d6000803e3d6000fd5b5060005b845181101561105957848181518110610fed57610fed61154c565b60200260200101516001600160a01b03166108fc8583815181106110135761101361154c565b60200260200101519081150290604051600060405180830381858888f19350505050158015611046573d6000803e3d6000fd5b5080611051816115ed565b915050610fd2565b5050505050565b611068611161565b6001600160a01b0381166110cd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104bc565b6110d6816111bb565b50565b6110e1611161565b30318111156111305760405162461bcd60e51b815260206004820152601b60248201527a696e76616c69642062616c616e636520746f20776974686472617760281b60448201526064016104bc565b604051339082156108fc029083906000818181858888f1935050505015801561115d573d6000803e3d6000fd5b5050565b6000546001600160a01b0316331461058a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146110d657600080fd5b6000806040838503121561123357600080fd5b8235915060208301356112458161120b565b809150509250929050565b6000806040838503121561126357600080fd5b823561126e8161120b565b946020939093013593505050565b60006020828403121561128e57600080fd5b81356112998161120b565b9392505050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156112f2576112f26112b4565b604052919050565b60006001600160401b03821115611313576113136112b4565b5060051b60200190565b600082601f83011261132e57600080fd5b8135602061134361133e836112fa565b6112ca565b82815260059290921b8401810191818101908684111561136257600080fd5b8286015b848110156113865780356113798161120b565b8352918301918301611366565b509695505050505050565b600082601f8301126113a257600080fd5b813560206113b261133e836112fa565b82815260059290921b840181019181810190868411156113d157600080fd5b8286015b8481101561138657803583529183019183016113d5565b60008060006060848603121561140157600080fd5b833561140c8161120b565b925060208401356001600160401b038082111561142857600080fd5b6114348783880161131d565b9350604086013591508082111561144a57600080fd5b5061145786828701611391565b9150509250925092565b6000806040838503121561147457600080fd5b82356001600160401b038082111561148b57600080fd5b6114978683870161131d565b935060208501359150808211156114ad57600080fd5b506114ba85828601611391565b9150509250929050565b6000602082840312156114d657600080fd5b5035919050565b6000602082840312156114ef57600080fd5b5051919050565b6020808252601590820152741d1bdad95b881a1bdb191a5b99c81a5b9d985b1a59605a1b604082015260600190565b6020808252600d908201526c1a5b9d985b1a59081a5b9c1d5d609a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561159857600080fd5b8151801515811461129957600080fd5b60208082526015908201527432b93937b91034b7103234b9ba3934b13aba34b7b760591b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000600182016115ff576115ff6115d7565b5060010190565b6020808252602b908201527f686f6c64696e67202620617574686f72697a6174696f6e2066616c736520706160408201526a792065786163742066656560a81b606082015260800190565b60008219821115611664576116646115d7565b50019056fea2646970667358221220c5ef9ed6cdb996a81768cde690905a32c50dc4ad66688802dbf57a65234d180664736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x90 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x9CBD3433 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xA4DF0256 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xD908E6CE EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xF7260D3E EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF9F95A0F EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x126CCD94 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x17FC45E2 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x2FC75EB0 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x3AECD0E3 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x44B6209D EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x478AA69E EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x67C2A360 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x8B7AFE2E EQ PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xFF JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x3D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x578 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x58C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x253 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1461 JUMP JUMPDEST PUSH2 0xBB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x1060 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x253 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0x10D9 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH2 0x404 SWAP2 DUP7 SWAP2 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x421 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x453 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7573657220697320616C726561647920756E617574686F72697A656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x1D5CD95C881A5CC8185B1C9958591E48185D5D1A1BDC9A5E9959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x580 PUSH2 0x1161 JUMP JUMPDEST PUSH2 0x58A PUSH1 0x0 PUSH2 0x11BB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 PUSH2 0x1161 JUMP JUMPDEST POP ADDRESS BALANCE SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO ISZERO EQ PUSH2 0x611 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1B9BDD08184818DBDB9D1C9858DD PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BC JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x1525 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x729 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x678 JUMPI PUSH2 0x678 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x692 JUMPI PUSH2 0x692 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x15A8 JUMP JUMPDEST DUP1 PUSH2 0x721 DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0x64D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA6B JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH2 0x778 SWAP2 CALLER SWAP2 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x795 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST LT PUSH2 0x8B5 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x729 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x804 JUMPI PUSH2 0x804 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x81E JUMPI PUSH2 0x81E PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x844 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x863 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x15A8 JUMP JUMPDEST DUP1 PUSH2 0x8AD DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH2 0x8E7 SWAP2 CALLER SWAP2 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST LT ISZERO PUSH2 0xA6B JUMPI PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x98B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x729 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x9BA JUMPI PUSH2 0x9BA PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x9D4 JUMPI PUSH2 0x9D4 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x15A8 JUMP JUMPDEST DUP1 PUSH2 0xA63 DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0x98F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA78 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xAA6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE7 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST LT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x636F6E747261637420646F65736E2774206861766520656E6F75676820746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x656E2773 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x14F6 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xBFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xC41 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC1A JUMPI PUSH2 0xC1A PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0xC2D SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xC39 DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBFF JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD46 JUMPI DUP1 CALLVALUE EQ PUSH2 0xCBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7061792074686520657861637420616D6F756E7420746F20636F766572206469 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39BA3934B13ABA34B7B7 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x729 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCDA JUMPI PUSH2 0xCDA PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD00 JUMPI PUSH2 0xD00 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH2 0xD3E DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCBF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA6B JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH2 0xD8F SWAP2 CALLER SWAP2 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD0 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST LT PUSH2 0xEE8 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLVALUE DUP2 EQ PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686F6C64696E67207175616E74697479207472756520627574206D73672E7661 PUSH1 0x44 DUP3 ADD MSTORE PUSH23 0x1B1D59481D5B98D95C9D185A5B881C185E48195E1858DD PUSH1 0x4A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x729 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xE7C JUMPI PUSH2 0xE7C PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xEA2 JUMPI PUSH2 0xEA2 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xED5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH2 0xEE0 DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH2 0xF1A SWAP2 CALLER SWAP2 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5B SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST LT ISZERO PUSH2 0xA6B JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0xF71 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0xF92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1059 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xFED JUMPI PUSH2 0xFED PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1013 JUMPI PUSH2 0x1013 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1046 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH2 0x1051 DUP2 PUSH2 0x15ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFD2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1068 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x10D6 DUP2 PUSH2 0x11BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x10E1 PUSH2 0x1161 JUMP JUMPDEST ADDRESS BALANCE DUP2 GT ISZERO PUSH2 0x1130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x696E76616C69642062616C616E636520746F207769746864726177 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x115D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1245 DUP2 PUSH2 0x120B JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x120B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x128E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1299 DUP2 PUSH2 0x120B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12F2 JUMPI PUSH2 0x12F2 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1313 JUMPI PUSH2 0x1313 PUSH2 0x12B4 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x132E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1343 PUSH2 0x133E DUP4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x12CA JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1386 JUMPI DUP1 CALLDATALOAD PUSH2 0x1379 DUP2 PUSH2 0x120B JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1366 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x13B2 PUSH2 0x133E DUP4 PUSH2 0x12FA JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x13D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1386 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x140C DUP2 PUSH2 0x120B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1434 DUP8 DUP4 DUP9 ADD PUSH2 0x131D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x144A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1457 DUP7 DUP3 DUP8 ADD PUSH2 0x1391 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x148B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1497 DUP7 DUP4 DUP8 ADD PUSH2 0x131D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14BA DUP6 DUP3 DUP7 ADD PUSH2 0x1391 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x1D1BDAD95B881A1BDB191A5B99C81A5B9D985B1A59 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x1A5B9D985B1A59081A5B9C1D5D PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x32B93937B91034B7103234B9BA3934B13ABA34B7B7 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x15FF JUMPI PUSH2 0x15FF PUSH2 0x15D7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x686F6C64696E67202620617574686F72697A6174696F6E2066616C7365207061 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x7920657861637420666565 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1664 JUMPI PUSH2 0x1664 PUSH2 0x15D7 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xEF SWAP15 0xD6 0xCD 0xB9 SWAP7 0xA8 OR PUSH9 0xCDE690905A32C50DC4 0xAD PUSH7 0x688802DBF57A65 0x23 0x4D XOR MOD PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "15991:6912:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20543:143;;;;;;;;;;-1:-1:-1;20543:143:0;;;;;:::i;:::-;;:::i;:::-;;16292:23;;;;;;;;;;;;;;;;;;;616:25:1;;;604:2;589:18;16292:23:0;;;;;;;;21392:170;;;;;;;;;;-1:-1:-1;21392:170:0;;;;;:::i;:::-;;:::i;22773:127::-;;;;;;;;;;-1:-1:-1;22773:127:0;;;;;:::i;:::-;;:::i;16160:47::-;;;;;;;;;;-1:-1:-1;16160:47:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1403:14:1;;1396:22;1378:41;;1366:2;1351:18;16160:47:0;1238:187:1;21044:184:0;;;;;;;;;;-1:-1:-1;21044:184:0;;;;;:::i;:::-;;:::i;20775:180::-;;;;;;;;;;-1:-1:-1;20775:180:0;;;;;:::i;:::-;;:::i;12068:101::-;;;;;;;;;;;;;:::i;22313:110::-;;;;;;;;;;;;;:::i;11445:85::-;;;;;;;;;;-1:-1:-1;11491:7:0;11517:6;-1:-1:-1;;;;;11517:6:0;11445:85;;;;;;;:::i;18371:2113::-;;;;;;:::i;:::-;;:::i;16213:26::-;;;;;;;;;;-1:-1:-1;16213:26:0;;;;-1:-1:-1;;;;;16213:26:0;;;22021:254;;;;;;;;;;-1:-1:-1;22021:254:0;;;;;:::i;:::-;;:::i;21233:115::-;;;;;;;;;;-1:-1:-1;21233:115:0;;;;;:::i;:::-;-1:-1:-1;;;;;21320:21:0;21298:4;21320:21;;;:15;:21;;;;;;;;;21233:115;16693:1672;;;;;;:::i;:::-;;:::i;16073:18::-;;;;;;;;;;;;;;;;12318:198;;;;;;;;;;-1:-1:-1;12318:198:0;;;;;:::i;:::-;;:::i;16097:31::-;;;;;;;;;;-1:-1:-1;16097:31:0;;;;-1:-1:-1;;;;;16097:31:0;;;21741:192;;;;;;;;;;-1:-1:-1;21741:192:0;;;;;:::i;:::-;;:::i;20543:143::-;11338:13;:11;:13::i;:::-;20628:3:::1;:12:::0;;;;20650:8:::1;:29:::0;;-1:-1:-1;;;;;;20650:29:0::1;-1:-1:-1::0;;;;;20650:29:0;;::::1;::::0;;;::::1;::::0;;20543:143::o;21392:170::-;11338:13;:11;:13::i;:::-;21507:12:::1;:20:::0;;-1:-1:-1;;;;;;21507:20:0::1;-1:-1:-1::0;;;;;21507:20:0;;;::::1;::::0;;;::::1;::::0;;;21537:8:::1;:18:::0;21392:170::o;22773:127::-;22862:12;;;:31;;-1:-1:-1;;;22862:31:0;;22837:7;;-1:-1:-1;;;;;22862:12:0;;;;:22;;:31;;22885:7;;22862:31;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22855:38;22773:127;-1:-1:-1;;22773:127:0:o;21044:184::-;11338:13;:11;:13::i;:::-;-1:-1:-1;;;;;21120:21:0;::::1;;::::0;;;:15:::1;:21;::::0;;;;;::::1;;:29;;:21:::0;:29:::1;21112:70;;;::::0;-1:-1:-1;;;21112:70:0;;6018:2:1;21112:70:0::1;::::0;::::1;6000:21:1::0;6057:2;6037:18;;;6030:30;6096;6076:18;;;6069:58;6144:18;;21112:70:0::1;;;;;;;;;-1:-1:-1::0;;;;;21192:21:0::1;21216:5;21192:21:::0;;;:15:::1;:21;::::0;;;;:29;;-1:-1:-1;;21192:29:0::1;::::0;;21044:184::o;20775:180::-;11338:13;:11;:13::i;:::-;-1:-1:-1;;;;;20849:21:0;::::1;;::::0;;;:15:::1;:21;::::0;;;;;::::1;;:30;20841:69;;;::::0;-1:-1:-1;;;20841:69:0;;6375:2:1;20841:69:0::1;::::0;::::1;6357:21:1::0;6414:2;6394:18;;;6387:30;-1:-1:-1;;;6433:18:1;;;6426:56;6499:18;;20841:69:0::1;6173:350:1::0;20841:69:0::1;-1:-1:-1::0;;;;;20920:21:0::1;;::::0;;;:15:::1;:21;::::0;;;;:28;;-1:-1:-1;;20920:28:0::1;20944:4;20920:28;::::0;;20775:180::o;12068:101::-;11338:13;:11;:13::i;:::-;12132:30:::1;12159:1;12132:18;:30::i;:::-;12068:101::o:0;22313:110::-;22370:7;11338:13;:11;:13::i;:::-;-1:-1:-1;22403:4:0::1;22395:21;22313:110:::0;:::o;18371:2113::-;16616:12;;-1:-1:-1;;;;;16616:12:0;16600:69;;;;-1:-1:-1;;;16600:69:0;;;;;;;:::i;:::-;18608:4:::1;-1:-1:-1::0;;;;;18577:25:0;::::1;1724:19:::0;:23;;18577:35:::1;18569:62;;;::::0;-1:-1:-1;;;18569:62:0;;7080:2:1;18569:62:0::1;::::0;::::1;7062:21:1::0;7119:2;7099:18;;;7092:30;-1:-1:-1;;;7138:18:1;;;7131:44;7192:18;;18569:62:0::1;6878:338:1::0;18569:62:0::1;18727:6;:13;18706:10;:17;:34;18698:60;;;;-1:-1:-1::0;;;18698:60:0::1;;;;;;;:::i;:::-;19020:10;19004:27;::::0;;;:15:::1;:27;::::0;;;;;::::1;;19000:1478;;;19052:9;19047:225;19071:6;:13;19067:1;:17;19047:225;;;19138:5;-1:-1:-1::0;;;;;19138:18:0::1;;19157:10;19169;19180:1;19169:13;;;;;;;;:::i;:::-;;;;;;;19184:6;19191:1;19184:9;;;;;;;;:::i;:::-;;;;;;;19138:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19109:148;;;;-1:-1:-1::0;;;19109:148:0::1;;;;;;;:::i;:::-;19086:3:::0;::::1;::::0;::::1;:::i;:::-;;;;19047:225;;;;18371:2113:::0;;;:::o;19000:1478::-:1;19309:10;19293:27;::::0;;;:15:::1;:27;::::0;;;;;::::1;;19288:1190;;19378:8;::::0;19340:12:::1;::::0;;:34:::1;::::0;-1:-1:-1;;;19340:34:0;;-1:-1:-1;;;;;19340:12:0;;::::1;::::0;:22:::1;::::0;:34:::1;::::0;19363:10:::1;::::0;19340:34:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;19336:1132;;19422:10;19406:27;::::0;;;:15:::1;:27;::::0;;;;:34;;-1:-1:-1;;19406:34:0::1;19436:4;19406:34;::::0;;19458:355:::1;19482:6;:13;19478:1;:17;19458:355;;;19557:5;-1:-1:-1::0;;;;;19557:18:0::1;;19605:10;19645;19656:1;19645:13;;;;;;;;:::i;:::-;;;;;;;19688:6;19695:1;19688:9;;;;;;;;:::i;:::-;;;;;;;19557:166;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19524:270;;;;-1:-1:-1::0;;;19524:270:0::1;;;;;;;:::i;:::-;19497:3:::0;::::1;::::0;::::1;:::i;:::-;;;;19458:355;;19336:1132;19874:8;::::0;19837:12:::1;::::0;;:34:::1;::::0;-1:-1:-1;;;19837:34:0;;-1:-1:-1;;;;;19837:12:0;;::::1;::::0;:22:::1;::::0;:34:::1;::::0;19860:10:::1;::::0;19837:34:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;19833:635;;;19944:3;;19931:9;:16;19902:130;;;;-1:-1:-1::0;;;19902:130:0::1;;;;;;;:::i;:::-;20058:8;::::0;;20077:3;20050:31:::1;::::0;-1:-1:-1;;;;;20058:8:0;;::::1;::::0;20050:31;::::1;;;::::0;20077:3;20058:8:::1;20050:31:::0;20058:8;20050:31;20077:3;20058:8;20050:31;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;20104:9;20099:355;20123:6;:13;20119:1;:17;20099:355;;;20198:5;-1:-1:-1::0;;;;;20198:18:0::1;;20246:10;20286;20297:1;20286:13;;;;;;;;:::i;:::-;;;;;;;20329:6;20336:1;20329:9;;;;;;;;:::i;:::-;;;;;;;20198:166;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20165:270;;;;-1:-1:-1::0;;;20165:270:0::1;;;;;;;:::i;:::-;20138:3:::0;::::1;::::0;::::1;:::i;:::-;;;;20099:355;;19833:635;18371:2113:::0;;;:::o;22021:254::-;11338:13;:11;:13::i;:::-;22122:30:::1;::::0;-1:-1:-1;;;22122:30:0;;22156:6;;-1:-1:-1;;;;;22122:15:0;::::1;::::0;::::1;::::0;:30:::1;::::0;22146:4:::1;::::0;22122:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;22101:123;;;::::0;-1:-1:-1;;;22101:123:0;;9593:2:1;22101:123:0::1;::::0;::::1;9575:21:1::0;9632:2;9612:18;;;9605:30;9671:34;9651:18;;;9644:62;-1:-1:-1;;;9722:18:1;;;9715:34;9766:19;;22101:123:0::1;9391:400:1::0;22101:123:0::1;22234:34;::::0;-1:-1:-1;;;22234:34:0;;22249:10:::1;22234:34;::::0;::::1;9970:51:1::0;10037:18;;;10030:34;;;-1:-1:-1;;;;;22234:14:0;::::1;::::0;::::1;::::0;9943:18:1;;22234:34:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;16693:1672::-:0;16616:12;;-1:-1:-1;;;;;16616:12:0;16600:69;;;;-1:-1:-1;;;16600:69:0;;;;;;;:::i;:::-;16888:6:::1;:13;16867:10;:17;:34;16859:60;;;;-1:-1:-1::0;;;16859:60:0::1;;;;;;;:::i;:::-;16929:19;16963:9:::0;16958:89:::1;16978:6;:13;16974:1;:17;16958:89;;;17027:6;17034:1;17027:9;;;;;;;;:::i;:::-;;;;;;;17012:24;;;;;:::i;:::-;::::0;-1:-1:-1;16993:3:0;::::1;::::0;::::1;:::i;:::-;;;;16958:89;;;-1:-1:-1::0;17077:10:0::1;17061:27;::::0;;;:15:::1;:27;::::0;;;;;::::1;;17057:1302;;;17142:11;17129:9;:24;17104:125;;;::::0;-1:-1:-1;;;17104:125:0;;10410:2:1;17104:125:0::1;::::0;::::1;10392:21:1::0;10449:2;10429:18;;;10422:30;10488:34;10468:18;;;10461:62;-1:-1:-1;;;10539:18:1;;;10532:40;10589:19;;17104:125:0::1;10208:406:1::0;17104:125:0::1;17248:9;17243:123;17267:10;:17;17263:1;:21;17243:123;;;17317:10;17328:1;17317:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;17309:31:0::1;:42;17341:6;17348:1;17341:9;;;;;;;;:::i;:::-;;;;;;;17309:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;17286:3:0;::::1;::::0;::::1;:::i;:::-;;;;17243:123;;17057:1302;17403:10;17387:27;::::0;;;:15:::1;:27;::::0;;;;;::::1;;17382:977;;17472:8;::::0;17434:12:::1;::::0;;:34:::1;::::0;-1:-1:-1;;;17434:34:0;;-1:-1:-1;;;;;17434:12:0;;::::1;::::0;:22:::1;::::0;:34:::1;::::0;17457:10:::1;::::0;17434:34:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;17430:919;;17516:10;17500:27;::::0;;;:15:::1;:27;::::0;;;;:34;;-1:-1:-1;;17500:34:0::1;17530:4;17500:34;::::0;;17581:9:::1;:24:::0;::::1;17552:150;;;::::0;-1:-1:-1;;;17552:150:0;;10821:2:1;17552:150:0::1;::::0;::::1;10803:21:1::0;10860:2;10840:18;;;10833:30;10899:34;10879:18;;;10872:62;-1:-1:-1;;;10950:18:1;;;10943:53;11013:19;;17552:150:0::1;10619:419:1::0;17552:150:0::1;17725:9;17720:131;17744:10;:17;17740:1;:21;17720:131;;;17798:10;17809:1;17798:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;17790:31:0::1;:42;17822:6;17829:1;17822:9;;;;;;;;:::i;:::-;;;;;;;17790:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;17763:3:0;::::1;::::0;::::1;:::i;:::-;;;;17720:131;;17430:919;17912:8;::::0;17875:12:::1;::::0;;:34:::1;::::0;-1:-1:-1;;;17875:34:0;;-1:-1:-1;;;;;17875:12:0;;::::1;::::0;:22:::1;::::0;:34:::1;::::0;17898:10:::1;::::0;17875:34:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;17871:478;;;17940:20;17969:11;17963:3;;:17;;;;:::i;:::-;17940:40;;18040:12;18027:9;:25;17998:139;;;;-1:-1:-1::0;;;17998:139:0::1;;;;;;;:::i;:::-;18163:8;::::0;;18182:3;18155:31:::1;::::0;-1:-1:-1;;;;;18163:8:0;;::::1;::::0;18155:31;::::1;;;::::0;18182:3;18163:8:::1;18155:31:::0;18163:8;18155:31;18182:3;18163:8;18155:31;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;18209:9;18204:131;18228:10;:17;18224:1;:21;18204:131;;;18282:10;18293:1;18282:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;18274:31:0::1;:42;18306:6;18313:1;18306:9;;;;;;;;:::i;:::-;;;;;;;18274:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;18247:3:0;::::1;::::0;::::1;:::i;:::-;;;;18204:131;;;;17922:427;16824:1541;16693:1672:::0;;:::o;12318:198::-;11338:13;:11;:13::i;:::-;-1:-1:-1;;;;;12406:22:0;::::1;12398:73;;;::::0;-1:-1:-1;;;12398:73:0;;11245:2:1;12398:73:0::1;::::0;::::1;11227:21:1::0;11284:2;11264:18;;;11257:30;11323:34;11303:18;;;11296:62;-1:-1:-1;;;11374:18:1;;;11367:36;11420:19;;12398:73:0::1;11043:402:1::0;12398:73:0::1;12481:28;12500:8;12481:18;:28::i;:::-;12318:198:::0;:::o;21741:192::-;11338:13;:11;:13::i;:::-;21825:4:::1;21817:21;:31:::0;-1:-1:-1;21817:31:0::1;21809:71;;;::::0;-1:-1:-1;;;21809:71:0;;11652:2:1;21809:71:0::1;::::0;::::1;11634:21:1::0;11691:2;11671:18;;;11664:30;-1:-1:-1;;;11710:18:1;;;11703:57;11777:18;;21809:71:0::1;11450:351:1::0;21809:71:0::1;21890:36;::::0;21898:10:::1;::::0;21890:36;::::1;;;::::0;21919:6;;21890:36:::1;::::0;;;21919:6;21898:10;21890:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;21741:192:::0;:::o;11603:130::-;11491:7;11517:6;-1:-1:-1;;;;;11517:6:0;10127:10;11666:23;11658:68;;;;-1:-1:-1;;;11658:68:0;;12008:2:1;11658:68:0;;;11990:21:1;;;12027:18;;;12020:30;12086:34;12066:18;;;12059:62;12138:18;;11658:68:0;11806:356:1;12670:187:0;12743:16;12762:6;;-1:-1:-1;;;;;12778:17:0;;;-1:-1:-1;;;;;;12778:17:0;;;;;;12810:40;;12762:6;;;;;;;12810:40;;12743:16;12810:40;12733:124;12670:187;:::o;14:131:1:-;-1:-1:-1;;;;;89:31:1;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;331:9;318:23;308:33;;391:2;380:9;376:18;363:32;404:31;429:5;404:31;:::i;:::-;454:5;444:15;;;150:315;;;;;:::o;652:329::-;734:6;742;795:2;783:9;774:7;770:23;766:32;763:52;;;811:1;808;801:12;763:52;850:9;837:23;869:31;894:5;869:31;:::i;:::-;919:5;971:2;956:18;;;;943:32;;-1:-1:-1;;;652:329:1:o;986:247::-;1045:6;1098:2;1086:9;1077:7;1073:23;1069:32;1066:52;;;1114:1;1111;1104:12;1066:52;1153:9;1140:23;1172:31;1197:5;1172:31;:::i;:::-;1222:5;986:247;-1:-1:-1;;;986:247:1:o;1430:203::-;-1:-1:-1;;;;;1594:32:1;;;;1576:51;;1564:2;1549:18;;1430:203::o;1638:127::-;1699:10;1694:3;1690:20;1687:1;1680:31;1730:4;1727:1;1720:15;1754:4;1751:1;1744:15;1770:275;1841:2;1835:9;1906:2;1887:13;;-1:-1:-1;;1883:27:1;1871:40;;-1:-1:-1;;;;;1926:34:1;;1962:22;;;1923:62;1920:88;;;1988:18;;:::i;:::-;2024:2;2017:22;1770:275;;-1:-1:-1;1770:275:1:o;2050:183::-;2110:4;-1:-1:-1;;;;;2135:6:1;2132:30;2129:56;;;2165:18;;:::i;:::-;-1:-1:-1;2210:1:1;2206:14;2222:4;2202:25;;2050:183::o;2238:737::-;2292:5;2345:3;2338:4;2330:6;2326:17;2322:27;2312:55;;2363:1;2360;2353:12;2312:55;2399:6;2386:20;2425:4;2449:60;2465:43;2505:2;2465:43;:::i;:::-;2449:60;:::i;:::-;2543:15;;;2629:1;2625:10;;;;2613:23;;2609:32;;;2574:12;;;;2653:15;;;2650:35;;;2681:1;2678;2671:12;2650:35;2717:2;2709:6;2705:15;2729:217;2745:6;2740:3;2737:15;2729:217;;;2825:3;2812:17;2842:31;2867:5;2842:31;:::i;:::-;2886:18;;2924:12;;;;2762;;2729:217;;;-1:-1:-1;2964:5:1;2238:737;-1:-1:-1;;;;;;2238:737:1:o;2980:662::-;3034:5;3087:3;3080:4;3072:6;3068:17;3064:27;3054:55;;3105:1;3102;3095:12;3054:55;3141:6;3128:20;3167:4;3191:60;3207:43;3247:2;3207:43;:::i;3191:60::-;3285:15;;;3371:1;3367:10;;;;3355:23;;3351:32;;;3316:12;;;;3395:15;;;3392:35;;;3423:1;3420;3413:12;3392:35;3459:2;3451:6;3447:15;3471:142;3487:6;3482:3;3479:15;3471:142;;;3553:17;;3541:30;;3591:12;;;;3504;;3471:142;;3647:744;3788:6;3796;3804;3857:2;3845:9;3836:7;3832:23;3828:32;3825:52;;;3873:1;3870;3863:12;3825:52;3912:9;3899:23;3931:31;3956:5;3931:31;:::i;:::-;3981:5;-1:-1:-1;4037:2:1;4022:18;;4009:32;-1:-1:-1;;;;;4090:14:1;;;4087:34;;;4117:1;4114;4107:12;4087:34;4140:61;4193:7;4184:6;4173:9;4169:22;4140:61;:::i;:::-;4130:71;;4254:2;4243:9;4239:18;4226:32;4210:48;;4283:2;4273:8;4270:16;4267:36;;;4299:1;4296;4289:12;4267:36;;4322:63;4377:7;4366:8;4355:9;4351:24;4322:63;:::i;:::-;4312:73;;;3647:744;;;;;:::o;4618:595::-;4736:6;4744;4797:2;4785:9;4776:7;4772:23;4768:32;4765:52;;;4813:1;4810;4803:12;4765:52;4853:9;4840:23;-1:-1:-1;;;;;4923:2:1;4915:6;4912:14;4909:34;;;4939:1;4936;4929:12;4909:34;4962:61;5015:7;5006:6;4995:9;4991:22;4962:61;:::i;:::-;4952:71;;5076:2;5065:9;5061:18;5048:32;5032:48;;5105:2;5095:8;5092:16;5089:36;;;5121:1;5118;5111:12;5089:36;;5144:63;5199:7;5188:8;5177:9;5173:24;5144:63;:::i;:::-;5134:73;;;4618:595;;;;;:::o;5442:180::-;5501:6;5554:2;5542:9;5533:7;5529:23;5525:32;5522:52;;;5570:1;5567;5560:12;5522:52;-1:-1:-1;5593:23:1;;5442:180;-1:-1:-1;5442:180:1:o;5627:184::-;5697:6;5750:2;5738:9;5729:7;5725:23;5721:32;5718:52;;;5766:1;5763;5756:12;5718:52;-1:-1:-1;5789:16:1;;5627:184;-1:-1:-1;5627:184:1:o;6528:345::-;6730:2;6712:21;;;6769:2;6749:18;;;6742:30;-1:-1:-1;;;6803:2:1;6788:18;;6781:51;6864:2;6849:18;;6528:345::o;7221:337::-;7423:2;7405:21;;;7462:2;7442:18;;;7435:30;-1:-1:-1;;;7496:2:1;7481:18;;7474:43;7549:2;7534:18;;7221:337::o;7563:127::-;7624:10;7619:3;7615:20;7612:1;7605:31;7655:4;7652:1;7645:15;7679:4;7676:1;7669:15;7695:375;-1:-1:-1;;;;;7953:15:1;;;7935:34;;8005:15;;;;8000:2;7985:18;;7978:43;8052:2;8037:18;;8030:34;;;;7885:2;7870:18;;7695:375::o;8075:277::-;8142:6;8195:2;8183:9;8174:7;8170:23;8166:32;8163:52;;;8211:1;8208;8201:12;8163:52;8243:9;8237:16;8296:5;8289:13;8282:21;8275:5;8272:32;8262:60;;8318:1;8315;8308:12;8357:345;8559:2;8541:21;;;8598:2;8578:18;;;8571:30;-1:-1:-1;;;8632:2:1;8617:18;;8610:51;8693:2;8678:18;;8357:345::o;8707:127::-;8768:10;8763:3;8759:20;8756:1;8749:31;8799:4;8796:1;8789:15;8823:4;8820:1;8813:15;8839:135;8878:3;8899:17;;;8896:43;;8919:18;;:::i;:::-;-1:-1:-1;8966:1:1;8955:13;;8839:135::o;8979:407::-;9181:2;9163:21;;;9220:2;9200:18;;;9193:30;9259:34;9254:2;9239:18;;9232:62;-1:-1:-1;;;9325:2:1;9310:18;;9303:41;9376:3;9361:19;;8979:407::o;10075:128::-;10115:3;10146:1;10142:6;10139:1;10136:13;10133:39;;;10152:18;;:::i;:::-;-1:-1:-1;10188:9:1;;10075:128::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1158200",
								"executionCost": "63516",
								"totalCost": "1221716"
							},
							"external": {
								"SetTokenToholdAndQuantity(address,uint256)": "40901",
								"TOKENmultisender(address,address[],uint256[])": "infinite",
								"authorizeUser(address)": "21314",
								"authorizedusers(address)": "714",
								"coinMultisender(address[],uint256[])": "infinite",
								"contractBalance()": "1041",
								"fee()": "516",
								"getTokenBalance(address)": "infinite",
								"owner()": "444",
								"quantity()": "407",
								"readAuthorizedUsers(address)": "731",
								"receiver()": "637",
								"renounceOwnership()": "infinite",
								"setfeeToUse(uint256,address)": "40870",
								"tokenAddress()": "505",
								"transferOwnership(address)": "infinite",
								"unauthorizeUser(address)": "21295",
								"withdrawCoins(uint256)": "infinite",
								"withdrawToken(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15991,
									"end": 22903,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 15991,
									"end": 22903,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15991,
									"end": 22903,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16382,
									"end": 16466,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 16382,
									"end": 16466,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16382,
									"end": 16466,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16382,
									"end": 16466,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16382,
									"end": 16466,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16382,
									"end": 16466,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16382,
									"end": 16466,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16382,
									"end": 16466,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16382,
									"end": 16466,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16382,
									"end": 16466,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11180,
									"end": 11212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 10127,
									"end": 10137,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 11180,
									"end": 11198,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 11180,
									"end": 11212,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11180,
									"end": 11212,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 11180,
									"end": 11212,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11491,
									"end": 11498,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11517,
									"end": 11523,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16406,
									"end": 16414,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 16406,
									"end": 16433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16406,
									"end": 16433,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 16406,
									"end": 16433,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11517,
									"end": 11523,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11517,
									"end": 11523,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11517,
									"end": 11523,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16406,
									"end": 16433,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16406,
									"end": 16433,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16406,
									"end": 16433,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16406,
									"end": 16433,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16406,
									"end": 16433,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16406,
									"end": 16433,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16449,
									"end": 16459,
									"name": "PUSH",
									"source": 0,
									"value": "5AF3107A4000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 16443,
									"end": 16459,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15991,
									"end": 22903,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 15991,
									"end": 22903,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12670,
									"end": 12857,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12670,
									"end": 12857,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12743,
									"end": 12759,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12762,
									"end": 12768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12762,
									"end": 12768,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12778,
									"end": 12795,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12778,
									"end": 12795,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12778,
									"end": 12795,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 12778,
									"end": 12795,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12778,
									"end": 12795,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12778,
									"end": 12795,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12778,
									"end": 12795,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12778,
									"end": 12795,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12778,
									"end": 12795,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12810,
									"end": 12850,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12810,
									"end": 12850,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12762,
									"end": 12768,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12762,
									"end": 12768,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12762,
									"end": 12768,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12762,
									"end": 12768,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12762,
									"end": 12768,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12762,
									"end": 12768,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12762,
									"end": 12768,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12810,
									"end": 12850,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 12810,
									"end": 12850,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12743,
									"end": 12759,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12810,
									"end": 12850,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 12733,
									"end": 12857,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12670,
									"end": 12857,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12670,
									"end": 12857,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 15991,
									"end": 22903,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 15991,
									"end": 22903,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15991,
									"end": 22903,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15991,
									"end": 22903,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15991,
									"end": 22903,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15991,
									"end": 22903,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15991,
									"end": 22903,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 15991,
									"end": 22903,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15991,
									"end": 22903,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5ef9ed6cdb996a81768cde690905a32c50dc4ad66688802dbf57a65234d180664736f6c634300080d0033",
									".code": [
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "9CBD3433"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "9D76EA58"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "9E281A98"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "A4DF0256"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "D908E6CE"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "DDCA3F43"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "F7260D3E"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "F9F95A0F"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "126CCD94"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "17FC45E2"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "2FC75EB0"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "3AECD0E3"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "44B6209D"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "478AA69E"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "67C2A360"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "8B7AFE2E"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 22903,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 616,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 604,
											"end": 606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 589,
											"end": 607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16315,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1368,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16160,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1238,
											"end": 1425,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11491,
											"end": 11498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11517,
											"end": 11523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11517,
											"end": 11523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 11445,
											"end": 11530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16213,
											"end": 16239,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21320,
											"end": 21341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21298,
											"end": 21302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21320,
											"end": 21341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21335,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21320,
											"end": 21341,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21320,
											"end": 21341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21320,
											"end": 21341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21341,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21341,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 21320,
											"end": 21341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21233,
											"end": 21348,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16091,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16097,
											"end": 16128,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 11338,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20628,
											"end": 20631,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20628,
											"end": 20640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20628,
											"end": 20640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20628,
											"end": 20640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20628,
											"end": 20640,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20650,
											"end": 20658,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20650,
											"end": 20679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20650,
											"end": 20679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20650,
											"end": 20679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20650,
											"end": 20679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20650,
											"end": 20679,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20650,
											"end": 20679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20650,
											"end": 20679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20650,
											"end": 20679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20650,
											"end": 20679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20650,
											"end": 20679,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20650,
											"end": 20679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20650,
											"end": 20679,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20686,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11338,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21507,
											"end": 21527,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21545,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21537,
											"end": 21555,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21562,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22862,
											"end": 22874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22837,
											"end": 22844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22837,
											"end": 22844,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22862,
											"end": 22874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22874,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22884,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22862,
											"end": 22884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22885,
											"end": 22892,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22885,
											"end": 22892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 22862,
											"end": 22893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22855,
											"end": 22893,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22773,
											"end": 22900,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11338,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21120,
											"end": 21135,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21120,
											"end": 21149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21120,
											"end": 21149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21120,
											"end": 21141,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21120,
											"end": 21149,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6000,
											"end": 6021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6059,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 6037,
											"end": 6055,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6037,
											"end": 6055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6096,
											"end": 6126,
											"name": "PUSH",
											"source": 1,
											"value": "7573657220697320616C726561647920756E617574686F72697A656400000000"
										},
										{
											"begin": 6076,
											"end": 6094,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6076,
											"end": 6094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6076,
											"end": 6094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6069,
											"end": 6127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 21112,
											"end": 21182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21192,
											"end": 21213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21192,
											"end": 21213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21192,
											"end": 21213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21192,
											"end": 21213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21192,
											"end": 21207,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21192,
											"end": 21213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21192,
											"end": 21213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21192,
											"end": 21213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21192,
											"end": 21213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21192,
											"end": 21213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21192,
											"end": 21221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21192,
											"end": 21221,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21192,
											"end": 21221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21192,
											"end": 21221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21192,
											"end": 21221,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21044,
											"end": 21228,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 11338,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20849,
											"end": 20864,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20849,
											"end": 20870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20849,
											"end": 20879,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 20910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 20841,
											"end": 20910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 20910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20841,
											"end": 20910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20841,
											"end": 20910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 20910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6375,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20841,
											"end": 20910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20841,
											"end": 20910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 20910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6416,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 6394,
											"end": 6412,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6394,
											"end": 6412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6394,
											"end": 6412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6387,
											"end": 6417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D5CD95C881A5CC8185B1C9958591E48185D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6433,
											"end": 6451,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6433,
											"end": 6451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6517,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6499,
											"end": 6517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20841,
											"end": 20910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6173,
											"end": 6523,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20841,
											"end": 20910,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 20841,
											"end": 20910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20920,
											"end": 20941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20920,
											"end": 20941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20935,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20920,
											"end": 20941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20920,
											"end": 20941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20920,
											"end": 20941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20941,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20920,
											"end": 20948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 20948,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20920,
											"end": 20948,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20948,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20955,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11338,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12132,
											"end": 12162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 12159,
											"end": 12160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12132,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 12132,
											"end": 12162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12132,
											"end": 12162,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 12132,
											"end": 12162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12169,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22370,
											"end": 22377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 11338,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22403,
											"end": 22407,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22395,
											"end": 22416,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22313,
											"end": 22423,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16616,
											"end": 16628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16616,
											"end": 16628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16616,
											"end": 16628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18608,
											"end": 18612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18577,
											"end": 18602,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18577,
											"end": 18602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1743,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18577,
											"end": 18612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 18569,
											"end": 18631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18569,
											"end": 18631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18569,
											"end": 18631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7080,
											"end": 7082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18569,
											"end": 18631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18569,
											"end": 18631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7062,
											"end": 7083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 7099,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7099,
											"end": 7117,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7099,
											"end": 7117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7156,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7138,
											"end": 7156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7210,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7192,
											"end": 7210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18569,
											"end": 18631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6878,
											"end": 7216,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18569,
											"end": 18631,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 18569,
											"end": 18631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18706,
											"end": 18716,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18706,
											"end": 18723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18706,
											"end": 18740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 18698,
											"end": 18758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19020,
											"end": 19030,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19004,
											"end": 19031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19019,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19004,
											"end": 19031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19004,
											"end": 19031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19004,
											"end": 19031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19031,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19031,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19031,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19004,
											"end": 19031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19000,
											"end": 20478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19000,
											"end": 20478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 19000,
											"end": 20478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19052,
											"end": 19061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19047,
											"end": 19272,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 19047,
											"end": 19272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19071,
											"end": 19077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19071,
											"end": 19084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19067,
											"end": 19068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19067,
											"end": 19084,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19047,
											"end": 19272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19047,
											"end": 19272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 19047,
											"end": 19272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19143,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19138,
											"end": 19156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19156,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 19157,
											"end": 19167,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19179,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19181,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19190,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19191,
											"end": 19192,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 19138,
											"end": 19194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 19109,
											"end": 19257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19086,
											"end": 19089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19086,
											"end": 19089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 19086,
											"end": 19089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19086,
											"end": 19089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 19086,
											"end": 19089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19086,
											"end": 19089,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 19086,
											"end": 19089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19086,
											"end": 19089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19086,
											"end": 19089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19086,
											"end": 19089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19047,
											"end": 19272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 19047,
											"end": 19272,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19047,
											"end": 19272,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 19047,
											"end": 19272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19047,
											"end": 19272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19000,
											"end": 20478,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 19000,
											"end": 20478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19309,
											"end": 19319,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19293,
											"end": 19320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19293,
											"end": 19320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19293,
											"end": 19320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19293,
											"end": 19320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19293,
											"end": 19308,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19293,
											"end": 19320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19293,
											"end": 19320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19293,
											"end": 19320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19293,
											"end": 19320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19293,
											"end": 19320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19293,
											"end": 19320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19293,
											"end": 19320,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19293,
											"end": 19320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19288,
											"end": 20478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 19288,
											"end": 20478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19386,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19378,
											"end": 19386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19340,
											"end": 19352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19340,
											"end": 19352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19362,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 19340,
											"end": 19362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19363,
											"end": 19373,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19363,
											"end": 19373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 19340,
											"end": 19374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19340,
											"end": 19386,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19336,
											"end": 20468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 19336,
											"end": 20468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19406,
											"end": 19433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19406,
											"end": 19433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19406,
											"end": 19433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19406,
											"end": 19433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19406,
											"end": 19421,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19406,
											"end": 19433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19406,
											"end": 19433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19406,
											"end": 19433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19406,
											"end": 19433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19406,
											"end": 19433,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19406,
											"end": 19440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19406,
											"end": 19440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19406,
											"end": 19440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 19440,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19406,
											"end": 19440,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19406,
											"end": 19440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19406,
											"end": 19440,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19458,
											"end": 19813,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 19458,
											"end": 19813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19482,
											"end": 19488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19482,
											"end": 19495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19478,
											"end": 19479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19478,
											"end": 19495,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19458,
											"end": 19813,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19458,
											"end": 19813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 19458,
											"end": 19813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19557,
											"end": 19575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19575,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 19605,
											"end": 19615,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19645,
											"end": 19655,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19656,
											"end": 19657,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19688,
											"end": 19694,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19695,
											"end": 19696,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 19557,
											"end": 19723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 19524,
											"end": 19794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19497,
											"end": 19500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19497,
											"end": 19500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 19497,
											"end": 19500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19497,
											"end": 19500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 19497,
											"end": 19500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19497,
											"end": 19500,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 19497,
											"end": 19500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19497,
											"end": 19500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19497,
											"end": 19500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19497,
											"end": 19500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19458,
											"end": 19813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 19458,
											"end": 19813,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19336,
											"end": 20468,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 19336,
											"end": 20468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19874,
											"end": 19882,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19874,
											"end": 19882,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19837,
											"end": 19849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19837,
											"end": 19849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19859,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 19837,
											"end": 19859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19860,
											"end": 19870,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19860,
											"end": 19870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 19837,
											"end": 19871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19882,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 20468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 20468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 19833,
											"end": 20468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19944,
											"end": 19947,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19944,
											"end": 19947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19931,
											"end": 19940,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19931,
											"end": 19947,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 19902,
											"end": 20032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20066,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20058,
											"end": 20066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20066,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20077,
											"end": 20080,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20058,
											"end": 20066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20066,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20077,
											"end": 20080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20077,
											"end": 20080,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20066,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20050,
											"end": 20081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20099,
											"end": 20454,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 20099,
											"end": 20454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20123,
											"end": 20129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20123,
											"end": 20136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20119,
											"end": 20120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20119,
											"end": 20136,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20099,
											"end": 20454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20099,
											"end": 20454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 20099,
											"end": 20454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20198,
											"end": 20216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20216,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 20246,
											"end": 20256,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20286,
											"end": 20296,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20297,
											"end": 20298,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20286,
											"end": 20299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20329,
											"end": 20335,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20337,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 20198,
											"end": 20364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 20165,
											"end": 20435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20138,
											"end": 20141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20138,
											"end": 20141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 20138,
											"end": 20141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20138,
											"end": 20141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 20138,
											"end": 20141,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20138,
											"end": 20141,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 20138,
											"end": 20141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20138,
											"end": 20141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20138,
											"end": 20141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20138,
											"end": 20141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20099,
											"end": 20454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 20099,
											"end": 20454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 20468,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 19833,
											"end": 20468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 20484,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 22021,
											"end": 22275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 11338,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22156,
											"end": 22162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22156,
											"end": 22162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22122,
											"end": 22137,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22137,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22122,
											"end": 22137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22146,
											"end": 22150,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22146,
											"end": 22150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 22122,
											"end": 22152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22162,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22122,
											"end": 22162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22101,
											"end": 22224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 22101,
											"end": 22224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22101,
											"end": 22224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22101,
											"end": 22224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22101,
											"end": 22224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22101,
											"end": 22224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9593,
											"end": 9595,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22101,
											"end": 22224,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22101,
											"end": 22224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22101,
											"end": 22224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9632,
											"end": 9634,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9612,
											"end": 9630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9612,
											"end": 9630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9612,
											"end": 9630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 9635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9705,
											"name": "PUSH",
											"source": 1,
											"value": "636F6E747261637420646F65736E2774206861766520656E6F75676820746F6B"
										},
										{
											"begin": 9651,
											"end": 9669,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9651,
											"end": 9669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9651,
											"end": 9669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 9706,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "656E2773"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9722,
											"end": 9740,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9722,
											"end": 9740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9766,
											"end": 9785,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9766,
											"end": 9785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22101,
											"end": 22224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 9391,
											"end": 9791,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22101,
											"end": 22224,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 22101,
											"end": 22224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22249,
											"end": 22259,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 10021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10037,
											"end": 10055,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10037,
											"end": 10055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10037,
											"end": 10055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10030,
											"end": 10064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10030,
											"end": 10064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10030,
											"end": 10064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22234,
											"end": 22248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22248,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 22234,
											"end": 22248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9943,
											"end": 9961,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9943,
											"end": 9961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 22234,
											"end": 22268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16616,
											"end": 16628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16616,
											"end": 16628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16616,
											"end": 16628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 16600,
											"end": 16669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16888,
											"end": 16894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16888,
											"end": 16901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16867,
											"end": 16877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16867,
											"end": 16884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16867,
											"end": 16901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 16859,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16929,
											"end": 16948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16963,
											"end": 16972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17047,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 16958,
											"end": 17047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 16984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 16991,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16974,
											"end": 16975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16974,
											"end": 16991,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 16958,
											"end": 17047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17012,
											"end": 17036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17012,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 17012,
											"end": 17036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17012,
											"end": 17036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17012,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 17012,
											"end": 17036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17012,
											"end": 17036,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 17012,
											"end": 17036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17012,
											"end": 17036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16993,
											"end": 16996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 16996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 16993,
											"end": 16996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 16996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16993,
											"end": 16996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16993,
											"end": 16996,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 16993,
											"end": 16996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 16996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 16996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 16996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 16958,
											"end": 17047,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17047,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 16958,
											"end": 17047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17077,
											"end": 17087,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 17057,
											"end": 18359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17142,
											"end": 17153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17129,
											"end": 17138,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17129,
											"end": 17153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17104,
											"end": 17229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 17104,
											"end": 17229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17104,
											"end": 17229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17104,
											"end": 17229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17104,
											"end": 17229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17104,
											"end": 17229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10410,
											"end": 10412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17104,
											"end": 17229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17104,
											"end": 17229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17104,
											"end": 17229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10392,
											"end": 10413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10451,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10422,
											"end": 10452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10522,
											"name": "PUSH",
											"source": 1,
											"value": "7061792074686520657861637420616D6F756E7420746F20636F766572206469"
										},
										{
											"begin": 10468,
											"end": 10486,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10468,
											"end": 10486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10468,
											"end": 10486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10461,
											"end": 10523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39BA3934B13ABA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10532,
											"end": 10572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10589,
											"end": 10608,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10589,
											"end": 10608,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17104,
											"end": 17229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 10208,
											"end": 10614,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17104,
											"end": 17229,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 17104,
											"end": 17229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17243,
											"end": 17366,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 17243,
											"end": 17366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17263,
											"end": 17264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17263,
											"end": 17284,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17243,
											"end": 17366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17243,
											"end": 17366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 17243,
											"end": 17366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17328,
											"end": 17329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17309,
											"end": 17340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 17341,
											"end": 17347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17348,
											"end": 17349,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 17309,
											"end": 17351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17286,
											"end": 17289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 17286,
											"end": 17289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 17286,
											"end": 17289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17286,
											"end": 17289,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 17286,
											"end": 17289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17243,
											"end": 17366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 17243,
											"end": 17366,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 18359,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 17057,
											"end": 18359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17403,
											"end": 17413,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17402,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17387,
											"end": 17414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17382,
											"end": 18359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 17382,
											"end": 18359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17480,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17472,
											"end": 17480,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17446,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17434,
											"end": 17446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17434,
											"end": 17446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17456,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 17434,
											"end": 17456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17457,
											"end": 17467,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17457,
											"end": 17467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 17434,
											"end": 17468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17480,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17430,
											"end": 18349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 17430,
											"end": 18349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17516,
											"end": 17526,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17500,
											"end": 17527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17500,
											"end": 17527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17500,
											"end": 17527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17500,
											"end": 17527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17500,
											"end": 17515,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17500,
											"end": 17527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17500,
											"end": 17527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17500,
											"end": 17527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17500,
											"end": 17527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17500,
											"end": 17527,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17500,
											"end": 17534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17500,
											"end": 17534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17500,
											"end": 17534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17530,
											"end": 17534,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17500,
											"end": 17534,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17500,
											"end": 17534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17500,
											"end": 17534,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17581,
											"end": 17590,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17581,
											"end": 17605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17581,
											"end": 17605,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 17552,
											"end": 17702,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17552,
											"end": 17702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17552,
											"end": 17702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10821,
											"end": 10823,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17552,
											"end": 17702,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17552,
											"end": 17702,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17552,
											"end": 17702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10803,
											"end": 10824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10860,
											"end": 10862,
											"name": "PUSH",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 10840,
											"end": 10858,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10840,
											"end": 10858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10833,
											"end": 10863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 10933,
											"name": "PUSH",
											"source": 1,
											"value": "686F6C64696E67207175616E74697479207472756520627574206D73672E7661"
										},
										{
											"begin": 10879,
											"end": 10897,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10879,
											"end": 10897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10879,
											"end": 10897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10872,
											"end": 10934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B1D59481D5B98D95C9D185A5B881C185E48195E1858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10950,
											"end": 10968,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10950,
											"end": 10968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10950,
											"end": 10968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10943,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11013,
											"end": 11032,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11013,
											"end": 11032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17552,
											"end": 17702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 10619,
											"end": 11038,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17552,
											"end": 17702,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 17552,
											"end": 17702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17720,
											"end": 17851,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 17720,
											"end": 17851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 17754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 17761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17740,
											"end": 17741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17740,
											"end": 17761,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17720,
											"end": 17851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17720,
											"end": 17851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 17720,
											"end": 17851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17809,
											"end": 17810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17790,
											"end": 17821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 17822,
											"end": 17828,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17829,
											"end": 17830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 17790,
											"end": 17832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17763,
											"end": 17766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17763,
											"end": 17766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 17763,
											"end": 17766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17763,
											"end": 17766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 17763,
											"end": 17766,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17763,
											"end": 17766,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 17763,
											"end": 17766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17763,
											"end": 17766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17763,
											"end": 17766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17763,
											"end": 17766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17720,
											"end": 17851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 17720,
											"end": 17851,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17430,
											"end": 18349,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 17430,
											"end": 18349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17912,
											"end": 17920,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17912,
											"end": 17920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17875,
											"end": 17887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17887,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17875,
											"end": 17887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17897,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 17875,
											"end": 17897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17898,
											"end": 17908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17898,
											"end": 17908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 17875,
											"end": 17909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17920,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 18349,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 18349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 17871,
											"end": 18349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17940,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17969,
											"end": 17980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17963,
											"end": 17966,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17963,
											"end": 17966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17963,
											"end": 17980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 17963,
											"end": 17980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17963,
											"end": 17980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17963,
											"end": 17980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 17963,
											"end": 17980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17963,
											"end": 17980,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 17963,
											"end": 17980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17940,
											"end": 17980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17940,
											"end": 17980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18040,
											"end": 18052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18027,
											"end": 18036,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18027,
											"end": 18052,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 17998,
											"end": 18137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18163,
											"end": 18171,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18163,
											"end": 18171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18163,
											"end": 18171,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18182,
											"end": 18185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18163,
											"end": 18171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18163,
											"end": 18171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18163,
											"end": 18171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18163,
											"end": 18171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18182,
											"end": 18185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18163,
											"end": 18171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18163,
											"end": 18171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18182,
											"end": 18185,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18163,
											"end": 18171,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18209,
											"end": 18218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18204,
											"end": 18335,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 18204,
											"end": 18335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18228,
											"end": 18238,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18228,
											"end": 18245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18245,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18204,
											"end": 18335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18204,
											"end": 18335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 18204,
											"end": 18335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18282,
											"end": 18292,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18282,
											"end": 18295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18274,
											"end": 18305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 18306,
											"end": 18312,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18313,
											"end": 18314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18306,
											"end": 18315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 18274,
											"end": 18316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18247,
											"end": 18250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 18247,
											"end": 18250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 18247,
											"end": 18250,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18247,
											"end": 18250,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 18247,
											"end": 18250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18204,
											"end": 18335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 18204,
											"end": 18335,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18204,
											"end": 18335,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 18204,
											"end": 18335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18204,
											"end": 18335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 18349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 18365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16693,
											"end": 18365,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 11338,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12406,
											"end": 12428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12406,
											"end": 12428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12398,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 12398,
											"end": 12471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12398,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12398,
											"end": 12471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12398,
											"end": 12471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12398,
											"end": 12471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11245,
											"end": 11247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12398,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12398,
											"end": 12471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12398,
											"end": 12471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11227,
											"end": 11248,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11284,
											"end": 11286,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11264,
											"end": 11282,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11264,
											"end": 11282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11264,
											"end": 11282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11257,
											"end": 11287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11357,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11303,
											"end": 11321,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11303,
											"end": 11321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11303,
											"end": 11321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11374,
											"end": 11392,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11374,
											"end": 11392,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11367,
											"end": 11403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11439,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11420,
											"end": 11439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12398,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 11043,
											"end": 11445,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12398,
											"end": 12471,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 12398,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12481,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 12500,
											"end": 12508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12481,
											"end": 12499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 12481,
											"end": 12509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12481,
											"end": 12509,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 12481,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12516,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 11338,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21825,
											"end": 21829,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21838,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 21817,
											"end": 21848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21809,
											"end": 21880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 21809,
											"end": 21880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21809,
											"end": 21880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21809,
											"end": 21880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21809,
											"end": 21880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21809,
											"end": 21880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11654,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21809,
											"end": 21880,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21809,
											"end": 21880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21809,
											"end": 21880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11634,
											"end": 11655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11691,
											"end": 11693,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 11671,
											"end": 11689,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11671,
											"end": 11689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 11689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11664,
											"end": 11694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C69642062616C616E636520746F207769746864726177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "28"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11710,
											"end": 11728,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11710,
											"end": 11728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11777,
											"end": 11795,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11777,
											"end": 11795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21809,
											"end": 21880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 11450,
											"end": 11801,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21809,
											"end": 21880,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 21809,
											"end": 21880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 21908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 21908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21919,
											"end": 21925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21919,
											"end": 21925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21919,
											"end": 21925,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 21908,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21933,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11603,
											"end": 11733,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11603,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11491,
											"end": 11498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11517,
											"end": 11523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11517,
											"end": 11523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10137,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11666,
											"end": 11689,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11658,
											"end": 11726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 11658,
											"end": 11726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11658,
											"end": 11726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11658,
											"end": 11726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11658,
											"end": 11726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11658,
											"end": 11726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11658,
											"end": 11726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11658,
											"end": 11726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11658,
											"end": 11726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11990,
											"end": 12011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11990,
											"end": 12011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11990,
											"end": 12011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12045,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12027,
											"end": 12045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12020,
											"end": 12050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12086,
											"end": 12120,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12066,
											"end": 12084,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12066,
											"end": 12084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12066,
											"end": 12084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12059,
											"end": 12121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12138,
											"end": 12156,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12138,
											"end": 12156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11658,
											"end": 11726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 11806,
											"end": 12162,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12670,
											"end": 12857,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 12670,
											"end": 12857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12762,
											"end": 12768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12762,
											"end": 12768,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12778,
											"end": 12795,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12778,
											"end": 12795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12778,
											"end": 12795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12778,
											"end": 12795,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12778,
											"end": 12795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12778,
											"end": 12795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12778,
											"end": 12795,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12778,
											"end": 12795,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12778,
											"end": 12795,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 12850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12810,
											"end": 12850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12762,
											"end": 12768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12762,
											"end": 12768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12762,
											"end": 12768,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12762,
											"end": 12768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12762,
											"end": 12768,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12762,
											"end": 12768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12762,
											"end": 12768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 12850,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 12810,
											"end": 12850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12810,
											"end": 12850,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12733,
											"end": 12857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12670,
											"end": 12857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12670,
											"end": 12857,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 150,
											"end": 465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 276,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 258,
											"end": 265,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 254,
											"end": 277,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 250,
											"end": 282,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 247,
											"end": 299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 247,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 247,
											"end": 299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 295,
											"end": 296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 247,
											"end": 299,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 247,
											"end": 299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 331,
											"end": 340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 318,
											"end": 341,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 341,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 393,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 376,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 363,
											"end": 395,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 404,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 429,
											"end": 434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 404,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 404,
											"end": 435,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 435,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 404,
											"end": 435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 454,
											"end": 459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 444,
											"end": 459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 444,
											"end": 459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 444,
											"end": 459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 652,
											"end": 981,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 652,
											"end": 981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 734,
											"end": 740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 795,
											"end": 797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 792,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 774,
											"end": 781,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 770,
											"end": 793,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 766,
											"end": 798,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 763,
											"end": 815,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 763,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 763,
											"end": 815,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 811,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 801,
											"end": 813,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 763,
											"end": 815,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 763,
											"end": 815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 850,
											"end": 859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 837,
											"end": 860,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 869,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 894,
											"end": 899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 869,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 869,
											"end": 900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 869,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 869,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 919,
											"end": 924,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 956,
											"end": 974,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 956,
											"end": 974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 956,
											"end": 974,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 956,
											"end": 974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 943,
											"end": 975,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 943,
											"end": 975,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 652,
											"end": 981,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 986,
											"end": 1233,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 986,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1084,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1101,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1163,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 1197,
											"end": 1202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 1172,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1233,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 986,
											"end": 1233,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1430,
											"end": 1633,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1430,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1594,
											"end": 1626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1633,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1638,
											"end": 1765,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 1638,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1709,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1694,
											"end": 1697,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1690,
											"end": 1710,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1734,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1727,
											"end": 1728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1751,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1759,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 2045,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1770,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 1844,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1906,
											"end": 1908,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1883,
											"end": 1910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1960,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1984,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1985,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2008,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 1920,
											"end": 2008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 2045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 2045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 2045,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2050,
											"end": 2233,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 2050,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2135,
											"end": 2141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2162,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2185,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2129,
											"end": 2185,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2165,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 2165,
											"end": 2183,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2165,
											"end": 2183,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2165,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2206,
											"end": 2220,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2233,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2238,
											"end": 2975,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 2238,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2345,
											"end": 2348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2342,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2349,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2312,
											"end": 2367,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2312,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2449,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2465,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2505,
											"end": 2507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 2465,
											"end": 2508,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2465,
											"end": 2508,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2465,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 2449,
											"end": 2509,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2449,
											"end": 2509,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2449,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2625,
											"end": 2635,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2625,
											"end": 2635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2625,
											"end": 2635,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2625,
											"end": 2635,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2636,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2668,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2668,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2668,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 2650,
											"end": 2685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 2682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2685,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 2650,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 2729,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2751,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2752,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2946,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 2729,
											"end": 2946,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2828,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2829,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 2842,
											"end": 2873,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2842,
											"end": 2873,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 2842,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2936,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2936,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2936,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2774,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 2729,
											"end": 2946,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 2729,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2964,
											"end": 2969,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2975,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2975,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 3642,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 2980,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3072,
											"end": 3078,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3091,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3054,
											"end": 3109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3054,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3171,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3207,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 3207,
											"end": 3250,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3191,
											"end": 3251,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3191,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3367,
											"end": 3377,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3377,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3377,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3378,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3427,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3392,
											"end": 3427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3425,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3427,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3392,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3461,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3613,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3471,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3494,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3613,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 3471,
											"end": 3613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3570,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3570,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3571,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3571,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3471,
											"end": 3613,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 4391,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3647,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3788,
											"end": 3794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3859,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3843,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3832,
											"end": 3855,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 3825,
											"end": 3877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3875,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3877,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 3825,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3899,
											"end": 3922,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 3956,
											"end": 3961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 3931,
											"end": 3962,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3931,
											"end": 3962,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 3931,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 3986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4037,
											"end": 4039,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4040,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4090,
											"end": 4104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4104,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 4087,
											"end": 4121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4115,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4107,
											"end": 4119,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4121,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 4087,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4193,
											"end": 4200,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4190,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4182,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 4140,
											"end": 4201,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4140,
											"end": 4201,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4140,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4201,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4258,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4303,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4267,
											"end": 4303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4300,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4301,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4303,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4267,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 4377,
											"end": 4384,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4364,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 4322,
											"end": 4385,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4322,
											"end": 4385,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 4322,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 4391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 4391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 4391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 4391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 4391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 4391,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4797,
											"end": 4799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4785,
											"end": 4794,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4783,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4795,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4800,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4810,
											"end": 4811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4815,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 4765,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4840,
											"end": 4863,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4926,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4939,
											"end": 4940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4936,
											"end": 4937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4909,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5004,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 4962,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4952,
											"end": 5023,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4952,
											"end": 5023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5065,
											"end": 5074,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5061,
											"end": 5079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5048,
											"end": 5080,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5105,
											"end": 5107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5119,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 5199,
											"end": 5206,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 5144,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 5213,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5442,
											"end": 5622,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5442,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5540,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5552,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5567,
											"end": 5568,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5572,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5593,
											"end": 5616,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5616,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5442,
											"end": 5622,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5627,
											"end": 5811,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5627,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5738,
											"end": 5747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5736,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5748,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5721,
											"end": 5753,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5766,
											"end": 5767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5768,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5789,
											"end": 5805,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5627,
											"end": 5811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5627,
											"end": 5811,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6528,
											"end": 6873,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6528,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6732,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6712,
											"end": 6733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6771,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1BDAD95B881A1BDB191A5B99C81A5B9D985B1A59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6805,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6866,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6873,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7221,
											"end": 7558,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7221,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7425,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7405,
											"end": 7426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7464,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 7442,
											"end": 7460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7442,
											"end": 7460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7442,
											"end": 7460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 7465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A59081A5B9C1D5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7496,
											"end": 7498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7481,
											"end": 7499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7481,
											"end": 7499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7474,
											"end": 7517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7551,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7558,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7563,
											"end": 7690,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 7563,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7634,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7619,
											"end": 7622,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7615,
											"end": 7635,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7605,
											"end": 7636,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7652,
											"end": 7653,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7683,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7676,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7669,
											"end": 7684,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7695,
											"end": 8070,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 7695,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7953,
											"end": 7968,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 7968,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 7968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7935,
											"end": 7969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8002,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7985,
											"end": 8003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8037,
											"end": 8055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8037,
											"end": 8055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8030,
											"end": 8064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8030,
											"end": 8064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8030,
											"end": 8064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8030,
											"end": 8064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7885,
											"end": 7887,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7870,
											"end": 7888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7695,
											"end": 8070,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8075,
											"end": 8352,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8075,
											"end": 8352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8195,
											"end": 8197,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8183,
											"end": 8192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8181,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8170,
											"end": 8193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8166,
											"end": 8198,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8215,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 8163,
											"end": 8215,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8212,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8208,
											"end": 8209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8215,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 8163,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8253,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8289,
											"end": 8302,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8282,
											"end": 8303,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8275,
											"end": 8280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8272,
											"end": 8304,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 8262,
											"end": 8322,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8318,
											"end": 8319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8315,
											"end": 8316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8308,
											"end": 8320,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8357,
											"end": 8702,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8357,
											"end": 8702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8559,
											"end": 8561,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8541,
											"end": 8562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8571,
											"end": 8601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B93937B91034B7103234B9BA3934B13ABA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8632,
											"end": 8634,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8617,
											"end": 8635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8617,
											"end": 8635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8610,
											"end": 8661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 8695,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8357,
											"end": 8702,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8707,
											"end": 8834,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 8707,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8768,
											"end": 8778,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8763,
											"end": 8766,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8759,
											"end": 8779,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8756,
											"end": 8757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8749,
											"end": 8780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8796,
											"end": 8797,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8789,
											"end": 8804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8820,
											"end": 8821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8828,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8974,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8839,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 8881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8916,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8899,
											"end": 8916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8896,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 8896,
											"end": 8939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8919,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 8919,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 8919,
											"end": 8937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8919,
											"end": 8937,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 8919,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8955,
											"end": 8968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8955,
											"end": 8968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8974,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8979,
											"end": 9386,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 8979,
											"end": 9386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9181,
											"end": 9183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9163,
											"end": 9184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9184,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9220,
											"end": 9222,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9193,
											"end": 9223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9293,
											"name": "PUSH",
											"source": 1,
											"value": "686F6C64696E67202620617574686F72697A6174696F6E2066616C7365207061"
										},
										{
											"begin": 9254,
											"end": 9256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7920657861637420666565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9325,
											"end": 9327,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9310,
											"end": 9328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9310,
											"end": 9328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9376,
											"end": 9379,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9361,
											"end": 9380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9361,
											"end": 9380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 9386,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10075,
											"end": 10203,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 10075,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10115,
											"end": 10118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10146,
											"end": 10147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10148,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10139,
											"end": 10140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10172,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 10133,
											"end": 10172,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10152,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 10152,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 10152,
											"end": 10170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10152,
											"end": 10170,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 10152,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10188,
											"end": 10197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10188,
											"end": 10197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10203,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"SetTokenToholdAndQuantity(address,uint256)": "2fc75eb0",
							"TOKENmultisender(address,address[],uint256[])": "9cbd3433",
							"authorizeUser(address)": "67c2a360",
							"authorizedusers(address)": "44b6209d",
							"coinMultisender(address[],uint256[])": "d908e6ce",
							"contractBalance()": "8b7afe2e",
							"fee()": "ddca3f43",
							"getTokenBalance(address)": "3aecd0e3",
							"owner()": "8da5cb5b",
							"quantity()": "17fc45e2",
							"readAuthorizedUsers(address)": "a4df0256",
							"receiver()": "f7260d3e",
							"renounceOwnership()": "715018a6",
							"setfeeToUse(uint256,address)": "126ccd94",
							"tokenAddress()": "9d76ea58",
							"transferOwnership(address)": "f2fde38b",
							"unauthorizeUser(address)": "478aa69e",
							"withdrawCoins(uint256)": "f9f95a0f",
							"withdrawToken(address,uint256)": "9e281a98"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"SetTokenToholdAndQuantity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TOKENmultisender\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"authorizeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedusers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"coinMultisender\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quantity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"readAuthorizedUsers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newfee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"setfeeToUse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"unauthorizeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCoins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SnipeFinanceMultisenders_flattened.sol\":\"SnipeFinanceMultisenders\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"contracts/SnipeFinanceMultisenders_flattened.sol\":{\"keccak256\":\"0x493232e25f30c3d13942ffa7b4d3c1a7c03d80f038a62a4ca53c70593f79f4fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d124a0d3287305e7850f7ed93effbf452e0feb745b27ece9970bcb52dc8f34b\",\"dweb:/ipfs/QmaPG5hq116EADveEBzw8w7UJvb9yfg4ZbkYJxcvPGp4bZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 356,
								"contract": "contracts/SnipeFinanceMultisenders_flattened.sol:SnipeFinanceMultisenders",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 546,
								"contract": "contracts/SnipeFinanceMultisenders_flattened.sol:SnipeFinanceMultisenders",
								"label": "fee",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "contracts/SnipeFinanceMultisenders_flattened.sol:SnipeFinanceMultisenders",
								"label": "receiver",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 552,
								"contract": "contracts/SnipeFinanceMultisenders_flattened.sol:SnipeFinanceMultisenders",
								"label": "authorizedusers",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 555,
								"contract": "contracts/SnipeFinanceMultisenders_flattened.sol:SnipeFinanceMultisenders",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IERC20)538"
							},
							{
								"astId": 557,
								"contract": "contracts/SnipeFinanceMultisenders_flattened.sol:SnipeFinanceMultisenders",
								"label": "quantity",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)538": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/SnipeFinanceMultisenders_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/SnipeFinanceMultisenders_flattened.sol",
					"exportedSymbols": {
						"Address": [
							329
						],
						"Context": [
							350
						],
						"IERC20": [
							538
						],
						"Ownable": [
							461
						],
						"SnipeFinanceMultisenders": [
							1151
						]
					},
					"id": 1152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "148:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "Address",
							"nameLocation": "224:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1500:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1724:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1724:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1724:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1746:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1724:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1717:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "238:1191:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1443:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1462:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1454:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1453:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1494:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1494:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1493:6:0"
									},
									"scope": 329,
									"src": "1434:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2740:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2766:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2758:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2758:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2758:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2758:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2783:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2758:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2791:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2750:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2750:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2840:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2835:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2835:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2883:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2853:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2853:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2875:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2853:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2853:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2834:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2904:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2913:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2896:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2896:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2896:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1760:904:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2678:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2704:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2688:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2723:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2715:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2687:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2740:0:0"
									},
									"scope": 329,
									"src": "2669:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3812:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3851:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3859:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3865:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3868:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "3829:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3829:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 67,
												"nodeType": "Return",
												"src": "3822:79:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2987:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3732:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3753:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3745:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3774:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3761:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3761:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3798:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3798:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3797:14:0"
									},
									"scope": 329,
									"src": "3723:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "4277:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4316:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 83,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4324:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4330:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 85,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "4333:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 81,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "4294:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 80,
												"id": 87,
												"nodeType": "Return",
												"src": "4287:59:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3914:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4139:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4169:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4161:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4198:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4185:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 73,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4185:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4226:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4212:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4212:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4151:93:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4263:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4263:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4262:14:0"
									},
									"scope": 329,
									"src": "4130:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "4828:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4867:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 103,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4875:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 104,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4881:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4888:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 101,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "4845:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4845:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 100,
												"id": 107,
												"nodeType": "Return",
												"src": "4838:94:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "4359:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4724:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4754:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4746:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4775:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4762:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 93,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4762:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4789:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4781:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4745:50:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4814:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4814:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4813:14:0"
									},
									"scope": 329,
									"src": "4715:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "5366:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 126,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5392:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		],
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5384:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 124,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5384:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5384:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5384:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 129,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5409:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5384:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5416:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5376:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5376:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "5376:81:0"
											},
											{
												"assignments": [
													135,
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5473:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "5468:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 134,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5468:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5495:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "5482:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 136,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5482:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"arguments": [
														{
															"id": 142,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "5535:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 138,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "5509:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5509:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 140,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5528:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5509:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5509:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5467:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5584:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "5592:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 148,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "5601:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 149,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "5613:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 145,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5557:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5557:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 151,
												"nodeType": "Return",
												"src": "5550:76:0"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "4945:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5196:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5235:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5227:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5251:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5286:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5278:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5315:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5301:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5217:116:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5352:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5351:14:0"
									},
									"scope": 329,
									"src": "5187:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "5910:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "5946:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 165,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "5954:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5960:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 163,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															199
														],
														"referencedDeclaration": 199,
														"src": "5927:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5927:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "5920:80:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "5639:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5819:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5846:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5838:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5867:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5854:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5854:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5837:35:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5896:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5896:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:14:0"
									},
									"scope": 329,
									"src": "5810:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "6349:168:0",
										"statements": [
											{
												"assignments": [
													183,
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 183,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6365:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "6360:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 182,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6360:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6387:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "6374:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 184,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6374:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 190,
												"initialValue": {
													"arguments": [
														{
															"id": 188,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "6419:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 186,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "6401:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6401:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6401:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6359:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "6468:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "6476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 194,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6485:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 195,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6497:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 191,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "6441:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6441:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 181,
												"id": 197,
												"nodeType": "Return",
												"src": "6434:76:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "6013:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6200:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6236:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6228:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6265:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6252:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6252:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6293:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6279:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6279:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6218:93:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6335:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6334:14:0"
									},
									"scope": 329,
									"src": "6191:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "6793:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 210,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6831:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 211,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "6839:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6845:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 209,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															216,
															245
														],
														"referencedDeclaration": 245,
														"src": "6810:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6810:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 208,
												"id": 214,
												"nodeType": "Return",
												"src": "6803:84:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "6523:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6705:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6734:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6726:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6755:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6742:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6742:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6725:35:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6779:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:14:0"
									},
									"scope": 329,
									"src": "6696:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "7235:170:0",
										"statements": [
											{
												"assignments": [
													229,
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7251:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "7246:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 231,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7273:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "7260:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 230,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7260:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "7307:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 232,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7287:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7287:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7287:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7245:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7356:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 239,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 240,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7373:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 241,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "7385:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 237,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "7329:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7329:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 227,
												"id": 243,
												"nodeType": "Return",
												"src": "7322:76:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "6900:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7089:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7127:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7119:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7156:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7143:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7143:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7184:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7170:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 222,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7170:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7109:93:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7221:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7221:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7220:14:0"
									},
									"scope": 329,
									"src": "7080:325:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "7887:434:0",
										"statements": [
											{
												"condition": {
													"id": 259,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "8257:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "8279:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 278,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "8291:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 276,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "8271:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8271:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "ExpressionStatement",
															"src": "8271:33:0"
														}
													]
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "7897:418:0",
												"trueBody": {
													"id": 275,
													"nodeType": "Block",
													"src": "7910:341:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 260,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "7928:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7928:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7949:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7928:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "IfStatement",
															"src": "7924:286:0",
															"trueBody": {
																"id": 271,
																"nodeType": "Block",
																"src": "7952:258:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 266,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 248,
																							"src": "8154:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 265,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 17,
																						"src": "8143:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 267,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8143:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 268,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8163:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 264,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8135:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8135:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 270,
																		"nodeType": "ExpressionStatement",
																		"src": "8135:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 273,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "8230:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 258,
															"id": 274,
															"nodeType": "Return",
															"src": "8223:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "7411:277:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7702:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7746:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7738:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7767:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7762:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7762:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7797:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7784:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7784:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7831:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7817:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7817:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7728:121:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7873:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7873:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7872:14:0"
									},
									"scope": 329,
									"src": "7693:628:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "8702:135:0",
										"statements": [
											{
												"condition": {
													"id": 296,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "8716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 305,
													"nodeType": "Block",
													"src": "8773:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "8795:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 302,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "8807:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 300,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "8787:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8787:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 304,
															"nodeType": "ExpressionStatement",
															"src": "8787:33:0"
														}
													]
												},
												"id": 306,
												"nodeType": "IfStatement",
												"src": "8712:119:0",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "8725:42:0",
													"statements": [
														{
															"expression": {
																"id": 297,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "8746:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 295,
															"id": 298,
															"nodeType": "Return",
															"src": "8739:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "8327:210:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8551:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8577:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8577:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8612:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8599:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8599:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8646:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8632:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8632:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8567:97:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8688:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8688:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8687:14:0"
									},
									"scope": 329,
									"src": "8542:295:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "8926:457:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 315,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "9002:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9002:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9022:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9002:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 325,
													"nodeType": "Block",
													"src": "9332:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 322,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "9353:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 321,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9346:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 324,
															"nodeType": "ExpressionStatement",
															"src": "9346:20:0"
														}
													]
												},
												"id": 326,
												"nodeType": "IfStatement",
												"src": "8998:379:0",
												"trueBody": {
													"id": 320,
													"nodeType": "Block",
													"src": "9025:301:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9183:133:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9201:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9230:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9224:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9224:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9205:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9269:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9273:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9265:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9265:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9286:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9258:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9258:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9258:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "petersburg",
															"externalReferences": [
																{
																	"declaration": 310,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9230:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 310,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9273:10:0",
																	"valueSize": 1
																}
															],
															"id": 319,
															"nodeType": "InlineAssembly",
															"src": "9174:142:0"
														}
													]
												}
											}
										]
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8852:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8873:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8860:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8860:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8899:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8885:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8885:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8859:53:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8926:0:0"
									},
									"scope": 329,
									"src": "8843:540:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1152,
							"src": "216:9169:0",
							"usedErrors": []
						},
						{
							"id": 330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "9494:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 331,
								"nodeType": "StructuredDocumentation",
								"src": "9519:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 350,
							"linearizedBaseContracts": [
								350
							],
							"name": "Context",
							"nameLocation": "10034:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "10110:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 336,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "10127:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "10127:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 335,
												"id": 338,
												"nodeType": "Return",
												"src": "10120:17:0"
											}
										]
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "10057:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10067:2:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "10101:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10100:9:0"
									},
									"scope": 350,
									"src": "10048:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "10217:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 345,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "10234:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "10234:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 344,
												"id": 347,
												"nodeType": "Return",
												"src": "10227:15:0"
											}
										]
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "10159:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10167:2:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "10201:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10201:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10200:16:0"
									},
									"scope": 350,
									"src": "10150:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1152,
							"src": "10016:235:0",
							"usedErrors": []
						},
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "10377:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 353,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 350,
										"src": "10927:7:0"
									},
									"id": 354,
									"nodeType": "InheritanceSpecifier",
									"src": "10927:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 352,
								"nodeType": "StructuredDocumentation",
								"src": "10403:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 461,
							"linearizedBaseContracts": [
								461,
								350
							],
							"name": "Ownable",
							"nameLocation": "10916:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 356,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "10957:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 461,
									"src": "10941:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 355,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10941:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 362,
									"name": "OwnershipTransferred",
									"nameLocation": "10976:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "11013:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10997:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "11044:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "11028:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11028:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10996:57:0"
									},
									"src": "10970:84:0"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "11170:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 367,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "11199:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11199:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 366,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "11180:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11180:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "11180:32:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "11060:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 372,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11167:2:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11170:0:0"
									},
									"scope": 461,
									"src": "11156:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "11328:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "11338:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11338:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "11338:13:0"
											},
											{
												"id": 378,
												"nodeType": "PlaceholderStatement",
												"src": "11361:1:0"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "11225:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 380,
									"name": "onlyOwner",
									"nameLocation": "11316:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11325:2:0"
									},
									"src": "11307:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "11500:30:0",
										"statements": [
											{
												"expression": {
													"id": 386,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 356,
													"src": "11517:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 385,
												"id": 387,
												"nodeType": "Return",
												"src": "11510:13:0"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "11375:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "11454:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11459:2:0"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "11491:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11490:9:0"
									},
									"scope": 461,
									"src": "11445:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "11648:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 394,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "11666:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11666:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 396,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "11677:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11677:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11666:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11691:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11658:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11658:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "11658:68:0"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "11536:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "11612:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11623:2:0"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11648:0:0"
									},
									"scope": 461,
									"src": "11603:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "12122:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12159:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12151:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 410,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12151:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12151:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 409,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "12132:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12132:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "12132:30:0"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "11739:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 407,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 406,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "12112:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12112:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "12077:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12094:2:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12122:0:0"
									},
									"scope": 461,
									"src": "12068:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "12388:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 426,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "12406:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12426:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12418:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 427,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12418:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12418:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12406:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12430:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12398:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "12398:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "12500:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 435,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "12481:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12481:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "12481:28:0"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "12175:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 423,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 422,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "12378:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12378:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "12327:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "12353:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "12345:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12344:18:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12388:0:0"
									},
									"scope": 461,
									"src": "12318:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "12733:124:0",
										"statements": [
											{
												"assignments": [
													447
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "12751:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "12743:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 446,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12743:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 449,
												"initialValue": {
													"id": 448,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 356,
													"src": "12762:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12743:25:0"
											},
											{
												"expression": {
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 450,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "12778:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 451,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "12787:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12778:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "12778:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 455,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "12831:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "12841:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 454,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "12810:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12810:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "EmitStatement",
												"src": "12805:45:0"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "12522:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "12679:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "12706:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "12698:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12697:18:0"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12733:0:0"
									},
									"scope": 461,
									"src": "12670:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1152,
							"src": "10898:1961:0",
							"usedErrors": []
						},
						{
							"id": 462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "12993:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 463,
								"nodeType": "StructuredDocumentation",
								"src": "13018:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 538,
							"linearizedBaseContracts": [
								538
							],
							"name": "IERC20",
							"nameLocation": "13099:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "13112:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 472,
									"name": "Transfer",
									"nameLocation": "13281:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13306:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "13290:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13328:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "13312:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13340:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "13332:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13289:57:0"
									},
									"src": "13275:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "13353:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 481,
									"name": "Approval",
									"nameLocation": "13512:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13537:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "13521:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13560:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "13544:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13577:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "13569:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13520:63:0"
									},
									"src": "13506:78:0"
								},
								{
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "13590:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13670:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13681:2:0"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "13707:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13706:9:0"
									},
									"scope": 538,
									"src": "13661:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "13722:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13808:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13826:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "13818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13817:17:0"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "13858:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13857:9:0"
									},
									"scope": 538,
									"src": "13799:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "13873:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14089:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14106:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "14098:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14098:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "14110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14097:28:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "14144:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14144:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14143:6:0"
									},
									"scope": 538,
									"src": "14080:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "14156:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14434:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14452:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "14444:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14467:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "14459:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14443:32:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "14499:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14498:9:0"
									},
									"scope": 538,
									"src": "14425:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "14514:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15170:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15186:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "15178:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15178:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15203:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "15195:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15177:33:0"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "15229:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15228:6:0"
									},
									"scope": 538,
									"src": "15161:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "15241:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15542:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15563:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "15555:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15577:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "15569:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15589:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "15581:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15554:42:0"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "15615:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 534,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15615:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15614:6:0"
									},
									"scope": 538,
									"src": "15533:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1152,
							"src": "13089:2534:0",
							"usedErrors": []
						},
						{
							"id": 539,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "15705:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 540,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 461,
										"src": "16028:7:0"
									},
									"id": 541,
									"nodeType": "InheritanceSpecifier",
									"src": "16028:7:0"
								}
							],
							"canonicalName": "SnipeFinanceMultisenders",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1151,
							"linearizedBaseContracts": [
								1151,
								461,
								350
							],
							"name": "SnipeFinanceMultisenders",
							"nameLocation": "16000:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 544,
									"libraryName": {
										"id": 542,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 329,
										"src": "16048:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "16042:26:0",
									"typeName": {
										"id": 543,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16060:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "ddca3f43",
									"id": 546,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "16088:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 1151,
									"src": "16073:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "16073:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7260d3e",
									"id": 548,
									"mutability": "mutable",
									"name": "receiver",
									"nameLocation": "16120:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1151,
									"src": "16097:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 547,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16097:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "44b6209d",
									"id": 552,
									"mutability": "mutable",
									"name": "authorizedusers",
									"nameLocation": "16192:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1151,
									"src": "16160:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 551,
										"keyType": {
											"id": 549,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "16168:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "16160:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 550,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "16179:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 555,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "16227:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1151,
									"src": "16213:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$538",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 554,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 553,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 538,
											"src": "16213:6:0"
										},
										"referencedDeclaration": 538,
										"src": "16213:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$538",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17fc45e2",
									"id": 557,
									"mutability": "mutable",
									"name": "quantity",
									"nameLocation": "16307:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1151,
									"src": "16292:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 556,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "16292:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "16396:70:0",
										"statements": [
											{
												"expression": {
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 560,
														"name": "receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "16406:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 563,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "16425:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16425:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16417:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 561,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16417:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16417:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "16406:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "16406:27:0"
											},
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 568,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "16443:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_100000000000000_by_1",
															"typeString": "int_const 100000000000000"
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31",
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16449:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_100000000000000_by_1",
																"typeString": "int_const 100000000000000"
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16453:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3134",
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16457:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_14_by_1",
																	"typeString": "int_const 14"
																},
																"value": "14"
															},
															"src": "16453:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000_by_1",
																"typeString": "int_const 100000000000000"
															}
														},
														"src": "16449:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000_by_1",
															"typeString": "int_const 100000000000000"
														}
													},
													"src": "16443:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "16443:16:0"
											}
										]
									},
									"id": 577,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16393:2:0"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16396:0:0"
									},
									"scope": 1151,
									"src": "16382:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "16590:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "16616:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$538",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$538",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16608:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 580,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16608:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16608:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16641:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16633:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 584,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16633:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16633:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16608:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6b656e20686f6c64696e6720696e76616c6964",
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16645:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a6cc60d48549f2b79fa7c56847ec072da3ccce4bd39fca877825249a1e26989",
																"typeString": "literal_string \"token holding invalid\""
															},
															"value": "token holding invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a6cc60d48549f2b79fa7c56847ec072da3ccce4bd39fca877825249a1e26989",
																"typeString": "literal_string \"token holding invalid\""
															}
														],
														"id": 579,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16600:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "16600:69:0"
											},
											{
												"id": 592,
												"nodeType": "PlaceholderStatement",
												"src": "16679:1:0"
											}
										]
									},
									"id": 594,
									"name": "tokenChecker",
									"nameLocation": "16575:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16587:2:0"
									},
									"src": "16566:121:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "16824:1541:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 606,
																	"name": "recipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "16867:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16867:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 608,
																	"name": "values",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "16888:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16888:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16867:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420696e707574",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16903:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbab81719f15ade78f76dcdbf7cff531fc5f9822fe7e8466ffdd2feb23510f3b",
																"typeString": "literal_string \"invalid input\""
															},
															"value": "invalid input"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbab81719f15ade78f76dcdbf7cff531fc5f9822fe7e8466ffdd2feb23510f3b",
																"typeString": "literal_string \"invalid input\""
															}
														],
														"id": 605,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16859:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16859:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "16859:60:0"
											},
											{
												"assignments": [
													615
												],
												"declarations": [
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "totalValues",
														"nameLocation": "16937:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 786,
														"src": "16929:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 614,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16929:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"nodeType": "VariableDeclarationStatement",
												"src": "16929:19:0"
											},
											{
												"body": {
													"id": 633,
													"nodeType": "Block",
													"src": "16998:49:0",
													"statements": [
														{
															"expression": {
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 627,
																	"name": "totalValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "17012:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 628,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "17027:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 630,
																	"indexExpression": {
																		"id": 629,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "17034:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17027:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17012:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "17012:24:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 620,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "16974:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 621,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "16978:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16978:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16974:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 634,
												"initializationExpression": {
													"assignments": [
														618
													],
													"declarations": [
														{
															"constant": false,
															"id": 618,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "16971:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 634,
															"src": "16963:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 617,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16963:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 619,
													"nodeType": "VariableDeclarationStatement",
													"src": "16963:9:0"
												},
												"loopExpression": {
													"expression": {
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "16993:3:0",
														"subExpression": {
															"id": 624,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "16993:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 626,
													"nodeType": "ExpressionStatement",
													"src": "16993:3:0"
												},
												"nodeType": "ForStatement",
												"src": "16958:89:0"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 635,
														"name": "authorizedusers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "17061:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 638,
													"indexExpression": {
														"expression": {
															"id": 636,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "17077:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "17077:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17061:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "17386:28:0",
														"subExpression": {
															"baseExpression": {
																"id": 673,
																"name": "authorizedusers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "17387:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 676,
															"indexExpression": {
																"expression": {
																	"id": 674,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "17403:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "17403:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17387:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 784,
													"nodeType": "IfStatement",
													"src": "17382:977:0",
													"trueBody": {
														"id": 783,
														"nodeType": "Block",
														"src": "17416:943:0",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 680,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "17457:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "17457:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 678,
																				"name": "tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 555,
																				"src": "17434:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$538",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 495,
																			"src": "17434:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17434:34:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 683,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "17472:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17434:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 728,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "17898:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 729,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "17898:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 726,
																					"name": "tokenAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 555,
																					"src": "17875:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$538",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 495,
																				"src": "17875:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17875:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 731,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 557,
																			"src": "17912:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17875:45:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 781,
																	"nodeType": "IfStatement",
																	"src": "17871:478:0",
																	"trueBody": {
																		"id": 780,
																		"nodeType": "Block",
																		"src": "17922:427:0",
																		"statements": [
																			{
																				"assignments": [
																					734
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 734,
																						"mutability": "mutable",
																						"name": "toBeIncluded",
																						"nameLocation": "17948:12:0",
																						"nodeType": "VariableDeclaration",
																						"scope": 780,
																						"src": "17940:20:0",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 733,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "17940:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 738,
																				"initialValue": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 737,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 735,
																						"name": "fee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 546,
																						"src": "17963:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 736,
																						"name": "totalValues",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 615,
																						"src": "17969:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "17963:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "17940:40:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 743,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 740,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "18027:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 741,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "value",
																								"nodeType": "MemberAccess",
																								"src": "18027:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 742,
																								"name": "toBeIncluded",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 734,
																								"src": "18040:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "18027:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "686f6c64696e67202620617574686f72697a6174696f6e2066616c73652070617920657861637420666565",
																							"id": 744,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "18074:45:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_137df310803ee84d23f123870fcea3fa051f1a17a2a89c034789caae5279ebf8",
																								"typeString": "literal_string \"holding & authorization false pay exact fee\""
																							},
																							"value": "holding & authorization false pay exact fee"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_137df310803ee84d23f123870fcea3fa051f1a17a2a89c034789caae5279ebf8",
																								"typeString": "literal_string \"holding & authorization false pay exact fee\""
																							}
																						],
																						"id": 739,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "17998:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 745,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17998:139:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 746,
																				"nodeType": "ExpressionStatement",
																				"src": "17998:139:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 752,
																							"name": "fee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 546,
																							"src": "18182:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"id": 749,
																									"name": "receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 548,
																									"src": "18163:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address_payable",
																										"typeString": "address payable"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address_payable",
																										"typeString": "address payable"
																									}
																								],
																								"id": 748,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "18155:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_payable_$",
																									"typeString": "type(address payable)"
																								},
																								"typeName": {
																									"id": 747,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "18155:8:0",
																									"stateMutability": "payable",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 750,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "18155:17:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"id": 751,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "transfer",
																						"nodeType": "MemberAccess",
																						"src": "18155:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																							"typeString": "function (uint256)"
																						}
																					},
																					"id": 753,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "18155:31:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 754,
																				"nodeType": "ExpressionStatement",
																				"src": "18155:31:0"
																			},
																			{
																				"body": {
																					"id": 778,
																					"nodeType": "Block",
																					"src": "18252:83:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"baseExpression": {
																											"id": 773,
																											"name": "values",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 600,
																											"src": "18306:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																												"typeString": "uint256[] memory"
																											}
																										},
																										"id": 775,
																										"indexExpression": {
																											"id": 774,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 756,
																											"src": "18313:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "18306:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"arguments": [
																											{
																												"baseExpression": {
																													"id": 768,
																													"name": "recipients",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 597,
																													"src": "18282:10:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																														"typeString": "address[] memory"
																													}
																												},
																												"id": 770,
																												"indexExpression": {
																													"id": 769,
																													"name": "i",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 756,
																													"src": "18293:1:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "18282:13:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											],
																											"id": 767,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "18274:8:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_address_payable_$",
																												"typeString": "type(address payable)"
																											},
																											"typeName": {
																												"id": 766,
																												"name": "address",
																												"nodeType": "ElementaryTypeName",
																												"src": "18274:8:0",
																												"stateMutability": "payable",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 771,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "18274:22:0",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_address_payable",
																											"typeString": "address payable"
																										}
																									},
																									"id": 772,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "transfer",
																									"nodeType": "MemberAccess",
																									"src": "18274:31:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																										"typeString": "function (uint256)"
																									}
																								},
																								"id": 776,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "18274:42:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 777,
																							"nodeType": "ExpressionStatement",
																							"src": "18274:42:0"
																						}
																					]
																				},
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 762,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 759,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 756,
																						"src": "18224:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<",
																					"rightExpression": {
																						"expression": {
																							"id": 760,
																							"name": "recipients",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 597,
																							"src": "18228:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																								"typeString": "address[] memory"
																							}
																						},
																						"id": 761,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "18228:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "18224:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 779,
																				"initializationExpression": {
																					"assignments": [
																						756
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 756,
																							"mutability": "mutable",
																							"name": "i",
																							"nameLocation": "18217:1:0",
																							"nodeType": "VariableDeclaration",
																							"scope": 779,
																							"src": "18209:9:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 755,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "18209:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 758,
																					"initialValue": {
																						"hexValue": "30",
																						"id": 757,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "18221:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "18209:13:0"
																				},
																				"loopExpression": {
																					"expression": {
																						"id": 764,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "18247:3:0",
																						"subExpression": {
																							"id": 763,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 756,
																							"src": "18247:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 765,
																					"nodeType": "ExpressionStatement",
																					"src": "18247:3:0"
																				},
																				"nodeType": "ForStatement",
																				"src": "18204:131:0"
																			}
																		]
																	}
																},
																"id": 782,
																"nodeType": "IfStatement",
																"src": "17430:919:0",
																"trueBody": {
																	"id": 725,
																	"nodeType": "Block",
																	"src": "17482:383:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"baseExpression": {
																						"id": 685,
																						"name": "authorizedusers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 552,
																						"src": "17500:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																							"typeString": "mapping(address => bool)"
																						}
																					},
																					"id": 688,
																					"indexExpression": {
																						"expression": {
																							"id": 686,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "17516:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 687,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "17516:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "17500:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "74727565",
																					"id": 689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "17530:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"src": "17500:34:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 691,
																			"nodeType": "ExpressionStatement",
																			"src": "17500:34:0"
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 696,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 693,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "17581:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 694,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "value",
																							"nodeType": "MemberAccess",
																							"src": "17581:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"id": 695,
																							"name": "totalValues",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 615,
																							"src": "17594:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "17581:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"hexValue": "686f6c64696e67207175616e74697479207472756520627574206d73672e76616c756520756e6365727461696e20706179206578616374",
																						"id": 697,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17627:57:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_ead087751ee72390abf94c065c146a7a9dbeacfb318a2e1d7864a935edc603fc",
																							"typeString": "literal_string \"holding quantity true but msg.value uncertain pay exact\""
																						},
																						"value": "holding quantity true but msg.value uncertain pay exact"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_ead087751ee72390abf94c065c146a7a9dbeacfb318a2e1d7864a935edc603fc",
																							"typeString": "literal_string \"holding quantity true but msg.value uncertain pay exact\""
																						}
																					],
																					"id": 692,
																					"name": "require",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967278,
																						4294967278
																					],
																					"referencedDeclaration": 4294967278,
																					"src": "17552:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (bool,string memory) pure"
																					}
																				},
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17552:150:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 699,
																			"nodeType": "ExpressionStatement",
																			"src": "17552:150:0"
																		},
																		{
																			"body": {
																				"id": 723,
																				"nodeType": "Block",
																				"src": "17768:83:0",
																				"statements": [
																					{
																						"expression": {
																							"arguments": [
																								{
																									"baseExpression": {
																										"id": 718,
																										"name": "values",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 600,
																										"src": "17822:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																											"typeString": "uint256[] memory"
																										}
																									},
																									"id": 720,
																									"indexExpression": {
																										"id": 719,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 701,
																										"src": "17829:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "17822:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"baseExpression": {
																												"id": 713,
																												"name": "recipients",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 597,
																												"src": "17798:10:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																													"typeString": "address[] memory"
																												}
																											},
																											"id": 715,
																											"indexExpression": {
																												"id": 714,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 701,
																												"src": "17809:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "17798:13:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"id": 712,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "17790:8:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_payable_$",
																											"typeString": "type(address payable)"
																										},
																										"typeName": {
																											"id": 711,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "17790:8:0",
																											"stateMutability": "payable",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 716,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "17790:22:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address_payable",
																										"typeString": "address payable"
																									}
																								},
																								"id": 717,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "transfer",
																								"nodeType": "MemberAccess",
																								"src": "17790:31:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																									"typeString": "function (uint256)"
																								}
																							},
																							"id": 721,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "17790:42:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 722,
																						"nodeType": "ExpressionStatement",
																						"src": "17790:42:0"
																					}
																				]
																			},
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 704,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "17740:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"expression": {
																						"id": 705,
																						"name": "recipients",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 597,
																						"src": "17744:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 706,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "17744:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17740:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 724,
																			"initializationExpression": {
																				"assignments": [
																					701
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 701,
																						"mutability": "mutable",
																						"name": "i",
																						"nameLocation": "17733:1:0",
																						"nodeType": "VariableDeclaration",
																						"scope": 724,
																						"src": "17725:9:0",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 700,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "17725:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 703,
																				"initialValue": {
																					"hexValue": "30",
																					"id": 702,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "17737:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "17725:13:0"
																			},
																			"loopExpression": {
																				"expression": {
																					"id": 709,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "17763:3:0",
																					"subExpression": {
																						"id": 708,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 701,
																						"src": "17763:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 710,
																				"nodeType": "ExpressionStatement",
																				"src": "17763:3:0"
																			},
																			"nodeType": "ForStatement",
																			"src": "17720:131:0"
																		}
																	]
																}
															}
														]
													}
												},
												"id": 785,
												"nodeType": "IfStatement",
												"src": "17057:1302:0",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "17090:286:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 640,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "17129:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "17129:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 642,
																			"name": "totalValues",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 615,
																			"src": "17142:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17129:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "7061792074686520657861637420616d6f756e7420746f20636f76657220646973747269627574696f6e",
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17171:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c36446f4599a87e50828defd8186412ad178b5ee72b5620562535da019b5382c",
																			"typeString": "literal_string \"pay the exact amount to cover distribution\""
																		},
																		"value": "pay the exact amount to cover distribution"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c36446f4599a87e50828defd8186412ad178b5ee72b5620562535da019b5382c",
																			"typeString": "literal_string \"pay the exact amount to cover distribution\""
																		}
																	],
																	"id": 639,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "17104:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17104:125:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 646,
															"nodeType": "ExpressionStatement",
															"src": "17104:125:0"
														},
														{
															"body": {
																"id": 670,
																"nodeType": "Block",
																"src": "17291:75:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 665,
																						"name": "values",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 600,
																						"src": "17341:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 667,
																					"indexExpression": {
																						"id": 666,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 648,
																						"src": "17348:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "17341:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 660,
																								"name": "recipients",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 597,
																								"src": "17317:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																									"typeString": "address[] memory"
																								}
																							},
																							"id": 662,
																							"indexExpression": {
																								"id": 661,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 648,
																								"src": "17328:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "17317:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 659,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17309:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 658,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17309:8:0",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 663,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17309:22:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "17309:31:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17309:42:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 669,
																		"nodeType": "ExpressionStatement",
																		"src": "17309:42:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 651,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "17263:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 652,
																		"name": "recipients",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "17267:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "17267:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17263:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 671,
															"initializationExpression": {
																"assignments": [
																	648
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 648,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "17256:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 671,
																		"src": "17248:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 647,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "17248:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 650,
																"initialValue": {
																	"hexValue": "30",
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17260:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "17248:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "17286:3:0",
																	"subExpression": {
																		"id": 655,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 648,
																		"src": "17286:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 657,
																"nodeType": "ExpressionStatement",
																"src": "17286:3:0"
															},
															"nodeType": "ForStatement",
															"src": "17243:123:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d908e6ce",
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 603,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 602,
												"name": "tokenChecker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 594,
												"src": "16811:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "16811:12:0"
										}
									],
									"name": "coinMultisender",
									"nameLocation": "16702:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "16744:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "16727:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 595,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "16727:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 596,
													"nodeType": "ArrayTypeName",
													"src": "16727:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "16781:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "16764:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 598,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 599,
													"nodeType": "ArrayTypeName",
													"src": "16764:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16717:76:0"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16824:0:0"
									},
									"scope": 1151,
									"src": "16693:1672:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "18559:1925:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 804,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 790,
																				"src": "18585:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$538",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$538",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18577:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 802,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18577:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18577:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 17,
																	"src": "18577:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18577:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18608:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "18577:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206120636f6e7472616374",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18614:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2832899018d9da418848985d975d1ba29b8679d90938e7cd751a28e43f0189d1",
																"typeString": "literal_string \"not a contract\""
															},
															"value": "not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2832899018d9da418848985d975d1ba29b8679d90938e7cd751a28e43f0189d1",
																"typeString": "literal_string \"not a contract\""
															}
														],
														"id": 801,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18569:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18569:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "18569:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 814,
																	"name": "recipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "18706:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "18706:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 816,
																	"name": "values",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "18727:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "18727:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18706:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420696e707574",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18742:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbab81719f15ade78f76dcdbf7cff531fc5f9822fe7e8466ffdd2feb23510f3b",
																"typeString": "literal_string \"invalid input\""
															},
															"value": "invalid input"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbab81719f15ade78f76dcdbf7cff531fc5f9822fe7e8466ffdd2feb23510f3b",
																"typeString": "literal_string \"invalid input\""
															}
														],
														"id": 813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18698:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "18698:60:0"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 822,
														"name": "authorizedusers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "19004:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 825,
													"indexExpression": {
														"expression": {
															"id": 823,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "19020:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "19020:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19004:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "19292:28:0",
														"subExpression": {
															"baseExpression": {
																"id": 855,
																"name": "authorizedusers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "19293:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 858,
															"indexExpression": {
																"expression": {
																	"id": 856,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19309:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19309:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19293:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 958,
													"nodeType": "IfStatement",
													"src": "19288:1190:0",
													"trueBody": {
														"id": 957,
														"nodeType": "Block",
														"src": "19322:1156:0",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 862,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "19363:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "19363:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 860,
																				"name": "tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 555,
																				"src": "19340:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$538",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 495,
																			"src": "19340:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19340:34:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 865,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "19378:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19340:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 905,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "19860:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 906,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "19860:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 903,
																					"name": "tokenAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 555,
																					"src": "19837:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$538",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 904,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 495,
																				"src": "19837:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19837:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 908,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 557,
																			"src": "19874:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "19837:45:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 955,
																	"nodeType": "IfStatement",
																	"src": "19833:635:0",
																	"trueBody": {
																		"id": 954,
																		"nodeType": "Block",
																		"src": "19884:584:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 914,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 911,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "19931:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 912,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "value",
																								"nodeType": "MemberAccess",
																								"src": "19931:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 913,
																								"name": "fee",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 546,
																								"src": "19944:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "19931:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "686f6c64696e67202620617574686f72697a6174696f6e2066616c73652070617920657861637420666565",
																							"id": 915,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "19969:45:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_137df310803ee84d23f123870fcea3fa051f1a17a2a89c034789caae5279ebf8",
																								"typeString": "literal_string \"holding & authorization false pay exact fee\""
																							},
																							"value": "holding & authorization false pay exact fee"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_137df310803ee84d23f123870fcea3fa051f1a17a2a89c034789caae5279ebf8",
																								"typeString": "literal_string \"holding & authorization false pay exact fee\""
																							}
																						],
																						"id": 910,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "19902:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 916,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19902:130:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 917,
																				"nodeType": "ExpressionStatement",
																				"src": "19902:130:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 923,
																							"name": "fee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 546,
																							"src": "20077:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"id": 920,
																									"name": "receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 548,
																									"src": "20058:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address_payable",
																										"typeString": "address payable"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address_payable",
																										"typeString": "address payable"
																									}
																								],
																								"id": 919,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "20050:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_payable_$",
																									"typeString": "type(address payable)"
																								},
																								"typeName": {
																									"id": 918,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "20050:8:0",
																									"stateMutability": "payable",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 921,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "20050:17:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"id": 922,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "transfer",
																						"nodeType": "MemberAccess",
																						"src": "20050:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																							"typeString": "function (uint256)"
																						}
																					},
																					"id": 924,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20050:31:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 925,
																				"nodeType": "ExpressionStatement",
																				"src": "20050:31:0"
																			},
																			{
																				"body": {
																					"id": 952,
																					"nodeType": "Block",
																					"src": "20143:311:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"expression": {
																													"id": 940,
																													"name": "msg",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4294967281,
																													"src": "20246:3:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_magic_message",
																														"typeString": "msg"
																													}
																												},
																												"id": 941,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "sender",
																												"nodeType": "MemberAccess",
																												"src": "20246:10:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"baseExpression": {
																													"id": 942,
																													"name": "recipients",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 793,
																													"src": "20286:10:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																														"typeString": "address[] memory"
																													}
																												},
																												"id": 944,
																												"indexExpression": {
																													"id": 943,
																													"name": "i",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 927,
																													"src": "20297:1:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "20286:13:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"baseExpression": {
																													"id": 945,
																													"name": "values",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 796,
																													"src": "20329:6:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																														"typeString": "uint256[] memory"
																													}
																												},
																												"id": 947,
																												"indexExpression": {
																													"id": 946,
																													"name": "i",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 927,
																													"src": "20336:1:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "20329:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"id": 938,
																												"name": "token",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 790,
																												"src": "20198:5:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_contract$_IERC20_$538",
																													"typeString": "contract IERC20"
																												}
																											},
																											"id": 939,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "transferFrom",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 537,
																											"src": "20198:18:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																												"typeString": "function (address,address,uint256) external returns (bool)"
																											}
																										},
																										"id": 948,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "20198:166:0",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									{
																										"hexValue": "6572726f7220696e20646973747269627574696f6e",
																										"id": 949,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "20390:23:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_b8ef2cda135cfd4aa6c55296dd494fc35754a3e48990a617951944e75b24e69a",
																											"typeString": "literal_string \"error in distribution\""
																										},
																										"value": "error in distribution"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										{
																											"typeIdentifier": "t_stringliteral_b8ef2cda135cfd4aa6c55296dd494fc35754a3e48990a617951944e75b24e69a",
																											"typeString": "literal_string \"error in distribution\""
																										}
																									],
																									"id": 937,
																									"name": "require",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967278,
																										4294967278
																									],
																									"referencedDeclaration": 4294967278,
																									"src": "20165:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (bool,string memory) pure"
																									}
																								},
																								"id": 950,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "20165:270:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 951,
																							"nodeType": "ExpressionStatement",
																							"src": "20165:270:0"
																						}
																					]
																				},
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 933,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 930,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 927,
																						"src": "20119:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<",
																					"rightExpression": {
																						"expression": {
																							"id": 931,
																							"name": "values",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 796,
																							"src": "20123:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 932,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "20123:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "20119:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 953,
																				"initializationExpression": {
																					"assignments": [
																						927
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 927,
																							"mutability": "mutable",
																							"name": "i",
																							"nameLocation": "20112:1:0",
																							"nodeType": "VariableDeclaration",
																							"scope": 953,
																							"src": "20104:9:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 926,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "20104:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 929,
																					"initialValue": {
																						"hexValue": "30",
																						"id": 928,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "20116:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "20104:13:0"
																				},
																				"loopExpression": {
																					"expression": {
																						"id": 935,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "20138:3:0",
																						"subExpression": {
																							"id": 934,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 927,
																							"src": "20138:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 936,
																					"nodeType": "ExpressionStatement",
																					"src": "20138:3:0"
																				},
																				"nodeType": "ForStatement",
																				"src": "20099:355:0"
																			}
																		]
																	}
																},
																"id": 956,
																"nodeType": "IfStatement",
																"src": "19336:1132:0",
																"trueBody": {
																	"id": 902,
																	"nodeType": "Block",
																	"src": "19388:439:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"baseExpression": {
																						"id": 867,
																						"name": "authorizedusers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 552,
																						"src": "19406:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																							"typeString": "mapping(address => bool)"
																						}
																					},
																					"id": 870,
																					"indexExpression": {
																						"expression": {
																							"id": 868,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "19422:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 869,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "19422:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "19406:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "74727565",
																					"id": 871,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "19436:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"src": "19406:34:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 873,
																			"nodeType": "ExpressionStatement",
																			"src": "19406:34:0"
																		},
																		{
																			"body": {
																				"id": 900,
																				"nodeType": "Block",
																				"src": "19502:311:0",
																				"statements": [
																					{
																						"expression": {
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"expression": {
																												"id": 888,
																												"name": "msg",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967281,
																												"src": "19605:3:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_message",
																													"typeString": "msg"
																												}
																											},
																											"id": 889,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sender",
																											"nodeType": "MemberAccess",
																											"src": "19605:10:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										{
																											"baseExpression": {
																												"id": 890,
																												"name": "recipients",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 793,
																												"src": "19645:10:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																													"typeString": "address[] memory"
																												}
																											},
																											"id": 892,
																											"indexExpression": {
																												"id": 891,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 875,
																												"src": "19656:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "19645:13:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										{
																											"baseExpression": {
																												"id": 893,
																												"name": "values",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 796,
																												"src": "19688:6:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																													"typeString": "uint256[] memory"
																												}
																											},
																											"id": 895,
																											"indexExpression": {
																												"id": 894,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 875,
																												"src": "19695:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "19688:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											},
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											},
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 886,
																											"name": "token",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 790,
																											"src": "19557:5:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$538",
																												"typeString": "contract IERC20"
																											}
																										},
																										"id": 887,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "transferFrom",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 537,
																										"src": "19557:18:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																											"typeString": "function (address,address,uint256) external returns (bool)"
																										}
																									},
																									"id": 896,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "19557:166:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								{
																									"hexValue": "6572726f7220696e20646973747269627574696f6e",
																									"id": 897,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "string",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "19749:23:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_stringliteral_b8ef2cda135cfd4aa6c55296dd494fc35754a3e48990a617951944e75b24e69a",
																										"typeString": "literal_string \"error in distribution\""
																									},
																									"value": "error in distribution"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									},
																									{
																										"typeIdentifier": "t_stringliteral_b8ef2cda135cfd4aa6c55296dd494fc35754a3e48990a617951944e75b24e69a",
																										"typeString": "literal_string \"error in distribution\""
																									}
																								],
																								"id": 885,
																								"name": "require",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [
																									4294967278,
																									4294967278
																								],
																								"referencedDeclaration": 4294967278,
																								"src": "19524:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																									"typeString": "function (bool,string memory) pure"
																								}
																							},
																							"id": 898,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "19524:270:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 899,
																						"nodeType": "ExpressionStatement",
																						"src": "19524:270:0"
																					}
																				]
																			},
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 878,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 875,
																					"src": "19478:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"expression": {
																						"id": 879,
																						"name": "values",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 796,
																						"src": "19482:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 880,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "19482:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19478:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 901,
																			"initializationExpression": {
																				"assignments": [
																					875
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 875,
																						"mutability": "mutable",
																						"name": "i",
																						"nameLocation": "19471:1:0",
																						"nodeType": "VariableDeclaration",
																						"scope": 901,
																						"src": "19463:9:0",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 874,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "19463:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 877,
																				"initialValue": {
																					"hexValue": "30",
																					"id": 876,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "19475:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "19463:13:0"
																			},
																			"loopExpression": {
																				"expression": {
																					"id": 883,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "19497:3:0",
																					"subExpression": {
																						"id": 882,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 875,
																						"src": "19497:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 884,
																				"nodeType": "ExpressionStatement",
																				"src": "19497:3:0"
																			},
																			"nodeType": "ForStatement",
																			"src": "19458:355:0"
																		}
																	]
																}
															}
														]
													}
												},
												"id": 959,
												"nodeType": "IfStatement",
												"src": "19000:1478:0",
												"trueBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "19033:249:0",
													"statements": [
														{
															"body": {
																"id": 852,
																"nodeType": "Block",
																"src": "19091:181:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 840,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "19157:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 841,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "19157:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"baseExpression": {
																								"id": 842,
																								"name": "recipients",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 793,
																								"src": "19169:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																									"typeString": "address[] memory"
																								}
																							},
																							"id": 844,
																							"indexExpression": {
																								"id": 843,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 827,
																								"src": "19180:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "19169:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"baseExpression": {
																								"id": 845,
																								"name": "values",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 796,
																								"src": "19184:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 847,
																							"indexExpression": {
																								"id": 846,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 827,
																								"src": "19191:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "19184:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 838,
																							"name": "token",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 790,
																							"src": "19138:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$538",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 839,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "transferFrom",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 537,
																						"src": "19138:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																							"typeString": "function (address,address,uint256) external returns (bool)"
																						}
																					},
																					"id": 848,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19138:56:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "6572726f7220696e20646973747269627574696f6e",
																					"id": 849,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "19216:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_b8ef2cda135cfd4aa6c55296dd494fc35754a3e48990a617951944e75b24e69a",
																						"typeString": "literal_string \"error in distribution\""
																					},
																					"value": "error in distribution"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_b8ef2cda135cfd4aa6c55296dd494fc35754a3e48990a617951944e75b24e69a",
																						"typeString": "literal_string \"error in distribution\""
																					}
																				],
																				"id": 837,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "19109:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19109:148:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 851,
																		"nodeType": "ExpressionStatement",
																		"src": "19109:148:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 830,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "19067:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 831,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "19071:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "19071:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19067:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 853,
															"initializationExpression": {
																"assignments": [
																	827
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 827,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "19060:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 853,
																		"src": "19052:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 826,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "19052:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 829,
																"initialValue": {
																	"hexValue": "30",
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19064:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "19052:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "19086:3:0",
																	"subExpression": {
																		"id": 834,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 827,
																		"src": "19086:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 836,
																"nodeType": "ExpressionStatement",
																"src": "19086:3:0"
															},
															"nodeType": "ForStatement",
															"src": "19047:225:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "9cbd3433",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 799,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 798,
												"name": "tokenChecker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 594,
												"src": "18546:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18546:12:0"
										}
									],
									"name": "TOKENmultisender",
									"nameLocation": "18380:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18447:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "18440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$538",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 789,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 788,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 538,
														"src": "18440:6:0"
													},
													"referencedDeclaration": 538,
													"src": "18440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$538",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "18479:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "18462:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 791,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "18462:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 792,
													"nodeType": "ArrayTypeName",
													"src": "18462:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "18516:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "18499:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 794,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18499:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 795,
													"nodeType": "ArrayTypeName",
													"src": "18499:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18396:132:0"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18559:0:0"
									},
									"scope": 1151,
									"src": "18371:2113:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "20618:68:0",
										"statements": [
											{
												"expression": {
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 970,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "20628:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 971,
														"name": "newfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "20634:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20628:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "20628:12:0"
											},
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 974,
														"name": "receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "20650:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 977,
																"name": "_receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "20669:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20661:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 975,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20661:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20661:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "20650:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "20650:29:0"
											}
										]
									},
									"functionSelector": "126ccd94",
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 968,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 967,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "20608:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20608:9:0"
										}
									],
									"name": "setfeeToUse",
									"nameLocation": "20552:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "newfee",
												"nameLocation": "20572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "20564:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "20588:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "20580:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20563:35:0"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20618:0:0"
									},
									"scope": 1151,
									"src": "20543:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "20831:124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 990,
																	"name": "authorizedusers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "20849:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 992,
																"indexExpression": {
																	"id": 991,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "20865:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20849:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20874:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "20849:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7573657220697320616c726561647920617574686f72697a6564",
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20881:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5221fdcb7445ee7f562476d696ae220376f6a7b9504b31f06f66a7e5b67c32df",
																"typeString": "literal_string \"user is already authorized\""
															},
															"value": "user is already authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5221fdcb7445ee7f562476d696ae220376f6a7b9504b31f06f66a7e5b67c32df",
																"typeString": "literal_string \"user is already authorized\""
															}
														],
														"id": 989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20841:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20841:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "20841:69:0"
											},
											{
												"expression": {
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 998,
															"name": "authorizedusers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "20920:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1000,
														"indexExpression": {
															"id": 999,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "20936:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20920:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20944:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "20920:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "20920:28:0"
											}
										]
									},
									"functionSelector": "67c2a360",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 987,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 986,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "20821:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20821:9:0"
										}
									],
									"name": "authorizeUser",
									"nameLocation": "20784:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "20806:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "20798:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20797:14:0"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20831:0:0"
									},
									"scope": 1151,
									"src": "20775:180:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "21102:126:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1013,
																	"name": "authorizedusers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "21120:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1015,
																"indexExpression": {
																	"id": 1014,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "21136:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21120:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21145:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "21120:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7573657220697320616c726561647920756e617574686f72697a6564",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21151:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a47627c35bdac8e1d8ad9b73cf460ba55e95f357cb07512a4d4f9e03fc865e3a",
																"typeString": "literal_string \"user is already unauthorized\""
															},
															"value": "user is already unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a47627c35bdac8e1d8ad9b73cf460ba55e95f357cb07512a4d4f9e03fc865e3a",
																"typeString": "literal_string \"user is already unauthorized\""
															}
														],
														"id": 1012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21112:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21112:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "21112:70:0"
											},
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1021,
															"name": "authorizedusers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "21192:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1023,
														"indexExpression": {
															"id": 1022,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "21208:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21192:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21216:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "21192:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "21192:29:0"
											}
										]
									},
									"functionSelector": "478aa69e",
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1010,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1009,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "21092:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21092:9:0"
										}
									],
									"name": "unauthorizeUser",
									"nameLocation": "21053:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "21077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "21069:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21068:14:0"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21102:0:0"
									},
									"scope": 1151,
									"src": "21044:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "21303:45:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1035,
														"name": "authorizedusers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "21320:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1037,
													"indexExpression": {
														"id": 1036,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "21336:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21320:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1034,
												"id": 1038,
												"nodeType": "Return",
												"src": "21313:28:0"
											}
										]
									},
									"functionSelector": "a4df0256",
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readAuthorizedUsers",
									"nameLocation": "21242:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "21270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "21262:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21261:14:0"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "21298:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21298:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21297:6:0"
									},
									"scope": 1151,
									"src": "21233:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "21497:65:0",
										"statements": [
											{
												"expression": {
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1050,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "21507:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$538",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1051,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "21522:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$538",
															"typeString": "contract IERC20"
														}
													},
													"src": "21507:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$538",
														"typeString": "contract IERC20"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "21507:20:0"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1054,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "21537:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1055,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "21548:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21537:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "21537:18:0"
											}
										]
									},
									"functionSelector": "2fc75eb0",
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1048,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1047,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "21483:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21483:9:0"
										}
									],
									"name": "SetTokenToholdAndQuantity",
									"nameLocation": "21401:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21434:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "21427:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$538",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1042,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1041,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 538,
														"src": "21427:6:0"
													},
													"referencedDeclaration": 538,
													"src": "21427:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$538",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "21449:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "21441:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21426:31:0"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21497:0:0"
									},
									"scope": 1151,
									"src": "21392:170:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "21799:134:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "21825:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SnipeFinanceMultisenders_$1151",
																				"typeString": "contract SnipeFinanceMultisenders"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SnipeFinanceMultisenders_$1151",
																				"typeString": "contract SnipeFinanceMultisenders"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21817:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "21817:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21817:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "21817:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1072,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "21842:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21817:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c69642062616c616e636520746f207769746864726177",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21850:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c81a16bce43cf1e488ba306b4f2d44785440e9bb736dbcc9777b0fe5af654cdb",
																"typeString": "literal_string \"invalid balance to withdraw\""
															},
															"value": "invalid balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c81a16bce43cf1e488ba306b4f2d44785440e9bb736dbcc9777b0fe5af654cdb",
																"typeString": "literal_string \"invalid balance to withdraw\""
															}
														],
														"id": 1066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21809:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "21809:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1083,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "21919:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1079,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "21898:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "21898:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21890:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1077,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21890:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21890:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "21890:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21890:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "21890:36:0"
											}
										]
									},
									"functionSelector": "f9f95a0f",
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1064,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1063,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "21789:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21789:9:0"
										}
									],
									"name": "withdrawCoins",
									"nameLocation": "21750:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21772:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "21764:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21763:16:0"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21799:0:0"
									},
									"scope": 1151,
									"src": "21741:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "22091:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1102,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "22146:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SnipeFinanceMultisenders_$1151",
																					"typeString": "contract SnipeFinanceMultisenders"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SnipeFinanceMultisenders_$1151",
																					"typeString": "contract SnipeFinanceMultisenders"
																				}
																			],
																			"id": 1101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "22138:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1100,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "22138:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22138:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1098,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "22122:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$538",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 495,
																	"src": "22122:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22122:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1105,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "22156:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22122:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "636f6e747261637420646f65736e2774206861766520656e6f75676820746f6b656e2773",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22176:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_82c10e93bbd13b0460ce791b951fa263cf5be7ed8aed4ea34092e6ae7ad4208c",
																"typeString": "literal_string \"contract doesn't have enough token's\""
															},
															"value": "contract doesn't have enough token's"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_82c10e93bbd13b0460ce791b951fa263cf5be7ed8aed4ea34092e6ae7ad4208c",
																"typeString": "literal_string \"contract doesn't have enough token's\""
															}
														],
														"id": 1097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22101:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22101:123:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "22101:123:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1113,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "22249:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "22249:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1115,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "22261:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1110,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "22234:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$538",
																"typeString": "contract IERC20"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 505,
														"src": "22234:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22234:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "22234:34:0"
											}
										]
									},
									"functionSelector": "9e281a98",
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1094,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "22081:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22081:9:0"
										}
									],
									"name": "withdrawToken",
									"nameLocation": "22030:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "22051:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "22044:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$538",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1089,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1088,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 538,
														"src": "22044:6:0"
													},
													"referencedDeclaration": 538,
													"src": "22044:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$538",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22066:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "22058:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22043:30:0"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22091:0:0"
									},
									"scope": 1151,
									"src": "22021:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "22378:45:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1128,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "22403:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SnipeFinanceMultisenders_$1151",
																	"typeString": "contract SnipeFinanceMultisenders"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SnipeFinanceMultisenders_$1151",
																	"typeString": "contract SnipeFinanceMultisenders"
																}
															],
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22395:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1126,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22395:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22395:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "22395:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1131,
												"nodeType": "Return",
												"src": "22388:28:0"
											}
										]
									},
									"functionSelector": "8b7afe2e",
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1122,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1121,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 380,
												"src": "22352:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22352:9:0"
										}
									],
									"name": "contractBalance",
									"nameLocation": "22322:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22337:2:0"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "22370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22369:9:0"
									},
									"scope": 1151,
									"src": "22313:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "22764:2:0",
										"statements": []
									},
									"id": 1137,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22744:2:0"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22764:0:0"
									},
									"scope": 1151,
									"src": "22737:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "22845:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1146,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "22885:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1144,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "22862:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$538",
																"typeString": "contract IERC20"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 495,
														"src": "22862:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22862:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1143,
												"id": 1148,
												"nodeType": "Return",
												"src": "22855:38:0"
											}
										]
									},
									"functionSelector": "3aecd0e3",
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBalance",
									"nameLocation": "22782:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22806:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "22798:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22797:17:0"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "22837:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22836:9:0"
									},
									"scope": 1151,
									"src": "22773:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1152,
							"src": "15991:6912:0",
							"usedErrors": []
						}
					],
					"src": "123:22781:0"
				},
				"id": 0
			}
		}
	}
}