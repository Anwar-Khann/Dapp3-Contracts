{
	"id": "c13ca09fe439cbdff650b4504bd73014",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"erc20cic_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n\n// File: erc20cic.sol\n\n\npragma solidity 0.8.13;\n\n\ncontract MyToken is ERC20 {\n    constructor() ERC20(\"MyToken\", \"MTK\") {\n        _mint(msg.sender, 90000000000000000000 * 10 ** decimals());\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 50
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "petersburg"
		}
	},
	"output": {
		"contracts": {
			"erc20cic_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc20cic_flattened.sol\":\"Context\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"erc20cic_flattened.sol\":{\"keccak256\":\"0x4f1463a499a78795af353a1bc16839b265fcb8aa66d0a42c0e9d44870f064f75\",\"urls\":[\"bzz-raw://44933ed4824b6b5d5a2a86a13ddd566319bc68fd86f953e8d2d24ccbece4706e\",\"dweb:/ipfs/QmcbK2hq4DQW7WqgnAHUkGfYG9UjSZ54ooLHAGacBfRgzJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc20cic_flattened.sol\":5796:17108  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"erc20cic_flattened.sol\":6244:6357  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"erc20cic_flattened.sol\":6310:6323  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"erc20cic_flattened.sol\":6310:6315  _name */\n  0x03\n  swap1\n    /* \"erc20cic_flattened.sol\":6310:6323  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"erc20cic_flattened.sol\":6333:6350  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"erc20cic_flattened.sol\":6333:6340  _symbol */\n  0x04\n  swap1\n    /* \"erc20cic_flattened.sol\":6333:6350  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"erc20cic_flattened.sol\":6244:6357  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"erc20cic_flattened.sol\":5796:17108  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:198   */\ntag_21:\n    /* \"#utility.yul\":66:143   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:144   */\n  mstore\n    /* \"#utility.yul\":163:167   */\n  0x41\n    /* \"#utility.yul\":160:161   */\n  0x04\n    /* \"#utility.yul\":153:168   */\n  mstore\n    /* \"#utility.yul\":187:191   */\n  0x24\n    /* \"#utility.yul\":184:185   */\n  0x00\n    /* \"#utility.yul\":177:192   */\n  revert\n    /* \"#utility.yul\":203:1088   */\ntag_22:\n    /* \"#utility.yul\":257:262   */\n  0x00\n    /* \"#utility.yul\":310:313   */\n  dup3\n    /* \"#utility.yul\":303:307   */\n  0x1f\n    /* \"#utility.yul\":295:301   */\n  dup4\n    /* \"#utility.yul\":291:308   */\n  add\n    /* \"#utility.yul\":287:314   */\n  slt\n    /* \"#utility.yul\":277:332   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":328:329   */\n  0x00\n    /* \"#utility.yul\":325:326   */\n  dup1\n    /* \"#utility.yul\":318:330   */\n  revert\n    /* \"#utility.yul\":277:332   */\ntag_26:\n    /* \"#utility.yul\":351:364   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":413:423   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":410:446   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":426:444   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":501:503   */\n  0x40\n    /* \"#utility.yul\":495:504   */\n  mload\n    /* \"#utility.yul\":469:471   */\n  0x1f\n    /* \"#utility.yul\":555:568   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":551:573   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":575:577   */\n  0x3f\n    /* \"#utility.yul\":547:578   */\n  add\n    /* \"#utility.yul\":543:583   */\n  and\n    /* \"#utility.yul\":531:584   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":599:617   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":619:641   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":596:642   */\n  or\n    /* \"#utility.yul\":593:665   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":645:663   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":685:695   */\n  dup2\n    /* \"#utility.yul\":681:683   */\n  0x40\n    /* \"#utility.yul\":674:696   */\n  mstore\n    /* \"#utility.yul\":720:722   */\n  dup4\n    /* \"#utility.yul\":712:718   */\n  dup2\n    /* \"#utility.yul\":705:723   */\n  mstore\n    /* \"#utility.yul\":742:746   */\n  0x20\n    /* \"#utility.yul\":732:746   */\n  swap3\n  pop\n    /* \"#utility.yul\":787:790   */\n  dup7\n    /* \"#utility.yul\":782:784   */\n  dup4\n    /* \"#utility.yul\":777:779   */\n  dup6\n    /* \"#utility.yul\":769:775   */\n  dup9\n    /* \"#utility.yul\":765:780   */\n  add\n    /* \"#utility.yul\":761:785   */\n  add\n    /* \"#utility.yul\":758:791   */\n  gt\n    /* \"#utility.yul\":755:808   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":804:805   */\n  0x00\n    /* \"#utility.yul\":801:802   */\n  dup1\n    /* \"#utility.yul\":794:806   */\n  revert\n    /* \"#utility.yul\":755:808   */\ntag_31:\n    /* \"#utility.yul\":826:827   */\n  0x00\n    /* \"#utility.yul\":817:827   */\n  swap2\n  pop\n    /* \"#utility.yul\":836:969   */\ntag_32:\n    /* \"#utility.yul\":850:852   */\n  dup4\n    /* \"#utility.yul\":847:848   */\n  dup3\n    /* \"#utility.yul\":844:853   */\n  lt\n    /* \"#utility.yul\":836:969   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":938:952   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":934:957   */\n  dup4\n  add\n    /* \"#utility.yul\":928:958   */\n  mload\n    /* \"#utility.yul\":907:921   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":903:926   */\n  dup5\n  add\n    /* \"#utility.yul\":896:959   */\n  mstore\n    /* \"#utility.yul\":861:871   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":836:969   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":987:989   */\n  dup4\n    /* \"#utility.yul\":984:985   */\n  dup3\n    /* \"#utility.yul\":981:990   */\n  gt\n    /* \"#utility.yul\":978:1058   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1046:1047   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  dup4\n    /* \"#utility.yul\":1036:1038   */\n  dup6\n    /* \"#utility.yul\":1028:1034   */\n  dup4\n    /* \"#utility.yul\":1024:1039   */\n  add\n    /* \"#utility.yul\":1020:1044   */\n  add\n    /* \"#utility.yul\":1013:1048   */\n  mstore\n    /* \"#utility.yul\":978:1058   */\ntag_35:\n    /* \"#utility.yul\":1076:1082   */\n  swap7\n    /* \"#utility.yul\":203:1088   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1093:1655   */\ntag_3:\n    /* \"#utility.yul\":1192:1198   */\n  0x00\n    /* \"#utility.yul\":1200:1206   */\n  dup1\n    /* \"#utility.yul\":1253:1255   */\n  0x40\n    /* \"#utility.yul\":1241:1250   */\n  dup4\n    /* \"#utility.yul\":1232:1239   */\n  dup6\n    /* \"#utility.yul\":1228:1251   */\n  sub\n    /* \"#utility.yul\":1224:1256   */\n  slt\n    /* \"#utility.yul\":1221:1273   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1269:1270   */\n  0x00\n    /* \"#utility.yul\":1266:1267   */\n  dup1\n    /* \"#utility.yul\":1259:1271   */\n  revert\n    /* \"#utility.yul\":1221:1273   */\ntag_37:\n    /* \"#utility.yul\":1296:1312   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1361:1375   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1358:1392   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1388:1389   */\n  0x00\n    /* \"#utility.yul\":1385:1386   */\n  dup1\n    /* \"#utility.yul\":1378:1390   */\n  revert\n    /* \"#utility.yul\":1358:1392   */\ntag_38:\n    /* \"#utility.yul\":1411:1472   */\n  tag_39\n    /* \"#utility.yul\":1464:1471   */\n  dup7\n    /* \"#utility.yul\":1455:1461   */\n  dup4\n    /* \"#utility.yul\":1444:1453   */\n  dup8\n    /* \"#utility.yul\":1440:1462   */\n  add\n    /* \"#utility.yul\":1411:1472   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1401:1472   */\n  swap4\n  pop\n    /* \"#utility.yul\":1518:1520   */\n  0x20\n    /* \"#utility.yul\":1507:1516   */\n  dup6\n    /* \"#utility.yul\":1503:1521   */\n  add\n    /* \"#utility.yul\":1497:1522   */\n  mload\n    /* \"#utility.yul\":1481:1522   */\n  swap2\n  pop\n    /* \"#utility.yul\":1547:1549   */\n  dup1\n    /* \"#utility.yul\":1537:1545   */\n  dup3\n    /* \"#utility.yul\":1534:1550   */\n  gt\n    /* \"#utility.yul\":1531:1567   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1563:1564   */\n  0x00\n    /* \"#utility.yul\":1560:1561   */\n  dup1\n    /* \"#utility.yul\":1553:1565   */\n  revert\n    /* \"#utility.yul\":1531:1567   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1586:1649   */\n  tag_41\n    /* \"#utility.yul\":1641:1648   */\n  dup6\n    /* \"#utility.yul\":1630:1638   */\n  dup3\n    /* \"#utility.yul\":1619:1628   */\n  dup7\n    /* \"#utility.yul\":1615:1639   */\n  add\n    /* \"#utility.yul\":1586:1649   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1576:1649   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1093:1655   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1660:2097   */\ntag_11:\n    /* \"#utility.yul\":1739:1740   */\n  0x01\n    /* \"#utility.yul\":1735:1747   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1782:1794   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1803:1864   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1857:1861   */\n  0x7f\n    /* \"#utility.yul\":1849:1855   */\n  dup3\n    /* \"#utility.yul\":1845:1862   */\n  and\n    /* \"#utility.yul\":1835:1862   */\n  swap2\n  pop\n    /* \"#utility.yul\":1803:1864   */\ntag_43:\n    /* \"#utility.yul\":1910:1912   */\n  0x20\n    /* \"#utility.yul\":1902:1908   */\n  dup3\n    /* \"#utility.yul\":1899:1913   */\n  lt\n    /* \"#utility.yul\":1879:1897   */\n  dup2\n    /* \"#utility.yul\":1876:1914   */\n  sub\n    /* \"#utility.yul\":1873:2091   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1947:2024   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1944:1945   */\n  0x00\n    /* \"#utility.yul\":1937:2025   */\n  mstore\n    /* \"#utility.yul\":2048:2052   */\n  0x22\n    /* \"#utility.yul\":2045:2046   */\n  0x04\n    /* \"#utility.yul\":2038:2053   */\n  mstore\n    /* \"#utility.yul\":2076:2080   */\n  0x24\n    /* \"#utility.yul\":2073:2074   */\n  0x00\n    /* \"#utility.yul\":2066:2081   */\n  revert\n    /* \"#utility.yul\":1873:2091   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1660:2097   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"erc20cic_flattened.sol\":5796:17108  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc20cic_flattened.sol\":5796:17108  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"erc20cic_flattened.sol\":6422:6520  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20cic_flattened.sol\":8708:8905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"erc20cic_flattened.sol\":8708:8905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"erc20cic_flattened.sol\":7519:7625  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"erc20cic_flattened.sol\":7606:7618  _totalSupply */\n      sload(0x02)\n        /* \"erc20cic_flattened.sol\":7519:7625  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"erc20cic_flattened.sol\":7519:7625  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_16\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"erc20cic_flattened.sol\":9467:9723  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_18\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":7368:7459  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"erc20cic_flattened.sol\":7450:7452  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"erc20cic_flattened.sol\":7368:7459  function decimals() public view virtual override returns (uint8) {... */\n      tag_16\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"erc20cic_flattened.sol\":10118:10352  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_18\n      tag_38\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":7683:7808  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_24\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":7783:7801  _balances[account] */\n      and\n        /* \"erc20cic_flattened.sol\":7757:7764  uint256 */\n      0x00\n        /* \"erc20cic_flattened.sol\":7783:7801  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"erc20cic_flattened.sol\":7683:7808  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"erc20cic_flattened.sol\":6633:6735  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_14\n      tag_47\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":10839:11266  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_18\n      tag_50\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":8004:8193  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_18\n      tag_54\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":8251:8400  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_24\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":6422:6520  function name() public view virtual override returns (string memory) {... */\n    tag_15:\n        /* \"erc20cic_flattened.sol\":6476:6489  string memory */\n      0x60\n        /* \"erc20cic_flattened.sol\":6508:6513  _name */\n      0x03\n        /* \"erc20cic_flattened.sol\":6501:6513  return _name */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc20cic_flattened.sol\":6422:6520  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc20cic_flattened.sol\":8708:8905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_21:\n        /* \"erc20cic_flattened.sol\":8791:8795  bool */\n      0x00\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"erc20cic_flattened.sol\":8845:8877  _approve(owner, spender, amount) */\n      tag_72\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      dup2\n        /* \"erc20cic_flattened.sol\":8861:8868  spender */\n      dup6\n        /* \"erc20cic_flattened.sol\":8870:8876  amount */\n      dup6\n        /* \"erc20cic_flattened.sol\":8845:8853  _approve */\n      tag_73\n        /* \"erc20cic_flattened.sol\":8845:8877  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_72:\n      pop\n        /* \"erc20cic_flattened.sol\":8894:8898  true */\n      0x01\n      swap4\n        /* \"erc20cic_flattened.sol\":8708:8905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc20cic_flattened.sol\":9467:9723  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_31:\n        /* \"erc20cic_flattened.sol\":9564:9568  bool */\n      0x00\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"erc20cic_flattened.sol\":9620:9658  _spendAllowance(from, spender, amount) */\n      tag_77\n        /* \"erc20cic_flattened.sol\":9636:9640  from */\n      dup6\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      dup3\n        /* \"erc20cic_flattened.sol\":9651:9657  amount */\n      dup6\n        /* \"erc20cic_flattened.sol\":9620:9635  _spendAllowance */\n      tag_78\n        /* \"erc20cic_flattened.sol\":9620:9658  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_77:\n        /* \"erc20cic_flattened.sol\":9668:9695  _transfer(from, to, amount) */\n      tag_79\n        /* \"erc20cic_flattened.sol\":9678:9682  from */\n      dup6\n        /* \"erc20cic_flattened.sol\":9684:9686  to */\n      dup6\n        /* \"erc20cic_flattened.sol\":9688:9694  amount */\n      dup6\n        /* \"erc20cic_flattened.sol\":9668:9677  _transfer */\n      tag_80\n        /* \"erc20cic_flattened.sol\":9668:9695  _transfer(from, to, amount) */\n      jump\t// in\n    tag_79:\n      pop\n        /* \"erc20cic_flattened.sol\":9712:9716  true */\n      0x01\n      swap5\n        /* \"erc20cic_flattened.sol\":9467:9723  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc20cic_flattened.sol\":10118:10352  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_39:\n        /* \"erc20cic_flattened.sol\":10206:10210  bool */\n      0x00\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"erc20cic_flattened.sol\":10260:10324  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_72\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      dup2\n        /* \"erc20cic_flattened.sol\":10276:10283  spender */\n      dup6\n        /* \"erc20cic_flattened.sol\":10313:10323  addedValue */\n      dup6\n        /* \"erc20cic_flattened.sol\":10285:10310  allowance(owner, spender) */\n      tag_85\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      dup4\n        /* \"erc20cic_flattened.sol\":10276:10283  spender */\n      dup4\n        /* \"erc20cic_flattened.sol\":10285:10294  allowance */\n      tag_60\n        /* \"erc20cic_flattened.sol\":10285:10310  allowance(owner, spender) */\n      jump\t// in\n    tag_85:\n        /* \"erc20cic_flattened.sol\":10285:10323  allowance(owner, spender) + addedValue */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"erc20cic_flattened.sol\":10260:10268  _approve */\n      tag_73\n        /* \"erc20cic_flattened.sol\":10260:10324  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":6633:6735  function symbol() public view virtual override returns (string memory) {... */\n    tag_47:\n        /* \"erc20cic_flattened.sol\":6689:6702  string memory */\n      0x60\n        /* \"erc20cic_flattened.sol\":6721:6728  _symbol */\n      0x04\n        /* \"erc20cic_flattened.sol\":6714:6728  return _symbol */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":10839:11266  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_51:\n        /* \"erc20cic_flattened.sol\":10932:10936  bool */\n      0x00\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"erc20cic_flattened.sol\":10932:10936  bool */\n      dup2\n        /* \"erc20cic_flattened.sol\":11013:11038  allowance(owner, spender) */\n      tag_97\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      dup3\n        /* \"erc20cic_flattened.sol\":11030:11037  spender */\n      dup7\n        /* \"erc20cic_flattened.sol\":11013:11022  allowance */\n      tag_60\n        /* \"erc20cic_flattened.sol\":11013:11038  allowance(owner, spender) */\n      jump\t// in\n    tag_97:\n        /* \"erc20cic_flattened.sol\":10986:11038  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"erc20cic_flattened.sol\":11076:11091  subtractedValue */\n      dup4\n        /* \"erc20cic_flattened.sol\":11056:11072  currentAllowance */\n      dup2\n        /* \"erc20cic_flattened.sol\":11056:11091  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"erc20cic_flattened.sol\":11048:11133  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"erc20cic_flattened.sol\":11048:11133  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"erc20cic_flattened.sol\":11048:11133  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"erc20cic_flattened.sol\":11167:11227  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_79\n        /* \"erc20cic_flattened.sol\":11176:11181  owner */\n      dup3\n        /* \"erc20cic_flattened.sol\":11183:11190  spender */\n      dup7\n        /* \"erc20cic_flattened.sol\":11211:11226  subtractedValue */\n      dup7\n        /* \"erc20cic_flattened.sol\":11192:11208  currentAllowance */\n      dup5\n        /* \"erc20cic_flattened.sol\":11192:11226  currentAllowance - subtractedValue */\n      sub\n        /* \"erc20cic_flattened.sol\":11167:11175  _approve */\n      tag_73\n        /* \"erc20cic_flattened.sol\":11167:11227  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":8004:8193  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_55:\n        /* \"erc20cic_flattened.sol\":8083:8087  bool */\n      0x00\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"erc20cic_flattened.sol\":8137:8165  _transfer(owner, to, amount) */\n      tag_72\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      dup2\n        /* \"erc20cic_flattened.sol\":8154:8156  to */\n      dup6\n        /* \"erc20cic_flattened.sol\":8158:8164  amount */\n      dup6\n        /* \"erc20cic_flattened.sol\":8137:8146  _transfer */\n      tag_80\n        /* \"erc20cic_flattened.sol\":8137:8165  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":8251:8400  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":8366:8384  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"erc20cic_flattened.sol\":8340:8347  uint256 */\n      0x00\n        /* \"erc20cic_flattened.sol\":8366:8384  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"erc20cic_flattened.sol\":8366:8377  _allowances */\n      0x01\n        /* \"erc20cic_flattened.sol\":8366:8384  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc20cic_flattened.sol\":8366:8393  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"erc20cic_flattened.sol\":8251:8400  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"erc20cic_flattened.sol\":14721:15061  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":14822:14841  owner != address(0) */\n      dup4\n      and\n        /* \"erc20cic_flattened.sol\":14814:14882  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"erc20cic_flattened.sol\":14814:14882  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"erc20cic_flattened.sol\":14814:14882  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_99\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"erc20cic_flattened.sol\":14814:14882  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":14900:14921  spender != address(0) */\n      dup3\n      and\n        /* \"erc20cic_flattened.sol\":14892:14960  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"erc20cic_flattened.sol\":14892:14960  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"erc20cic_flattened.sol\":14892:14960  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"erc20cic_flattened.sol\":14892:14960  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":14971:14989  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc20cic_flattened.sol\":14971:14982  _allowances */\n      0x01\n        /* \"erc20cic_flattened.sol\":14971:14989  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc20cic_flattened.sol\":14971:14998  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"erc20cic_flattened.sol\":14971:15007  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"erc20cic_flattened.sol\":15022:15054  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"erc20cic_flattened.sol\":15022:15054  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"erc20cic_flattened.sol\":15022:15054  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc20cic_flattened.sol\":14721:15061  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc20cic_flattened.sol\":15342:15753  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_78:\n        /* \"erc20cic_flattened.sol\":15442:15466  uint256 currentAllowance */\n      0x00\n        /* \"erc20cic_flattened.sol\":15469:15494  allowance(owner, spender) */\n      tag_116\n        /* \"erc20cic_flattened.sol\":15479:15484  owner */\n      dup5\n        /* \"erc20cic_flattened.sol\":15486:15493  spender */\n      dup5\n        /* \"erc20cic_flattened.sol\":15469:15478  allowance */\n      tag_60\n        /* \"erc20cic_flattened.sol\":15469:15494  allowance(owner, spender) */\n      jump\t// in\n    tag_116:\n        /* \"erc20cic_flattened.sol\":15442:15494  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"erc20cic_flattened.sol\":15508:15524  currentAllowance */\n      dup2\n        /* \"erc20cic_flattened.sol\":15508:15545  currentAllowance != type(uint256).max */\n      eq\n        /* \"erc20cic_flattened.sol\":15504:15747  if (currentAllowance != type(uint256).max) {... */\n      tag_121\n      jumpi\n        /* \"erc20cic_flattened.sol\":15589:15595  amount */\n      dup2\n        /* \"erc20cic_flattened.sol\":15569:15585  currentAllowance */\n      dup2\n        /* \"erc20cic_flattened.sol\":15569:15595  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"erc20cic_flattened.sol\":15561:15629  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"erc20cic_flattened.sol\":15561:15629  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"erc20cic_flattened.sol\":15561:15629  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_99\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"erc20cic_flattened.sol\":15561:15629  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_118:\n        /* \"erc20cic_flattened.sol\":15671:15722  _approve(owner, spender, currentAllowance - amount) */\n      tag_121\n        /* \"erc20cic_flattened.sol\":15680:15685  owner */\n      dup5\n        /* \"erc20cic_flattened.sol\":15687:15694  spender */\n      dup5\n        /* \"erc20cic_flattened.sol\":15715:15721  amount */\n      dup5\n        /* \"erc20cic_flattened.sol\":15696:15712  currentAllowance */\n      dup5\n        /* \"erc20cic_flattened.sol\":15696:15721  currentAllowance - amount */\n      sub\n        /* \"erc20cic_flattened.sol\":15671:15679  _approve */\n      tag_73\n        /* \"erc20cic_flattened.sol\":15671:15722  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_121:\n        /* \"erc20cic_flattened.sol\":15432:15753  {... */\n      pop\n        /* \"erc20cic_flattened.sol\":15342:15753  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc20cic_flattened.sol\":11720:12508  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":11816:11834  from != address(0) */\n      dup4\n      and\n        /* \"erc20cic_flattened.sol\":11808:11876  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"erc20cic_flattened.sol\":11808:11876  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"erc20cic_flattened.sol\":11808:11876  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_99\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"erc20cic_flattened.sol\":11808:11876  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":11894:11910  to != address(0) */\n      dup3\n      and\n        /* \"erc20cic_flattened.sol\":11886:11950  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"erc20cic_flattened.sol\":11886:11950  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"erc20cic_flattened.sol\":11886:11950  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"erc20cic_flattened.sol\":11886:11950  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":12032:12047  _balances[from] */\n      dup4\n      and\n        /* \"erc20cic_flattened.sol\":12010:12029  uint256 fromBalance */\n      0x00\n        /* \"erc20cic_flattened.sol\":12032:12047  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc20cic_flattened.sol\":12065:12086  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"erc20cic_flattened.sol\":12057:12129  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"erc20cic_flattened.sol\":12057:12129  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"erc20cic_flattened.sol\":12057:12129  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_99\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"erc20cic_flattened.sol\":12057:12129  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":12163:12178  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"erc20cic_flattened.sol\":12163:12172  _balances */\n      0x00\n        /* \"erc20cic_flattened.sol\":12163:12178  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc20cic_flattened.sol\":12181:12201  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"erc20cic_flattened.sol\":12163:12201  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"erc20cic_flattened.sol\":12378:12391  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"erc20cic_flattened.sol\":12378:12401  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"erc20cic_flattened.sol\":12427:12453  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup6\n      dup2\n      mstore\n        /* \"erc20cic_flattened.sol\":12378:12391  _balances[to] */\n      swap1\n      swap3\n        /* \"erc20cic_flattened.sol\":12427:12453  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"erc20cic_flattened.sol\":12427:12453  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc20cic_flattened.sol\":12464:12501  _afterTokenTransfer(from, to, amount) */\n      tag_121\n        /* \"erc20cic_flattened.sol\":16337:16428  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_17:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_142:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_142)\n    tag_144:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_145:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_139:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_147:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_20:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_149:\n        /* \"#utility.yul\":962:991   */\n      tag_150\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_139\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_30:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_154:\n        /* \"#utility.yul\":1612:1641   */\n      tag_155\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_139\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_156\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_139\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_43:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_159:\n        /* \"#utility.yul\":2100:2129   */\n      tag_160\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_139\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_59:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_162:\n        /* \"#utility.yul\":2308:2337   */\n      tag_163\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_139\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_164\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_139\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_64:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_166:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      sub\n        /* \"#utility.yul\":2618:2779   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_87:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d2e76236ba406c25814d5523f4be1492e49fab5872246bca867ea304e70eb31864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2099:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "66:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "163:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "153:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "153:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "153:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "184:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "187:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "177:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "177:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "177:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "267:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "316:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "325:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "328:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "318:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "318:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "318:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "295:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "303:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "291:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "291:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "310:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "287:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "287:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "280:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "280:35:1"
															},
															"nodeType": "YulIf",
															"src": "277:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "341:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "357:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "351:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "351:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "345:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "373:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "391:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "395:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "387:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "387:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "399:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "383:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "377:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "424:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "426:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "426:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "426:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "416:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "420:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "413:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "413:10:1"
															},
															"nodeType": "YulIf",
															"src": "410:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "455:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "469:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "465:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "465:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "459:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "481:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "501:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "495:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "485:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "513:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "535:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "559:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "563:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "555:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "555:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "570:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "551:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "551:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "575:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "547:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "547:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "580:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "543:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "543:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "531:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "531:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "517:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "643:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "645:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "645:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "645:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "602:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "614:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "599:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "599:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "622:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "634:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "619:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "619:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "596:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:46:1"
															},
															"nodeType": "YulIf",
															"src": "593:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "681:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "685:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "674:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "674:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "712:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "720:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "705:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "705:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "732:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "742:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "736:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "792:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "801:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "804:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "794:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "794:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "794:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "769:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "777:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "765:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "765:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "782:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "761:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "787:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "758:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "758:33:1"
															},
															"nodeType": "YulIf",
															"src": "755:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "817:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "826:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "821:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "882:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "911:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "919:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "907:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "907:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "923:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "903:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "903:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "942:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "950:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "938:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "938:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "954:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "934:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "934:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "928:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "928:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "896:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "896:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "896:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "847:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "850:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "844:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "844:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "854:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "856:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "865:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "868:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "861:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "861:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "856:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "840:3:1",
																"statements": []
															},
															"src": "836:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "999:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1028:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1036:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1024:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1024:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "1041:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1020:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1020:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1046:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1013:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1013:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1013:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "984:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "987:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "981:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "981:9:1"
															},
															"nodeType": "YulIf",
															"src": "978:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1067:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1076:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1067:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "241:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "249:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "257:5:1",
														"type": ""
													}
												],
												"src": "203:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1211:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1257:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1266:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1269:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1259:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1259:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1259:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1232:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1241:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1228:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1253:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1224:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1224:32:1"
															},
															"nodeType": "YulIf",
															"src": "1221:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1282:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1302:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1296:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1286:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1321:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1339:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1343:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1335:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1335:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1347:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1331:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1325:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1376:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1364:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1372:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1361:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:14:1"
															},
															"nodeType": "YulIf",
															"src": "1358:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1401:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1444:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1464:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1411:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1481:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1507:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1518:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1503:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1503:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1497:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1485:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1560:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1563:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1553:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1537:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1547:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1534:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1534:16:1"
															},
															"nodeType": "YulIf",
															"src": "1531:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1576:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1619:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1630:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1641:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1586:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1586:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1576:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1169:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1180:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1192:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1200:6:1",
														"type": ""
													}
												],
												"src": "1093:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1715:382:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1725:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1739:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1742:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1735:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1725:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1756:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1792:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1782:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1760:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1833:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1835:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1849:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1857:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1845:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1845:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1813:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:26:1"
															},
															"nodeType": "YulIf",
															"src": "1803:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1923:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1944:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1947:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1937:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1937:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1937:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2045:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2048:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2038:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2038:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2038:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2073:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2076:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2066:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2066:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2066:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1879:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1902:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1910:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1899:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1899:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1876:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:38:1"
															},
															"nodeType": "YulIf",
															"src": "1873:218:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1695:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1704:6:1",
														"type": ""
													}
												],
												"src": "1660:437:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b0f38038062000b0f8339810160408190526200003491620001f4565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b505050620002b3565b82805462000076906200025e565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126200014f57600080fd5b81516001600160401b03808211156200016c576200016c6200010e565b604051601f8301601f19908116603f011681019082821181831017156200019757620001976200010e565b81604052838152602092508683858801011115620001b457600080fd5b600091505b83821015620001d85785820183015181830184015290820190620001b9565b83821115620001ea5760008385830101525b9695505050505050565b600080604083850312156200020857600080fd5b82516001600160401b03808211156200022057600080fd5b6200022e868387016200013d565b935060208501519150808211156200024557600080fd5b5062000254858286016200013d565b9150509250929050565b600181811c908216806200027357607f821691505b602082108103620002ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b61084c80620002c36000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100df57806323b872dd146100f1578063313ce56714610104578063395093511461011357806370a082311461012657806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d575b600080fd5b6100a6610190565b6040516100b3919061068a565b60405180910390f35b6100cf6100ca3660046106fb565b610222565b60405190151581526020016100b3565b6002545b6040519081526020016100b3565b6100cf6100ff366004610725565b61023a565b604051601281526020016100b3565b6100cf6101213660046106fb565b61025e565b6100e3610134366004610761565b6001600160a01b031660009081526020819052604090205490565b6100a6610280565b6100cf6101653660046106fb565b61028f565b6100cf6101783660046106fb565b61030f565b6100e361018b366004610783565b61031d565b60606003805461019f906107b6565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb906107b6565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b600033610230818585610348565b5060019392505050565b60003361024885828561046c565b6102538585856104e6565b506001949350505050565b600033610230818585610271838361031d565b61027b91906107f0565b610348565b60606004805461019f906107b6565b6000338161029d828661031d565b9050838110156103025760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102538286868403610348565b6000336102308185856104e6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103aa5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f9565b6001600160a01b03821661040b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610478848461031d565b905060001981146104e057818110156104d35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102f9565b6104e08484848403610348565b50505050565b6001600160a01b03831661054a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f9565b6001600160a01b0382166105ac5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f9565b6001600160a01b038316600090815260208190526040902054818110156106245760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f9565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e0565b600060208083528351808285015260005b818110156106b75785810183015185820160400152820161069b565b818111156106c9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106f657600080fd5b919050565b6000806040838503121561070e57600080fd5b610717836106df565b946020939093013593505050565b60008060006060848603121561073a57600080fd5b610743846106df565b9250610751602085016106df565b9150604084013590509250925092565b60006020828403121561077357600080fd5b61077c826106df565b9392505050565b6000806040838503121561079657600080fd5b61079f836106df565b91506107ad602084016106df565b90509250929050565b600181811c908216806107ca57607f821691505b6020821081036107ea57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561081157634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220d2e76236ba406c25814d5523f4be1492e49fab5872246bca867ea304e70eb31864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB0F CODESIZE SUB DUP1 PUSH3 0xB0F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1F4 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x2B3 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x25E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x16C JUMPI PUSH3 0x16C PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x197 JUMPI PUSH3 0x197 PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1D8 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1B9 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1EA JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x22E DUP7 DUP4 DUP8 ADD PUSH3 0x13D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x254 DUP6 DUP3 DUP7 ADD PUSH3 0x13D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x273 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2AD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84C DUP1 PUSH3 0x2C3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0xCA CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA6 PUSH2 0x280 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x28F JUMP JUMPDEST PUSH2 0xCF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x7B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x348 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x248 DUP6 DUP3 DUP6 PUSH2 0x46C JUMP JUMPDEST PUSH2 0x253 DUP6 DUP6 DUP6 PUSH2 0x4E6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x271 DUP4 DUP4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x29D DUP3 DUP7 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x253 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x478 DUP5 DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x4E0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x348 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x69B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x717 DUP4 PUSH2 0x6DF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x743 DUP5 PUSH2 0x6DF JUMP JUMPDEST SWAP3 POP PUSH2 0x751 PUSH1 0x20 DUP6 ADD PUSH2 0x6DF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77C DUP3 PUSH2 0x6DF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79F DUP4 PUSH2 0x6DF JUMP JUMPDEST SWAP2 POP PUSH2 0x7AD PUSH1 0x20 DUP5 ADD PUSH2 0x6DF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x811 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xE7 PUSH3 0x36BA40 PUSH13 0x25814D5523F4BE1492E49FAB58 PUSH19 0x246BCA867EA304E70EB31864736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "5796:11312:0:-:0;;;6244:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6310:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6333:17:0;;;;:7;;:17;;;;;:::i;:::-;;6244:113;;5796:11312;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5796:11312:0;;;-1:-1:-1;5796:11312:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:184:1;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:885;257:5;310:3;303:4;295:6;291:17;287:27;277:55;;328:1;325;318:12;277:55;351:13;;-1:-1:-1;;;;;413:10:1;;;410:36;;;426:18;;:::i;:::-;501:2;495:9;469:2;555:13;;-1:-1:-1;;551:22:1;;;575:2;547:31;543:40;531:53;;;599:18;;;619:22;;;596:46;593:72;;;645:18;;:::i;:::-;685:10;681:2;674:22;720:2;712:6;705:18;742:4;732:14;;787:3;782:2;777;769:6;765:15;761:24;758:33;755:53;;;804:1;801;794:12;755:53;826:1;817:10;;836:133;850:2;847:1;844:9;836:133;;;938:14;;;934:23;;928:30;907:14;;;903:23;;896:63;861:10;;;;836:133;;;987:2;984:1;981:9;978:80;;;1046:1;1041:2;1036;1028:6;1024:15;1020:24;1013:35;978:80;1076:6;203:885;-1:-1:-1;;;;;;203:885:1:o;1093:562::-;1192:6;1200;1253:2;1241:9;1232:7;1228:23;1224:32;1221:52;;;1269:1;1266;1259:12;1221:52;1296:16;;-1:-1:-1;;;;;1361:14:1;;;1358:34;;;1388:1;1385;1378:12;1358:34;1411:61;1464:7;1455:6;1444:9;1440:22;1411:61;:::i;:::-;1401:71;;1518:2;1507:9;1503:18;1497:25;1481:41;;1547:2;1537:8;1534:16;1531:36;;;1563:1;1560;1553:12;1531:36;;1586:63;1641:7;1630:8;1619:9;1615:24;1586:63;:::i;:::-;1576:73;;;1093:562;;;;;:::o;1660:437::-;1739:1;1735:12;;;;1782;;;1803:61;;1857:4;1849:6;1845:17;1835:27;;1803:61;1910:2;1902:6;1899:14;1879:18;1876:38;1873:218;;1947:77;1944:1;1937:88;2048:4;2045:1;2038:15;2076:4;2073:1;2066:15;1873:218;;1660:437;;;:::o;:::-;5796:11312:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_703": {
									"entryPoint": null,
									"id": 703,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_638": {
									"entryPoint": 840,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_692": {
									"entryPoint": null,
									"id": 692,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_681": {
									"entryPoint": 1132,
									"id": 681,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_464": {
									"entryPoint": 1254,
									"id": 464,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_259": {
									"entryPoint": 797,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_284": {
									"entryPoint": 546,
									"id": 284,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_387": {
									"entryPoint": 655,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_346": {
									"entryPoint": 606,
									"id": 346,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_172": {
									"entryPoint": 400,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_182": {
									"entryPoint": 640,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_317": {
									"entryPoint": 570,
									"id": 317,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_241": {
									"entryPoint": 783,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:1"
															},
															"nodeType": "YulIf",
															"src": "713:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													}
												],
												"src": "616:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:1"
															},
															"nodeType": "YulIf",
															"src": "891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:1",
														"type": ""
													}
												],
												"src": "794:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:1",
														"type": ""
													}
												],
												"src": "1053:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:1",
														"type": ""
													}
												],
												"src": "1245:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:1"
															},
															"nodeType": "YulIf",
															"src": "1541:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													}
												],
												"src": "1427:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:1",
														"type": ""
													}
												],
												"src": "1760:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:1"
															},
															"nodeType": "YulIf",
															"src": "2029:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:1",
														"type": ""
													}
												],
												"src": "1949:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:1"
															},
															"nodeType": "YulIf",
															"src": "2237:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:1",
														"type": ""
													}
												],
												"src": "2140:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:1"
															},
															"nodeType": "YulIf",
															"src": "2548:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:1"
															},
															"nodeType": "YulIf",
															"src": "2618:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:1",
														"type": ""
													}
												],
												"src": "2405:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:1"
															},
															"nodeType": "YulIf",
															"src": "2848:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:1",
														"type": ""
													}
												],
												"src": "2790:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:1",
														"type": ""
													}
												],
												"src": "3020:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:1",
														"type": ""
													}
												],
												"src": "3426:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:1",
														"type": ""
													}
												],
												"src": "3831:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:1",
														"type": ""
													}
												],
												"src": "4234:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:1",
														"type": ""
													}
												],
												"src": "4592:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:1",
														"type": ""
													}
												],
												"src": "4998:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:1",
														"type": ""
													}
												],
												"src": "5402:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100df57806323b872dd146100f1578063313ce56714610104578063395093511461011357806370a082311461012657806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d575b600080fd5b6100a6610190565b6040516100b3919061068a565b60405180910390f35b6100cf6100ca3660046106fb565b610222565b60405190151581526020016100b3565b6002545b6040519081526020016100b3565b6100cf6100ff366004610725565b61023a565b604051601281526020016100b3565b6100cf6101213660046106fb565b61025e565b6100e3610134366004610761565b6001600160a01b031660009081526020819052604090205490565b6100a6610280565b6100cf6101653660046106fb565b61028f565b6100cf6101783660046106fb565b61030f565b6100e361018b366004610783565b61031d565b60606003805461019f906107b6565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb906107b6565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b600033610230818585610348565b5060019392505050565b60003361024885828561046c565b6102538585856104e6565b506001949350505050565b600033610230818585610271838361031d565b61027b91906107f0565b610348565b60606004805461019f906107b6565b6000338161029d828661031d565b9050838110156103025760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102538286868403610348565b6000336102308185856104e6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103aa5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f9565b6001600160a01b03821661040b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610478848461031d565b905060001981146104e057818110156104d35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102f9565b6104e08484848403610348565b50505050565b6001600160a01b03831661054a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f9565b6001600160a01b0382166105ac5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f9565b6001600160a01b038316600090815260208190526040902054818110156106245760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f9565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e0565b600060208083528351808285015260005b818110156106b75785810183015185820160400152820161069b565b818111156106c9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106f657600080fd5b919050565b6000806040838503121561070e57600080fd5b610717836106df565b946020939093013593505050565b60008060006060848603121561073a57600080fd5b610743846106df565b9250610751602085016106df565b9150604084013590509250925092565b60006020828403121561077357600080fd5b61077c826106df565b9392505050565b6000806040838503121561079657600080fd5b61079f836106df565b91506107ad602084016106df565b90509250929050565b600181811c908216806107ca57607f821691505b6020821081036107ea57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561081157634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220d2e76236ba406c25814d5523f4be1492e49fab5872246bca867ea304e70eb31864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0xCA CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA6 PUSH2 0x280 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x28F JUMP JUMPDEST PUSH2 0xCF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x7B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x348 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x248 DUP6 DUP3 DUP6 PUSH2 0x46C JUMP JUMPDEST PUSH2 0x253 DUP6 DUP6 DUP6 PUSH2 0x4E6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x271 DUP4 DUP4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x29D DUP3 DUP7 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x253 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x478 DUP5 DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x4E0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x348 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x69B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x717 DUP4 PUSH2 0x6DF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x743 DUP5 PUSH2 0x6DF JUMP JUMPDEST SWAP3 POP PUSH2 0x751 PUSH1 0x20 DUP6 ADD PUSH2 0x6DF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77C DUP3 PUSH2 0x6DF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79F DUP4 PUSH2 0x6DF JUMP JUMPDEST SWAP2 POP PUSH2 0x7AD PUSH1 0x20 DUP5 ADD PUSH2 0x6DF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x811 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xE7 PUSH3 0x36BA40 PUSH13 0x25814D5523F4BE1492E49FAB58 PUSH19 0x246BCA867EA304E70EB31864736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "5796:11312:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6422:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8708:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;8708:197:0;1053:187:1;7519:106:0;7606:12;;7519:106;;;1391:25:1;;;1379:2;1364:18;7519:106:0;1245:177:1;9467:256:0;;;;;;:::i;:::-;;:::i;7368:91::-;;;7450:2;1902:36:1;;1890:2;1875:18;7368:91:0;1760:184:1;10118:234:0;;;;;;:::i;:::-;;:::i;7683:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7783:18:0;7757:7;7783:18;;;;;;;;;;;;7683:125;6633:102;;;:::i;10839:427::-;;;;;;:::i;:::-;;:::i;8004:189::-;;;;;;:::i;:::-;;:::i;8251:149::-;;;;;;:::i;:::-;;:::i;6422:98::-;6476:13;6508:5;6501:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6422:98;:::o;8708:197::-;8791:4;741:10;8845:32;741:10;8861:7;8870:6;8845:8;:32::i;:::-;-1:-1:-1;8894:4:0;;8708:197;-1:-1:-1;;;8708:197:0:o;9467:256::-;9564:4;741:10;9620:38;9636:4;741:10;9651:6;9620:15;:38::i;:::-;9668:27;9678:4;9684:2;9688:6;9668:9;:27::i;:::-;-1:-1:-1;9712:4:0;;9467:256;-1:-1:-1;;;;9467:256:0:o;10118:234::-;10206:4;741:10;10260:64;741:10;10276:7;10313:10;10285:25;741:10;10276:7;10285:9;:25::i;:::-;:38;;;;:::i;:::-;10260:8;:64::i;6633:102::-;6689:13;6721:7;6714:14;;;;;:::i;10839:427::-;10932:4;741:10;10932:4;11013:25;741:10;11030:7;11013:9;:25::i;:::-;10986:52;;11076:15;11056:16;:35;;11048:85;;;;-1:-1:-1;;;11048:85:0;;3222:2:1;11048:85:0;;;3204:21:1;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:1;;;3344:35;3396:19;;11048:85:0;;;;;;;;;11167:60;11176:5;11183:7;11211:15;11192:16;:34;11167:8;:60::i;8004:189::-;8083:4;741:10;8137:28;741:10;8154:2;8158:6;8137:9;:28::i;8251:149::-;-1:-1:-1;;;;;8366:18:0;;;8340:7;8366:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8251:149::o;14721:340::-;-1:-1:-1;;;;;14822:19:0;;14814:68;;;;-1:-1:-1;;;14814:68:0;;3628:2:1;14814:68:0;;;3610:21:1;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:1;;;3750:34;3801:19;;14814:68:0;3426:400:1;14814:68:0;-1:-1:-1;;;;;14900:21:0;;14892:68;;;;-1:-1:-1;;;14892:68:0;;4033:2:1;14892:68:0;;;4015:21:1;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:1;;;4155:32;4204:19;;14892:68:0;3831:398:1;14892:68:0;-1:-1:-1;;;;;14971:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15022:32;;1391:25:1;;;15022:32:0;;1364:18:1;15022:32:0;;;;;;;14721:340;;;:::o;15342:411::-;15442:24;15469:25;15479:5;15486:7;15469:9;:25::i;:::-;15442:52;;-1:-1:-1;;15508:16:0;:37;15504:243;;15589:6;15569:16;:26;;15561:68;;;;-1:-1:-1;;;15561:68:0;;4436:2:1;15561:68:0;;;4418:21:1;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;15561:68:0;4234:353:1;15561:68:0;15671:51;15680:5;15687:7;15715:6;15696:16;:25;15671:8;:51::i;:::-;15432:321;15342:411;;;:::o;11720:788::-;-1:-1:-1;;;;;11816:18:0;;11808:68;;;;-1:-1:-1;;;11808:68:0;;4794:2:1;11808:68:0;;;4776:21:1;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:1;;;4916:35;4968:19;;11808:68:0;4592:401:1;11808:68:0;-1:-1:-1;;;;;11894:16:0;;11886:64;;;;-1:-1:-1;;;11886:64:0;;5200:2:1;11886:64:0;;;5182:21:1;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:1;;;5322:33;5372:19;;11886:64:0;4998:399:1;11886:64:0;-1:-1:-1;;;;;12032:15:0;;12010:19;12032:15;;;;;;;;;;;12065:21;;;;12057:72;;;;-1:-1:-1;;;12057:72:0;;5604:2:1;12057:72:0;;;5586:21:1;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:1;;;5726:36;5779:19;;12057:72:0;5402:402:1;12057:72:0;-1:-1:-1;;;;;12163:15:0;;;:9;:15;;;;;;;;;;;12181:20;;;12163:38;;12378:13;;;;;;;;;;:23;;;;;;12427:26;;1391:25:1;;;12378:13:0;;12427:26;;1364:18:1;12427:26:0;;;;;;;12464:37;16337:91;14:597:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:1:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:1;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "424800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22501",
								"balanceOf(address)": "750",
								"decimals()": "243",
								"decreaseAllowance(address,uint256)": "23104",
								"increaseAllowance(address,uint256)": "23066",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "403",
								"transfer(address,uint256)": "43222",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6315,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6310,
									"end": 6315,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6340,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6333,
									"end": 6340,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 66,
									"end": 143,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 144,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 163,
									"end": 167,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 160,
									"end": 161,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 153,
									"end": 168,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 187,
									"end": 191,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 192,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 203,
									"end": 1088,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 203,
									"end": 1088,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 257,
									"end": 262,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 313,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 303,
									"end": 307,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 295,
									"end": 301,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 291,
									"end": 308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 287,
									"end": 314,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 277,
									"end": 332,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 277,
									"end": 332,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 328,
									"end": 329,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 318,
									"end": 330,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 277,
									"end": 332,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 277,
									"end": 332,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 351,
									"end": 364,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 351,
									"end": 364,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 413,
									"end": 423,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 423,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 413,
									"end": 423,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 410,
									"end": 446,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 410,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 410,
									"end": 446,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 426,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 426,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 426,
									"end": 444,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 444,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 426,
									"end": 444,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 501,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 469,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 568,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 555,
									"end": 568,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 551,
									"end": 573,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 551,
									"end": 573,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 551,
									"end": 573,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 575,
									"end": 577,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 547,
									"end": 578,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 543,
									"end": 583,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 531,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 531,
									"end": 584,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 531,
									"end": 584,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 599,
									"end": 617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 599,
									"end": 617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 599,
									"end": 617,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 619,
									"end": 641,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 619,
									"end": 641,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 619,
									"end": 641,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 596,
									"end": 642,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 593,
									"end": 665,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 593,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 593,
									"end": 665,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 645,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 645,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 645,
									"end": 663,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 645,
									"end": 663,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 645,
									"end": 663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 685,
									"end": 695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 681,
									"end": 683,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 674,
									"end": 696,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 705,
									"end": 723,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 742,
									"end": 746,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 732,
									"end": 746,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 732,
									"end": 746,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 787,
									"end": 790,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 782,
									"end": 784,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 777,
									"end": 779,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 769,
									"end": 775,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 765,
									"end": 780,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 761,
									"end": 785,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 758,
									"end": 791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 755,
									"end": 808,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 755,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 755,
									"end": 808,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 804,
									"end": 805,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 801,
									"end": 802,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 794,
									"end": 806,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 755,
									"end": 808,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 755,
									"end": 808,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 826,
									"end": 827,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 827,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 817,
									"end": 827,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 836,
									"end": 969,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 836,
									"end": 969,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 850,
									"end": 852,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 847,
									"end": 848,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 844,
									"end": 853,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 836,
									"end": 969,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 836,
									"end": 969,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 836,
									"end": 969,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 938,
									"end": 952,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 938,
									"end": 952,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 938,
									"end": 952,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 934,
									"end": 957,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 934,
									"end": 957,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 958,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 907,
									"end": 921,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 907,
									"end": 921,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 907,
									"end": 921,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 903,
									"end": 926,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 903,
									"end": 926,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 896,
									"end": 959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 861,
									"end": 871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 861,
									"end": 871,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 861,
									"end": 871,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 861,
									"end": 871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 836,
									"end": 969,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 836,
									"end": 969,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 836,
									"end": 969,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 836,
									"end": 969,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 987,
									"end": 989,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 984,
									"end": 985,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 981,
									"end": 990,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1058,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 978,
									"end": 1058,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1047,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1024,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1044,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1048,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1058,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 978,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1076,
									"end": 1082,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 203,
									"end": 1088,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 203,
									"end": 1088,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1192,
									"end": 1198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1200,
									"end": 1206,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1253,
									"end": 1255,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 1250,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1232,
									"end": 1239,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1251,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1224,
									"end": 1256,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1221,
									"end": 1273,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1221,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1221,
									"end": 1273,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1270,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1266,
									"end": 1267,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1271,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1221,
									"end": 1273,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1221,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1312,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1312,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1361,
									"end": 1375,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1375,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1375,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1392,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1358,
									"end": 1392,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 1389,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1385,
									"end": 1386,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 1390,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1392,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1358,
									"end": 1392,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1411,
									"end": 1472,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1464,
									"end": 1471,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1461,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1444,
									"end": 1453,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1440,
									"end": 1462,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1411,
									"end": 1472,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1411,
									"end": 1472,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1411,
									"end": 1472,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1411,
									"end": 1472,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1472,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1472,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1518,
									"end": 1520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1507,
									"end": 1516,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1503,
									"end": 1521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1481,
									"end": 1522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1481,
									"end": 1522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1547,
									"end": 1549,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1537,
									"end": 1545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1534,
									"end": 1550,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1531,
									"end": 1567,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1531,
									"end": 1567,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1531,
									"end": 1567,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1563,
									"end": 1564,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1560,
									"end": 1561,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1531,
									"end": 1567,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1531,
									"end": 1567,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1531,
									"end": 1567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1649,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1641,
									"end": 1648,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1638,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1619,
									"end": 1628,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1615,
									"end": 1639,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1649,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1586,
									"end": 1649,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1586,
									"end": 1649,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1586,
									"end": 1649,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1576,
									"end": 1649,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1576,
									"end": 1649,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1576,
									"end": 1649,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1739,
									"end": 1740,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1735,
									"end": 1747,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1735,
									"end": 1747,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1735,
									"end": 1747,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1735,
									"end": 1747,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1782,
									"end": 1794,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1782,
									"end": 1794,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1782,
									"end": 1794,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1803,
									"end": 1864,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1803,
									"end": 1864,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1857,
									"end": 1861,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1849,
									"end": 1855,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1845,
									"end": 1862,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1835,
									"end": 1862,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1835,
									"end": 1862,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1803,
									"end": 1864,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1803,
									"end": 1864,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1910,
									"end": 1912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1902,
									"end": 1908,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1899,
									"end": 1913,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1876,
									"end": 1914,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1873,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1873,
									"end": 2091,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1947,
									"end": 2024,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1944,
									"end": 1945,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1937,
									"end": 2025,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2048,
									"end": 2052,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2045,
									"end": 2046,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2038,
									"end": 2053,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2076,
									"end": 2080,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2073,
									"end": 2074,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2066,
									"end": 2081,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1873,
									"end": 2091,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1873,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1873,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5796,
									"end": 17108,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d2e76236ba406c25814d5523f4be1492e49fab5872246bca867ea304e70eb31864736f6c634300080d0033",
									".code": [
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 17108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7606,
											"end": 7618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7368,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7452,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7368,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6489,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6508,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8791,
											"end": 8795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8845,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8868,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8876,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8845,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8845,
											"end": 8877,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8845,
											"end": 8877,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8845,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8894,
											"end": 8898,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8894,
											"end": 8898,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 9568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9620,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9636,
											"end": 9640,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9651,
											"end": 9657,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9620,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9620,
											"end": 9658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9620,
											"end": 9658,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9620,
											"end": 9658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9678,
											"end": 9682,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9684,
											"end": 9686,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9694,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9668,
											"end": 9695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9668,
											"end": 9695,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9668,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9712,
											"end": 9716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9712,
											"end": 9716,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10260,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10283,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10313,
											"end": 10323,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10285,
											"end": 10310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10285,
											"end": 10310,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 10285,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10260,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10260,
											"end": 10324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6689,
											"end": 6702,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6714,
											"end": 6728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 6728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6714,
											"end": 6728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6714,
											"end": 6728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10932,
											"end": 10936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10932,
											"end": 10936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11030,
											"end": 11037,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10986,
											"end": 11038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10986,
											"end": 11038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11076,
											"end": 11091,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 11072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 11091,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 11091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11167,
											"end": 11227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11176,
											"end": 11181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11183,
											"end": 11190,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11211,
											"end": 11226,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11208,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11226,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11167,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11167,
											"end": 11227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8083,
											"end": 8087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8156,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8164,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8137,
											"end": 8165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8377,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14721,
											"end": 15061,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14721,
											"end": 15061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14822,
											"end": 14841,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14822,
											"end": 14841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14900,
											"end": 14921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14900,
											"end": 14921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 15007,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 15007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 15007,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14721,
											"end": 15061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14721,
											"end": 15061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14721,
											"end": 15061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14721,
											"end": 15061,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15342,
											"end": 15753,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15342,
											"end": 15753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15442,
											"end": 15466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15469,
											"end": 15494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15479,
											"end": 15484,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15486,
											"end": 15493,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15469,
											"end": 15478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15469,
											"end": 15494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15469,
											"end": 15494,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15469,
											"end": 15494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15442,
											"end": 15494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15442,
											"end": 15494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15508,
											"end": 15524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15508,
											"end": 15545,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15504,
											"end": 15747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15504,
											"end": 15747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15595,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15671,
											"end": 15722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15680,
											"end": 15685,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15687,
											"end": 15694,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15715,
											"end": 15721,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15712,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15671,
											"end": 15679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 15671,
											"end": 15722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15671,
											"end": 15722,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15671,
											"end": 15722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15432,
											"end": 15753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15342,
											"end": 15753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15342,
											"end": 15753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15342,
											"end": 15753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15342,
											"end": 15753,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11720,
											"end": 12508,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11720,
											"end": 12508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11816,
											"end": 11834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11816,
											"end": 11834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11894,
											"end": 11910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11894,
											"end": 11910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12010,
											"end": 12029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12065,
											"end": 12086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12065,
											"end": 12086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12065,
											"end": 12086,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12065,
											"end": 12086,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12201,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12401,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12401,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12401,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12464,
											"end": 12501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16337,
											"end": 16428,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc20cic_flattened.sol\":\"ERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"erc20cic_flattened.sol\":{\"keccak256\":\"0x4f1463a499a78795af353a1bc16839b265fcb8aa66d0a42c0e9d44870f064f75\",\"urls\":[\"bzz-raw://44933ed4824b6b5d5a2a86a13ddd566319bc68fd86f953e8d2d24ccbece4706e\",\"dweb:/ipfs/QmcbK2hq4DQW7WqgnAHUkGfYG9UjSZ54ooLHAGacBfRgzJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "erc20cic_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "erc20cic_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "erc20cic_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "erc20cic_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "erc20cic_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc20cic_flattened.sol\":\"IERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"erc20cic_flattened.sol\":{\"keccak256\":\"0x4f1463a499a78795af353a1bc16839b265fcb8aa66d0a42c0e9d44870f064f75\",\"urls\":[\"bzz-raw://44933ed4824b6b5d5a2a86a13ddd566319bc68fd86f953e8d2d24ccbece4706e\",\"dweb:/ipfs/QmcbK2hq4DQW7WqgnAHUkGfYG9UjSZ54ooLHAGacBfRgzJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc20cic_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"erc20cic_flattened.sol\":{\"keccak256\":\"0x4f1463a499a78795af353a1bc16839b265fcb8aa66d0a42c0e9d44870f064f75\",\"urls\":[\"bzz-raw://44933ed4824b6b5d5a2a86a13ddd566319bc68fd86f953e8d2d24ccbece4706e\",\"dweb:/ipfs/QmcbK2hq4DQW7WqgnAHUkGfYG9UjSZ54ooLHAGacBfRgzJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc20cic_flattened.sol\":17160:17307  contract MyToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"erc20cic_flattened.sol\":17192:17305  constructor() ERC20(\"MyToken\", \"MTK\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"erc20cic_flattened.sol\":6244:6357  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79546f6b656e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"erc20cic_flattened.sol\":6318:6323  name_ */\n  dup2\n    /* \"erc20cic_flattened.sol\":6310:6315  _name */\n  0x03\n    /* \"erc20cic_flattened.sol\":6310:6323  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_5\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"erc20cic_flattened.sol\":6333:6350  _symbol = symbol_ */\n  dup1\n  mload\n  tag_7\n  swap1\n    /* \"erc20cic_flattened.sol\":6333:6340  _symbol */\n  0x04\n  swap1\n    /* \"erc20cic_flattened.sol\":6333:6350  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"erc20cic_flattened.sol\":6244:6357  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"erc20cic_flattened.sol\":17240:17298  _mint(msg.sender, 90000000000000000000 * 10 ** decimals()) */\n  tag_9\n    /* \"erc20cic_flattened.sol\":17246:17256  msg.sender */\n  caller\n    /* \"erc20cic_flattened.sol\":17287:17297  decimals() */\n  tag_10\n    /* \"erc20cic_flattened.sol\":17287:17295  decimals */\n  shl(0x20, tag_11)\n    /* \"erc20cic_flattened.sol\":17287:17297  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"erc20cic_flattened.sol\":17281:17297  10 ** decimals() */\n  tag_12\n  swap1\n    /* \"erc20cic_flattened.sol\":17281:17283  10 */\n  0x0a\n    /* \"erc20cic_flattened.sol\":17281:17297  10 ** decimals() */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"erc20cic_flattened.sol\":17258:17297  90000000000000000000 * 10 ** decimals() */\n  tag_14\n  swap1\n    /* \"erc20cic_flattened.sol\":17258:17278  90000000000000000000 */\n  0x04e1003b28d9280000\n    /* \"erc20cic_flattened.sol\":17258:17297  90000000000000000000 * 10 ** decimals() */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"erc20cic_flattened.sol\":17240:17245  _mint */\n  tag_16\n    /* \"erc20cic_flattened.sol\":17240:17298  _mint(msg.sender, 90000000000000000000 * 10 ** decimals()) */\n  jump\t// in\ntag_9:\n    /* \"erc20cic_flattened.sol\":17160:17307  contract MyToken is ERC20 {... */\n  jump(tag_47)\n    /* \"erc20cic_flattened.sol\":7368:7459  function decimals() public view virtual override returns (uint8) {... */\ntag_11:\n    /* \"erc20cic_flattened.sol\":7450:7452  18 */\n  0x12\n  swap1\n    /* \"erc20cic_flattened.sol\":7368:7459  function decimals() public view virtual override returns (uint8) {... */\n  jump\t// out\n    /* \"erc20cic_flattened.sol\":12784:13319  function _mint(address account, uint256 amount) internal virtual {... */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"erc20cic_flattened.sol\":12867:12888  account != address(0) */\n  dup3\n  and\n    /* \"erc20cic_flattened.sol\":12859:12924  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n    /* \"#utility.yul\":1961:1963   */\n  0x20\n    /* \"erc20cic_flattened.sol\":12859:12924  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1943:1964   */\n  mstore\n    /* \"#utility.yul\":2000:2002   */\n  0x1f\n    /* \"#utility.yul\":1980:1998   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1973:2003   */\n  mstore\n    /* \"#utility.yul\":2039:2072   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":2019:2037   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2012:2073   */\n  mstore\n    /* \"#utility.yul\":2090:2108   */\n  0x64\n  add\n    /* \"erc20cic_flattened.sol\":12859:12924  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"erc20cic_flattened.sol\":13011:13017  amount */\n  dup1\n    /* \"erc20cic_flattened.sol\":12995:13007  _totalSupply */\n  0x02\n  0x00\n    /* \"erc20cic_flattened.sol\":12995:13017  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"erc20cic_flattened.sol\":13163:13181  _balances[account] */\n  dup3\n  and\n    /* \"erc20cic_flattened.sol\":13163:13172  _balances */\n  0x00\n    /* \"erc20cic_flattened.sol\":13163:13181  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"erc20cic_flattened.sol\":13163:13191  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"erc20cic_flattened.sol\":13216:13253  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":2398:2423   */\n  dup5\n  dup2\n  mstore\n    /* \"erc20cic_flattened.sol\":13216:13253  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":2371:2389   */\n  add\n    /* \"erc20cic_flattened.sol\":13216:13253  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"erc20cic_flattened.sol\":12784:13319  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"erc20cic_flattened.sol\":17160:17307  contract MyToken is ERC20 {... */\ntag_6:\n  dup3\n  dup1\n  sload\n  tag_33\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_36\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_39)\ntag_36:\n  dup3\n  0x1f\n  lt\n  tag_37\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_39)\ntag_37:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_39\n  jumpi\n  swap2\n  dup3\n  add\ntag_38:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_39\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_38)\ntag_39:\n  pop\n  tag_40\n  swap3\n  swap2\n  pop\n  tag_41\n  jump\t// in\ntag_40:\n  pop\n  swap1\n  jump\t// out\ntag_41:\ntag_42:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_40\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_42)\n    /* \"#utility.yul\":14:198   */\ntag_44:\n    /* \"#utility.yul\":66:143   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:144   */\n  mstore\n    /* \"#utility.yul\":163:167   */\n  0x11\n    /* \"#utility.yul\":160:161   */\n  0x04\n    /* \"#utility.yul\":153:168   */\n  mstore\n    /* \"#utility.yul\":187:191   */\n  0x24\n    /* \"#utility.yul\":184:185   */\n  0x00\n    /* \"#utility.yul\":177:192   */\n  revert\n    /* \"#utility.yul\":203:625   */\ntag_45:\n    /* \"#utility.yul\":292:293   */\n  0x01\n    /* \"#utility.yul\":335:340   */\n  dup2\n    /* \"#utility.yul\":292:293   */\n  dup2\n    /* \"#utility.yul\":349:619   */\ntag_50:\n    /* \"#utility.yul\":370:377   */\n  dup1\n    /* \"#utility.yul\":360:368   */\n  dup6\n    /* \"#utility.yul\":357:378   */\n  gt\n    /* \"#utility.yul\":349:619   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":429:433   */\n  dup2\n    /* \"#utility.yul\":425:426   */\n  0x00\n    /* \"#utility.yul\":421:427   */\n  not\n    /* \"#utility.yul\":417:434   */\n  div\n    /* \"#utility.yul\":411:415   */\n  dup3\n    /* \"#utility.yul\":408:435   */\n  gt\n    /* \"#utility.yul\":405:458   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":438:456   */\n  tag_54\n  tag_44\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":488:495   */\n  dup1\n    /* \"#utility.yul\":478:486   */\n  dup6\n    /* \"#utility.yul\":474:496   */\n  and\n    /* \"#utility.yul\":471:526   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":508:524   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":471:526   */\ntag_55:\n    /* \"#utility.yul\":587:609   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":547:562   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":349:619   */\n  jump(tag_50)\ntag_52:\n    /* \"#utility.yul\":353:356   */\n  pop\n    /* \"#utility.yul\":203:625   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":630:1436   */\ntag_46:\n    /* \"#utility.yul\":679:684   */\n  0x00\n    /* \"#utility.yul\":709:717   */\n  dup3\n    /* \"#utility.yul\":699:779   */\n  tag_57\n  jumpi\n  pop\n    /* \"#utility.yul\":750:751   */\n  0x01\n    /* \"#utility.yul\":764:769   */\n  jump(tag_56)\n    /* \"#utility.yul\":699:779   */\ntag_57:\n    /* \"#utility.yul\":798:802   */\n  dup2\n    /* \"#utility.yul\":788:864   */\n  tag_58\n  jumpi\n  pop\n    /* \"#utility.yul\":835:836   */\n  0x00\n    /* \"#utility.yul\":849:854   */\n  jump(tag_56)\n    /* \"#utility.yul\":788:864   */\ntag_58:\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":898:899   */\n  0x01\n    /* \"#utility.yul\":893:952   */\n  dup2\n  eq\n  tag_60\n  jumpi\n    /* \"#utility.yul\":966:967   */\n  0x02\n    /* \"#utility.yul\":961:1091   */\n  dup2\n  eq\n  tag_61\n  jumpi\n    /* \"#utility.yul\":873:1091   */\n  jump(tag_59)\n    /* \"#utility.yul\":893:952   */\ntag_60:\n    /* \"#utility.yul\":923:924   */\n  0x01\n    /* \"#utility.yul\":914:924   */\n  swap2\n  pop\n    /* \"#utility.yul\":937:942   */\n  pop\n  jump(tag_56)\n    /* \"#utility.yul\":961:1091   */\ntag_61:\n    /* \"#utility.yul\":998:1001   */\n  0xff\n    /* \"#utility.yul\":988:996   */\n  dup5\n    /* \"#utility.yul\":985:1002   */\n  gt\n    /* \"#utility.yul\":982:1025   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1005:1023   */\n  tag_63\n  tag_44\n  jump\t// in\ntag_63:\n  pop\n  pop\n    /* \"#utility.yul\":1061:1062   */\n  0x01\n    /* \"#utility.yul\":1047:1063   */\n  dup3\n  shl\n    /* \"#utility.yul\":1076:1081   */\n  jump(tag_56)\n    /* \"#utility.yul\":873:1091   */\ntag_59:\n  pop\n    /* \"#utility.yul\":1175:1177   */\n  0x20\n    /* \"#utility.yul\":1165:1173   */\n  dup4\n    /* \"#utility.yul\":1162:1178   */\n  lt\n    /* \"#utility.yul\":1156:1159   */\n  0x0133\n    /* \"#utility.yul\":1150:1154   */\n  dup4\n    /* \"#utility.yul\":1147:1160   */\n  lt\n    /* \"#utility.yul\":1143:1179   */\n  and\n    /* \"#utility.yul\":1137:1139   */\n  0x4e\n    /* \"#utility.yul\":1127:1135   */\n  dup5\n    /* \"#utility.yul\":1124:1140   */\n  lt\n    /* \"#utility.yul\":1119:1121   */\n  0x0b\n    /* \"#utility.yul\":1113:1117   */\n  dup5\n    /* \"#utility.yul\":1110:1122   */\n  lt\n    /* \"#utility.yul\":1106:1141   */\n  and\n    /* \"#utility.yul\":1103:1180   */\n  or\n    /* \"#utility.yul\":1100:1259   */\n  iszero\n  tag_64\n  jumpi\n  pop\n    /* \"#utility.yul\":1212:1231   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1244:1249   */\n  jump(tag_56)\n    /* \"#utility.yul\":1100:1259   */\ntag_64:\n    /* \"#utility.yul\":1291:1325   */\n  tag_65\n    /* \"#utility.yul\":1316:1324   */\n  dup4\n    /* \"#utility.yul\":1310:1314   */\n  dup4\n    /* \"#utility.yul\":1291:1325   */\n  tag_45\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1361:1367   */\n  dup1\n    /* \"#utility.yul\":1357:1358   */\n  0x00\n    /* \"#utility.yul\":1353:1359   */\n  not\n    /* \"#utility.yul\":1349:1368   */\n  div\n    /* \"#utility.yul\":1340:1347   */\n  dup3\n    /* \"#utility.yul\":1337:1369   */\n  gt\n    /* \"#utility.yul\":1334:1392   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1372:1390   */\n  tag_67\n  tag_44\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1410:1430   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":630:1436   */\ntag_56:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1441:1581   */\ntag_13:\n    /* \"#utility.yul\":1499:1504   */\n  0x00\n    /* \"#utility.yul\":1528:1575   */\n  tag_69\n    /* \"#utility.yul\":1569:1573   */\n  0xff\n    /* \"#utility.yul\":1559:1567   */\n  dup5\n    /* \"#utility.yul\":1555:1574   */\n  and\n    /* \"#utility.yul\":1549:1553   */\n  dup4\n    /* \"#utility.yul\":1528:1575   */\n  tag_46\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1519:1575   */\n  swap4\n    /* \"#utility.yul\":1441:1581   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1586:1754   */\ntag_15:\n    /* \"#utility.yul\":1626:1633   */\n  0x00\n    /* \"#utility.yul\":1692:1693   */\n  dup2\n    /* \"#utility.yul\":1688:1689   */\n  0x00\n    /* \"#utility.yul\":1684:1690   */\n  not\n    /* \"#utility.yul\":1680:1694   */\n  div\n    /* \"#utility.yul\":1677:1678   */\n  dup4\n    /* \"#utility.yul\":1674:1695   */\n  gt\n    /* \"#utility.yul\":1669:1670   */\n  dup3\n    /* \"#utility.yul\":1662:1671   */\n  iszero\n    /* \"#utility.yul\":1655:1672   */\n  iszero\n    /* \"#utility.yul\":1651:1696   */\n  and\n    /* \"#utility.yul\":1648:1719   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1699:1717   */\n  tag_72\n  tag_44\n  jump\t// in\ntag_72:\n  pop\n    /* \"#utility.yul\":1739:1748   */\n  mul\n  swap1\n    /* \"#utility.yul\":1586:1754   */\n  jump\t// out\n    /* \"#utility.yul\":2119:2247   */\ntag_26:\n    /* \"#utility.yul\":2159:2162   */\n  0x00\n    /* \"#utility.yul\":2190:2191   */\n  dup3\n    /* \"#utility.yul\":2186:2192   */\n  not\n    /* \"#utility.yul\":2183:2184   */\n  dup3\n    /* \"#utility.yul\":2180:2193   */\n  gt\n    /* \"#utility.yul\":2177:2216   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2196:2214   */\n  tag_76\n  tag_44\n  jump\t// in\ntag_76:\n  pop\n    /* \"#utility.yul\":2232:2241   */\n  add\n  swap1\n    /* \"#utility.yul\":2119:2247   */\n  jump\t// out\n    /* \"#utility.yul\":2434:2871   */\ntag_34:\n    /* \"#utility.yul\":2513:2514   */\n  0x01\n    /* \"#utility.yul\":2509:2521   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2556:2568   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2577:2638   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2631:2635   */\n  0x7f\n    /* \"#utility.yul\":2623:2629   */\n  dup3\n    /* \"#utility.yul\":2619:2636   */\n  and\n    /* \"#utility.yul\":2609:2636   */\n  swap2\n  pop\n    /* \"#utility.yul\":2577:2638   */\ntag_79:\n    /* \"#utility.yul\":2684:2686   */\n  0x20\n    /* \"#utility.yul\":2676:2682   */\n  dup3\n    /* \"#utility.yul\":2673:2687   */\n  lt\n    /* \"#utility.yul\":2653:2671   */\n  dup2\n    /* \"#utility.yul\":2650:2688   */\n  sub\n    /* \"#utility.yul\":2647:2865   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2721:2798   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2718:2719   */\n  0x00\n    /* \"#utility.yul\":2711:2799   */\n  mstore\n    /* \"#utility.yul\":2822:2826   */\n  0x22\n    /* \"#utility.yul\":2819:2820   */\n  0x04\n    /* \"#utility.yul\":2812:2827   */\n  mstore\n    /* \"#utility.yul\":2850:2854   */\n  0x24\n    /* \"#utility.yul\":2847:2848   */\n  0x00\n    /* \"#utility.yul\":2840:2855   */\n  revert\n    /* \"#utility.yul\":2647:2865   */\ntag_80:\n  pop\n    /* \"#utility.yul\":2434:2871   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_47:\n    /* \"erc20cic_flattened.sol\":17160:17307  contract MyToken is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc20cic_flattened.sol\":17160:17307  contract MyToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"erc20cic_flattened.sol\":6422:6520  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc20cic_flattened.sol\":8708:8905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"erc20cic_flattened.sol\":8708:8905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"erc20cic_flattened.sol\":7519:7625  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"erc20cic_flattened.sol\":7606:7618  _totalSupply */\n      sload(0x02)\n        /* \"erc20cic_flattened.sol\":7519:7625  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"erc20cic_flattened.sol\":7519:7625  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_16\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"erc20cic_flattened.sol\":9467:9723  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_18\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":7368:7459  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"erc20cic_flattened.sol\":7450:7452  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"erc20cic_flattened.sol\":7368:7459  function decimals() public view virtual override returns (uint8) {... */\n      tag_16\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"erc20cic_flattened.sol\":10118:10352  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_18\n      tag_38\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":7683:7808  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_24\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":7783:7801  _balances[account] */\n      and\n        /* \"erc20cic_flattened.sol\":7757:7764  uint256 */\n      0x00\n        /* \"erc20cic_flattened.sol\":7783:7801  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"erc20cic_flattened.sol\":7683:7808  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"erc20cic_flattened.sol\":6633:6735  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_14\n      tag_47\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":10839:11266  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_18\n      tag_50\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":8004:8193  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_18\n      tag_54\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":8251:8400  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_24\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":6422:6520  function name() public view virtual override returns (string memory) {... */\n    tag_15:\n        /* \"erc20cic_flattened.sol\":6476:6489  string memory */\n      0x60\n        /* \"erc20cic_flattened.sol\":6508:6513  _name */\n      0x03\n        /* \"erc20cic_flattened.sol\":6501:6513  return _name */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc20cic_flattened.sol\":6422:6520  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc20cic_flattened.sol\":8708:8905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_21:\n        /* \"erc20cic_flattened.sol\":8791:8795  bool */\n      0x00\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"erc20cic_flattened.sol\":8845:8877  _approve(owner, spender, amount) */\n      tag_72\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      dup2\n        /* \"erc20cic_flattened.sol\":8861:8868  spender */\n      dup6\n        /* \"erc20cic_flattened.sol\":8870:8876  amount */\n      dup6\n        /* \"erc20cic_flattened.sol\":8845:8853  _approve */\n      tag_73\n        /* \"erc20cic_flattened.sol\":8845:8877  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_72:\n      pop\n        /* \"erc20cic_flattened.sol\":8894:8898  true */\n      0x01\n      swap4\n        /* \"erc20cic_flattened.sol\":8708:8905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc20cic_flattened.sol\":9467:9723  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_31:\n        /* \"erc20cic_flattened.sol\":9564:9568  bool */\n      0x00\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"erc20cic_flattened.sol\":9620:9658  _spendAllowance(from, spender, amount) */\n      tag_77\n        /* \"erc20cic_flattened.sol\":9636:9640  from */\n      dup6\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      dup3\n        /* \"erc20cic_flattened.sol\":9651:9657  amount */\n      dup6\n        /* \"erc20cic_flattened.sol\":9620:9635  _spendAllowance */\n      tag_78\n        /* \"erc20cic_flattened.sol\":9620:9658  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_77:\n        /* \"erc20cic_flattened.sol\":9668:9695  _transfer(from, to, amount) */\n      tag_79\n        /* \"erc20cic_flattened.sol\":9678:9682  from */\n      dup6\n        /* \"erc20cic_flattened.sol\":9684:9686  to */\n      dup6\n        /* \"erc20cic_flattened.sol\":9688:9694  amount */\n      dup6\n        /* \"erc20cic_flattened.sol\":9668:9677  _transfer */\n      tag_80\n        /* \"erc20cic_flattened.sol\":9668:9695  _transfer(from, to, amount) */\n      jump\t// in\n    tag_79:\n      pop\n        /* \"erc20cic_flattened.sol\":9712:9716  true */\n      0x01\n      swap5\n        /* \"erc20cic_flattened.sol\":9467:9723  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc20cic_flattened.sol\":10118:10352  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_39:\n        /* \"erc20cic_flattened.sol\":10206:10210  bool */\n      0x00\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"erc20cic_flattened.sol\":10260:10324  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_72\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      dup2\n        /* \"erc20cic_flattened.sol\":10276:10283  spender */\n      dup6\n        /* \"erc20cic_flattened.sol\":10313:10323  addedValue */\n      dup6\n        /* \"erc20cic_flattened.sol\":10285:10310  allowance(owner, spender) */\n      tag_85\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      dup4\n        /* \"erc20cic_flattened.sol\":10276:10283  spender */\n      dup4\n        /* \"erc20cic_flattened.sol\":10285:10294  allowance */\n      tag_60\n        /* \"erc20cic_flattened.sol\":10285:10310  allowance(owner, spender) */\n      jump\t// in\n    tag_85:\n        /* \"erc20cic_flattened.sol\":10285:10323  allowance(owner, spender) + addedValue */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"erc20cic_flattened.sol\":10260:10268  _approve */\n      tag_73\n        /* \"erc20cic_flattened.sol\":10260:10324  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":6633:6735  function symbol() public view virtual override returns (string memory) {... */\n    tag_47:\n        /* \"erc20cic_flattened.sol\":6689:6702  string memory */\n      0x60\n        /* \"erc20cic_flattened.sol\":6721:6728  _symbol */\n      0x04\n        /* \"erc20cic_flattened.sol\":6714:6728  return _symbol */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":10839:11266  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_51:\n        /* \"erc20cic_flattened.sol\":10932:10936  bool */\n      0x00\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"erc20cic_flattened.sol\":10932:10936  bool */\n      dup2\n        /* \"erc20cic_flattened.sol\":11013:11038  allowance(owner, spender) */\n      tag_97\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      dup3\n        /* \"erc20cic_flattened.sol\":11030:11037  spender */\n      dup7\n        /* \"erc20cic_flattened.sol\":11013:11022  allowance */\n      tag_60\n        /* \"erc20cic_flattened.sol\":11013:11038  allowance(owner, spender) */\n      jump\t// in\n    tag_97:\n        /* \"erc20cic_flattened.sol\":10986:11038  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"erc20cic_flattened.sol\":11076:11091  subtractedValue */\n      dup4\n        /* \"erc20cic_flattened.sol\":11056:11072  currentAllowance */\n      dup2\n        /* \"erc20cic_flattened.sol\":11056:11091  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"erc20cic_flattened.sol\":11048:11133  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"erc20cic_flattened.sol\":11048:11133  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"erc20cic_flattened.sol\":11048:11133  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"erc20cic_flattened.sol\":11167:11227  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_79\n        /* \"erc20cic_flattened.sol\":11176:11181  owner */\n      dup3\n        /* \"erc20cic_flattened.sol\":11183:11190  spender */\n      dup7\n        /* \"erc20cic_flattened.sol\":11211:11226  subtractedValue */\n      dup7\n        /* \"erc20cic_flattened.sol\":11192:11208  currentAllowance */\n      dup5\n        /* \"erc20cic_flattened.sol\":11192:11226  currentAllowance - subtractedValue */\n      sub\n        /* \"erc20cic_flattened.sol\":11167:11175  _approve */\n      tag_73\n        /* \"erc20cic_flattened.sol\":11167:11227  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":8004:8193  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_55:\n        /* \"erc20cic_flattened.sol\":8083:8087  bool */\n      0x00\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"erc20cic_flattened.sol\":8137:8165  _transfer(owner, to, amount) */\n      tag_72\n        /* \"erc20cic_flattened.sol\":741:751  msg.sender */\n      dup2\n        /* \"erc20cic_flattened.sol\":8154:8156  to */\n      dup6\n        /* \"erc20cic_flattened.sol\":8158:8164  amount */\n      dup6\n        /* \"erc20cic_flattened.sol\":8137:8146  _transfer */\n      tag_80\n        /* \"erc20cic_flattened.sol\":8137:8165  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"erc20cic_flattened.sol\":8251:8400  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":8366:8384  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"erc20cic_flattened.sol\":8340:8347  uint256 */\n      0x00\n        /* \"erc20cic_flattened.sol\":8366:8384  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"erc20cic_flattened.sol\":8366:8377  _allowances */\n      0x01\n        /* \"erc20cic_flattened.sol\":8366:8384  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc20cic_flattened.sol\":8366:8393  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"erc20cic_flattened.sol\":8251:8400  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"erc20cic_flattened.sol\":14721:15061  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":14822:14841  owner != address(0) */\n      dup4\n      and\n        /* \"erc20cic_flattened.sol\":14814:14882  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"erc20cic_flattened.sol\":14814:14882  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"erc20cic_flattened.sol\":14814:14882  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_99\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"erc20cic_flattened.sol\":14814:14882  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":14900:14921  spender != address(0) */\n      dup3\n      and\n        /* \"erc20cic_flattened.sol\":14892:14960  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"erc20cic_flattened.sol\":14892:14960  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"erc20cic_flattened.sol\":14892:14960  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"erc20cic_flattened.sol\":14892:14960  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":14971:14989  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc20cic_flattened.sol\":14971:14982  _allowances */\n      0x01\n        /* \"erc20cic_flattened.sol\":14971:14989  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc20cic_flattened.sol\":14971:14998  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"erc20cic_flattened.sol\":14971:15007  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"erc20cic_flattened.sol\":15022:15054  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"erc20cic_flattened.sol\":15022:15054  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"erc20cic_flattened.sol\":15022:15054  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc20cic_flattened.sol\":14721:15061  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc20cic_flattened.sol\":15342:15753  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_78:\n        /* \"erc20cic_flattened.sol\":15442:15466  uint256 currentAllowance */\n      0x00\n        /* \"erc20cic_flattened.sol\":15469:15494  allowance(owner, spender) */\n      tag_116\n        /* \"erc20cic_flattened.sol\":15479:15484  owner */\n      dup5\n        /* \"erc20cic_flattened.sol\":15486:15493  spender */\n      dup5\n        /* \"erc20cic_flattened.sol\":15469:15478  allowance */\n      tag_60\n        /* \"erc20cic_flattened.sol\":15469:15494  allowance(owner, spender) */\n      jump\t// in\n    tag_116:\n        /* \"erc20cic_flattened.sol\":15442:15494  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"erc20cic_flattened.sol\":15508:15524  currentAllowance */\n      dup2\n        /* \"erc20cic_flattened.sol\":15508:15545  currentAllowance != type(uint256).max */\n      eq\n        /* \"erc20cic_flattened.sol\":15504:15747  if (currentAllowance != type(uint256).max) {... */\n      tag_121\n      jumpi\n        /* \"erc20cic_flattened.sol\":15589:15595  amount */\n      dup2\n        /* \"erc20cic_flattened.sol\":15569:15585  currentAllowance */\n      dup2\n        /* \"erc20cic_flattened.sol\":15569:15595  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"erc20cic_flattened.sol\":15561:15629  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"erc20cic_flattened.sol\":15561:15629  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"erc20cic_flattened.sol\":15561:15629  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_99\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"erc20cic_flattened.sol\":15561:15629  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_118:\n        /* \"erc20cic_flattened.sol\":15671:15722  _approve(owner, spender, currentAllowance - amount) */\n      tag_121\n        /* \"erc20cic_flattened.sol\":15680:15685  owner */\n      dup5\n        /* \"erc20cic_flattened.sol\":15687:15694  spender */\n      dup5\n        /* \"erc20cic_flattened.sol\":15715:15721  amount */\n      dup5\n        /* \"erc20cic_flattened.sol\":15696:15712  currentAllowance */\n      dup5\n        /* \"erc20cic_flattened.sol\":15696:15721  currentAllowance - amount */\n      sub\n        /* \"erc20cic_flattened.sol\":15671:15679  _approve */\n      tag_73\n        /* \"erc20cic_flattened.sol\":15671:15722  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_121:\n        /* \"erc20cic_flattened.sol\":15432:15753  {... */\n      pop\n        /* \"erc20cic_flattened.sol\":15342:15753  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc20cic_flattened.sol\":11720:12508  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":11816:11834  from != address(0) */\n      dup4\n      and\n        /* \"erc20cic_flattened.sol\":11808:11876  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"erc20cic_flattened.sol\":11808:11876  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"erc20cic_flattened.sol\":11808:11876  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_99\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"erc20cic_flattened.sol\":11808:11876  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":11894:11910  to != address(0) */\n      dup3\n      and\n        /* \"erc20cic_flattened.sol\":11886:11950  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"erc20cic_flattened.sol\":11886:11950  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"erc20cic_flattened.sol\":11886:11950  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"erc20cic_flattened.sol\":11886:11950  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":12032:12047  _balances[from] */\n      dup4\n      and\n        /* \"erc20cic_flattened.sol\":12010:12029  uint256 fromBalance */\n      0x00\n        /* \"erc20cic_flattened.sol\":12032:12047  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc20cic_flattened.sol\":12065:12086  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"erc20cic_flattened.sol\":12057:12129  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"erc20cic_flattened.sol\":12057:12129  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"erc20cic_flattened.sol\":12057:12129  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_99\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"erc20cic_flattened.sol\":12057:12129  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc20cic_flattened.sol\":12163:12178  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"erc20cic_flattened.sol\":12163:12172  _balances */\n      0x00\n        /* \"erc20cic_flattened.sol\":12163:12178  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc20cic_flattened.sol\":12181:12201  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"erc20cic_flattened.sol\":12163:12201  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"erc20cic_flattened.sol\":12378:12391  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"erc20cic_flattened.sol\":12378:12401  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"erc20cic_flattened.sol\":12427:12453  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup6\n      dup2\n      mstore\n        /* \"erc20cic_flattened.sol\":12378:12391  _balances[to] */\n      swap1\n      swap3\n        /* \"erc20cic_flattened.sol\":12427:12453  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"erc20cic_flattened.sol\":12427:12453  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc20cic_flattened.sol\":12464:12501  _afterTokenTransfer(from, to, amount) */\n      tag_121\n        /* \"erc20cic_flattened.sol\":16337:16428  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_17:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_142:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_142)\n    tag_144:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_145:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_139:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_147:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_20:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_149:\n        /* \"#utility.yul\":962:991   */\n      tag_150\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_139\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_30:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_154:\n        /* \"#utility.yul\":1612:1641   */\n      tag_155\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_139\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_156\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_139\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_43:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_159:\n        /* \"#utility.yul\":2100:2129   */\n      tag_160\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_139\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_59:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_162:\n        /* \"#utility.yul\":2308:2337   */\n      tag_163\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_139\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_164\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_139\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_64:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_166:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      sub\n        /* \"#utility.yul\":2618:2779   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_87:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202458fa444c7cf00da355d2ed3f078dedf9beb433edd2b3eac17381f85836517464736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_726": {
									"entryPoint": null,
									"id": 726,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_703": {
									"entryPoint": null,
									"id": 703,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_692": {
									"entryPoint": null,
									"id": 692,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_521": {
									"entryPoint": 247,
									"id": 521,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_192": {
									"entryPoint": 242,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2873:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "66:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "163:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "153:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "153:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "153:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "184:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "187:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "177:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "177:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "177:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "267:358:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "277:16:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "292:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "281:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:16:1",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "311:7:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "302:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "327:13:1",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "335:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "327:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "391:228:1",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "436:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "438:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "438:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "438:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "411:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "425:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "421:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "421:6:1"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "429:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "417:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "417:17:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "408:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "408:27:1"
																		},
																		"nodeType": "YulIf",
																		"src": "405:53:1"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "497:29:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "499:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "512:5:1"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "519:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "508:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "508:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "499:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "478:8:1"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "488:7:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "474:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "474:22:1"
																		},
																		"nodeType": "YulIf",
																		"src": "471:55:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "539:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "551:4:1"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "557:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "547:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "547:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "539:4:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "575:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "591:7:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "600:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "587:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "587:22:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "575:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "360:8:1"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "370:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "357:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "357:21:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "379:3:1",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "353:3:1",
																"statements": []
															},
															"src": "349:270:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "231:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "238:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "251:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "258:4:1",
														"type": ""
													}
												],
												"src": "203:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "689:747:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "727:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "741:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "750:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "741:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "764:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "709:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "702:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:16:1"
															},
															"nodeType": "YulIf",
															"src": "699:80:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "812:52:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "826:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "835:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "826:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "849:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "798:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "791:12:1"
															},
															"nodeType": "YulIf",
															"src": "788:76:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "900:52:1",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "914:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "923:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "914:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "937:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "893:59:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "898:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "968:123:1",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "1003:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "1005:16:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1005:18:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "1005:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "988:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "998:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "985:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "985:17:1"
																				},
																				"nodeType": "YulIf",
																				"src": "982:43:1"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "1038:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1051:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1061:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1047:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1047:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1038:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1076:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "961:130:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "966:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "880:4:1"
															},
															"nodeType": "YulSwitch",
															"src": "873:218:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1189:70:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1203:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1216:4:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1222:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1212:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1212:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1203:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1244:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1113:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1119:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1110:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1127:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1137:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1124:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1124:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1106:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1150:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1156:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1147:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1165:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1175:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1162:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1162:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1143:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1143:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1103:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1103:77:1"
															},
															"nodeType": "YulIf",
															"src": "1100:159:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1268:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1310:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1316:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "1291:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1291:34:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1272:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "1281:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1370:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1372:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1372:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1372:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1340:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1357:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1353:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1353:6:1"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "1349:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1349:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1337:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:32:1"
															},
															"nodeType": "YulIf",
															"src": "1334:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1401:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1414:7:1"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "1423:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1410:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1401:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "660:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "666:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "679:5:1",
														"type": ""
													}
												],
												"src": "630:806:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1509:72:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1519:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1549:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1559:8:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1569:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1555:19:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "1528:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1528:47:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1519:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1480:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1486:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1499:5:1",
														"type": ""
													}
												],
												"src": "1441:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1638:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1697:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1699:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1699:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1699:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1669:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1662:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1662:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1655:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1655:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1677:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1688:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1684:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1684:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1692:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1680:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1651:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1651:45:1"
															},
															"nodeType": "YulIf",
															"src": "1648:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1728:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1743:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1746:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1739:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1728:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1617:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1620:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1626:7:1",
														"type": ""
													}
												],
												"src": "1586:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1933:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1950:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1961:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1943:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1943:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1984:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1995:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1980:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1980:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1973:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1973:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1973:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2034:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2039:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2012:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2082:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2094:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2090:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2082:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1910:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1924:4:1",
														"type": ""
													}
												],
												"src": "1759:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2167:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2194:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2196:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2196:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2196:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2183:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2190:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2186:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2186:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2180:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:13:1"
															},
															"nodeType": "YulIf",
															"src": "2177:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2225:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2236:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2239:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2232:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2225:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2150:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2153:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2159:3:1",
														"type": ""
													}
												],
												"src": "2119:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2363:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2375:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2386:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2371:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2363:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2405:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2416:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2398:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2398:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2398:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2322:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2333:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2344:4:1",
														"type": ""
													}
												],
												"src": "2252:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2489:382:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2499:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2513:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2516:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2509:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2509:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2560:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2566:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2556:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2556:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2534:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2607:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2609:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2623:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2631:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2619:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2619:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2609:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2587:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:26:1"
															},
															"nodeType": "YulIf",
															"src": "2577:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2697:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2718:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2721:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2711:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2711:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2711:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2819:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2822:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2812:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2812:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2812:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2847:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2850:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2840:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2840:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2840:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2653:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2676:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2684:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2673:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2673:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2650:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:38:1"
															},
															"nodeType": "YulIf",
															"src": "2647:218:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2469:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2478:6:1",
														"type": ""
													}
												],
												"src": "2434:437:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b0000000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620001d7565b508051620000ac906004906020840190620001d7565b505050620000ec33620000c4620000f260201b60201c565b620000d190600a620003ab565b620000e6906804e1003b28d9280000620003c3565b620000f7565b62000455565b601290565b6001600160a01b0382166200016c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001809190620003e5565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b828054620001e59062000400565b90600052602060002090601f01602090048101928262000209576000855562000254565b82601f106200022457805160ff191683800117855562000254565b8280016001018555821562000254579182015b828111156200025457825182559160200191906001019062000237565b506200026292915062000266565b5090565b5b8082111562000262576000815560010162000267565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b80851115620002ed578160001904821115620002d157620002d16200027d565b80851615620002df57918102915b93841c9390800290620002b1565b509250929050565b6000826200030657506001620003a5565b816200031557506000620003a5565b81600181146200032e5760028114620003395762000359565b6001915050620003a5565b60ff8411156200034d576200034d6200027d565b50506001821b620003a5565b5060208310610133831016604e8410600b84101617156200037e575081810a620003a5565b6200038a8383620002ac565b8060001904821115620003a157620003a16200027d565b0290505b92915050565b6000620003bc60ff841683620002f5565b9392505050565b6000816000190483118215151615620003e057620003e06200027d565b500290565b60008219821115620003fb57620003fb6200027d565b500190565b600181811c908216806200041557607f821691505b6020821081036200044f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b61084c80620004656000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100df57806323b872dd146100f1578063313ce56714610104578063395093511461011357806370a082311461012657806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d575b600080fd5b6100a6610190565b6040516100b3919061068a565b60405180910390f35b6100cf6100ca3660046106fb565b610222565b60405190151581526020016100b3565b6002545b6040519081526020016100b3565b6100cf6100ff366004610725565b61023a565b604051601281526020016100b3565b6100cf6101213660046106fb565b61025e565b6100e3610134366004610761565b6001600160a01b031660009081526020819052604090205490565b6100a6610280565b6100cf6101653660046106fb565b61028f565b6100cf6101783660046106fb565b61030f565b6100e361018b366004610783565b61031d565b60606003805461019f906107b6565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb906107b6565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b600033610230818585610348565b5060019392505050565b60003361024885828561046c565b6102538585856104e6565b506001949350505050565b600033610230818585610271838361031d565b61027b91906107f0565b610348565b60606004805461019f906107b6565b6000338161029d828661031d565b9050838110156103025760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102538286868403610348565b6000336102308185856104e6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103aa5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f9565b6001600160a01b03821661040b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610478848461031d565b905060001981146104e057818110156104d35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102f9565b6104e08484848403610348565b50505050565b6001600160a01b03831661054a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f9565b6001600160a01b0382166105ac5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f9565b6001600160a01b038316600090815260208190526040902054818110156106245760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f9565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e0565b600060208083528351808285015260005b818110156106b75785810183015185820160400152820161069b565b818111156106c9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106f657600080fd5b919050565b6000806040838503121561070e57600080fd5b610717836106df565b946020939093013593505050565b60008060006060848603121561073a57600080fd5b610743846106df565b9250610751602085016106df565b9150604084013590509250925092565b60006020828403121561077357600080fd5b61077c826106df565b9392505050565b6000806040838503121561079657600080fd5b61079f836106df565b91506107ad602084016106df565b90509250929050565b600181811c908216806107ca57607f821691505b6020821081036107ea57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561081157634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212202458fa444c7cf00da355d2ed3f078dedf9beb433edd2b3eac17381f85836517464736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0x1D7 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xAC SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1D7 JUMP JUMPDEST POP POP POP PUSH3 0xEC CALLER PUSH3 0xC4 PUSH3 0xF2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xD1 SWAP1 PUSH1 0xA PUSH3 0x3AB JUMP JUMPDEST PUSH3 0xE6 SWAP1 PUSH9 0x4E1003B28D9280000 PUSH3 0x3C3 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST PUSH3 0x455 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x16C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x180 SWAP2 SWAP1 PUSH3 0x3E5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1E5 SWAP1 PUSH3 0x400 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x209 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x254 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x224 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x254 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x254 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x254 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x237 JUMP JUMPDEST POP PUSH3 0x262 SWAP3 SWAP2 POP PUSH3 0x266 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x262 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x267 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x2ED JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x2D1 JUMPI PUSH3 0x2D1 PUSH3 0x27D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x2DF JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x2B1 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x306 JUMPI POP PUSH1 0x1 PUSH3 0x3A5 JUMP JUMPDEST DUP2 PUSH3 0x315 JUMPI POP PUSH1 0x0 PUSH3 0x3A5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x32E JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x339 JUMPI PUSH3 0x359 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x3A5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x34D JUMPI PUSH3 0x34D PUSH3 0x27D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x3A5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x37E JUMPI POP DUP2 DUP2 EXP PUSH3 0x3A5 JUMP JUMPDEST PUSH3 0x38A DUP4 DUP4 PUSH3 0x2AC JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x3A1 JUMPI PUSH3 0x3A1 PUSH3 0x27D JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3BC PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x2F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x3E0 JUMPI PUSH3 0x3E0 PUSH3 0x27D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x3FB JUMPI PUSH3 0x3FB PUSH3 0x27D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x415 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x44F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84C DUP1 PUSH3 0x465 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0xCA CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA6 PUSH2 0x280 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x28F JUMP JUMPDEST PUSH2 0xCF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x7B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x348 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x248 DUP6 DUP3 DUP6 PUSH2 0x46C JUMP JUMPDEST PUSH2 0x253 DUP6 DUP6 DUP6 PUSH2 0x4E6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x271 DUP4 DUP4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x29D DUP3 DUP7 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x253 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x478 DUP5 DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x4E0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x348 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x69B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x717 DUP4 PUSH2 0x6DF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x743 DUP5 PUSH2 0x6DF JUMP JUMPDEST SWAP3 POP PUSH2 0x751 PUSH1 0x20 DUP6 ADD PUSH2 0x6DF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77C DUP3 PUSH2 0x6DF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79F DUP4 PUSH2 0x6DF JUMP JUMPDEST SWAP2 POP PUSH2 0x7AD PUSH1 0x20 DUP5 ADD PUSH2 0x6DF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x811 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 PC STATICCALL DIFFICULTY 0x4C PUSH29 0xF00DA355D2ED3F078DEDF9BEB433EDD2B3EAC17381F85836517464736F PUSH13 0x634300080D0033000000000000 ",
							"sourceMap": "17160:147:0:-:0;;;17192:113;;;;;;;;;;6244;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6318:5;6310;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6333:17:0;;;;:7;;:17;;;;;:::i;:::-;;6244:113;;17240:58:::1;17246:10;17287;:8;;;:10;;:::i;:::-;17281:16;::::0;:2:::1;:16;:::i;:::-;17258:39;::::0;:20:::1;:39;:::i;:::-;17240:5;:58::i;:::-;17160:147:::0;;7368:91;7450:2;;7368:91::o;12784:535::-;-1:-1:-1;;;;;12867:21:0;;12859:65;;;;;;;1961:2:1;12859:65:0;;;1943:21:1;2000:2;1980:18;;;1973:30;2039:33;2019:18;;;2012:61;2090:18;;12859:65:0;;;;;;;;13011:6;12995:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13163:18:0;;:9;:18;;;;;;;;;;;:28;;;;;;13216:37;2398:25:1;;;13216:37:0;;2371:18:1;13216:37:0;;;;;;;12784:535;;:::o;17160:147::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17160:147:0;;;-1:-1:-1;17160:147:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:184:1;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:422;292:1;335:5;292:1;349:270;370:7;360:8;357:21;349:270;;;429:4;425:1;421:6;417:17;411:4;408:27;405:53;;;438:18;;:::i;:::-;488:7;478:8;474:22;471:55;;;508:16;;;;471:55;587:22;;;;547:15;;;;349:270;;;353:3;203:422;;;;;:::o;630:806::-;679:5;709:8;699:80;;-1:-1:-1;750:1:1;764:5;;699:80;798:4;788:76;;-1:-1:-1;835:1:1;849:5;;788:76;880:4;898:1;893:59;;;;966:1;961:130;;;;873:218;;893:59;923:1;914:10;;937:5;;;961:130;998:3;988:8;985:17;982:43;;;1005:18;;:::i;:::-;-1:-1:-1;;1061:1:1;1047:16;;1076:5;;873:218;;1175:2;1165:8;1162:16;1156:3;1150:4;1147:13;1143:36;1137:2;1127:8;1124:16;1119:2;1113:4;1110:12;1106:35;1103:77;1100:159;;;-1:-1:-1;1212:19:1;;;1244:5;;1100:159;1291:34;1316:8;1310:4;1291:34;:::i;:::-;1361:6;1357:1;1353:6;1349:19;1340:7;1337:32;1334:58;;;1372:18;;:::i;:::-;1410:20;;-1:-1:-1;630:806:1;;;;;:::o;1441:140::-;1499:5;1528:47;1569:4;1559:8;1555:19;1549:4;1528:47;:::i;:::-;1519:56;1441:140;-1:-1:-1;;;1441:140:1:o;1586:168::-;1626:7;1692:1;1688;1684:6;1680:14;1677:1;1674:21;1669:1;1662:9;1655:17;1651:45;1648:71;;;1699:18;;:::i;:::-;-1:-1:-1;1739:9:1;;1586:168::o;2119:128::-;2159:3;2190:1;2186:6;2183:1;2180:13;2177:39;;;2196:18;;:::i;:::-;-1:-1:-1;2232:9:1;;2119:128::o;2434:437::-;2513:1;2509:12;;;;2556;;;2577:61;;2631:4;2623:6;2619:17;2609:27;;2577:61;2684:2;2676:6;2673:14;2653:18;2650:38;2647:218;;2721:77;2718:1;2711:88;2822:4;2819:1;2812:15;2850:4;2847:1;2840:15;2647:218;;2434:437;;;:::o;:::-;17160:147:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_703": {
									"entryPoint": null,
									"id": 703,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_638": {
									"entryPoint": 840,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_692": {
									"entryPoint": null,
									"id": 692,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_681": {
									"entryPoint": 1132,
									"id": 681,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_464": {
									"entryPoint": 1254,
									"id": 464,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_259": {
									"entryPoint": 797,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_284": {
									"entryPoint": 546,
									"id": 284,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_387": {
									"entryPoint": 655,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_346": {
									"entryPoint": 606,
									"id": 346,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_172": {
									"entryPoint": 400,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_182": {
									"entryPoint": 640,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_317": {
									"entryPoint": 570,
									"id": 317,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_241": {
									"entryPoint": 783,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:1"
															},
															"nodeType": "YulIf",
															"src": "713:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													}
												],
												"src": "616:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:1"
															},
															"nodeType": "YulIf",
															"src": "891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:1",
														"type": ""
													}
												],
												"src": "794:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:1",
														"type": ""
													}
												],
												"src": "1053:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:1",
														"type": ""
													}
												],
												"src": "1245:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:1"
															},
															"nodeType": "YulIf",
															"src": "1541:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:1",
														"type": ""
													}
												],
												"src": "1427:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:1",
														"type": ""
													}
												],
												"src": "1760:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:1"
															},
															"nodeType": "YulIf",
															"src": "2029:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:1",
														"type": ""
													}
												],
												"src": "1949:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:1"
															},
															"nodeType": "YulIf",
															"src": "2237:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:1",
														"type": ""
													}
												],
												"src": "2140:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:1"
															},
															"nodeType": "YulIf",
															"src": "2548:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:1"
															},
															"nodeType": "YulIf",
															"src": "2618:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:1",
														"type": ""
													}
												],
												"src": "2405:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:1"
															},
															"nodeType": "YulIf",
															"src": "2848:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:1",
														"type": ""
													}
												],
												"src": "2790:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:1",
														"type": ""
													}
												],
												"src": "3020:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:1",
														"type": ""
													}
												],
												"src": "3426:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:1",
														"type": ""
													}
												],
												"src": "3831:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:1",
														"type": ""
													}
												],
												"src": "4234:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:1",
														"type": ""
													}
												],
												"src": "4592:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:1",
														"type": ""
													}
												],
												"src": "4998:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:1",
														"type": ""
													}
												],
												"src": "5402:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100df57806323b872dd146100f1578063313ce56714610104578063395093511461011357806370a082311461012657806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d575b600080fd5b6100a6610190565b6040516100b3919061068a565b60405180910390f35b6100cf6100ca3660046106fb565b610222565b60405190151581526020016100b3565b6002545b6040519081526020016100b3565b6100cf6100ff366004610725565b61023a565b604051601281526020016100b3565b6100cf6101213660046106fb565b61025e565b6100e3610134366004610761565b6001600160a01b031660009081526020819052604090205490565b6100a6610280565b6100cf6101653660046106fb565b61028f565b6100cf6101783660046106fb565b61030f565b6100e361018b366004610783565b61031d565b60606003805461019f906107b6565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb906107b6565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b600033610230818585610348565b5060019392505050565b60003361024885828561046c565b6102538585856104e6565b506001949350505050565b600033610230818585610271838361031d565b61027b91906107f0565b610348565b60606004805461019f906107b6565b6000338161029d828661031d565b9050838110156103025760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102538286868403610348565b6000336102308185856104e6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103aa5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f9565b6001600160a01b03821661040b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610478848461031d565b905060001981146104e057818110156104d35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102f9565b6104e08484848403610348565b50505050565b6001600160a01b03831661054a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f9565b6001600160a01b0382166105ac5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f9565b6001600160a01b038316600090815260208190526040902054818110156106245760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f9565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e0565b600060208083528351808285015260005b818110156106b75785810183015185820160400152820161069b565b818111156106c9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106f657600080fd5b919050565b6000806040838503121561070e57600080fd5b610717836106df565b946020939093013593505050565b60008060006060848603121561073a57600080fd5b610743846106df565b9250610751602085016106df565b9150604084013590509250925092565b60006020828403121561077357600080fd5b61077c826106df565b9392505050565b6000806040838503121561079657600080fd5b61079f836106df565b91506107ad602084016106df565b90509250929050565b600181811c908216806107ca57607f821691505b6020821081036107ea57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561081157634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212202458fa444c7cf00da355d2ed3f078dedf9beb433edd2b3eac17381f85836517464736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0xCA CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA6 PUSH2 0x280 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x28F JUMP JUMPDEST PUSH2 0xCF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x7B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x348 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x248 DUP6 DUP3 DUP6 PUSH2 0x46C JUMP JUMPDEST PUSH2 0x253 DUP6 DUP6 DUP6 PUSH2 0x4E6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x271 DUP4 DUP4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x29D DUP3 DUP7 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x253 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x348 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x478 DUP5 DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x4E0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x348 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x69B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x717 DUP4 PUSH2 0x6DF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x743 DUP5 PUSH2 0x6DF JUMP JUMPDEST SWAP3 POP PUSH2 0x751 PUSH1 0x20 DUP6 ADD PUSH2 0x6DF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77C DUP3 PUSH2 0x6DF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79F DUP4 PUSH2 0x6DF JUMP JUMPDEST SWAP2 POP PUSH2 0x7AD PUSH1 0x20 DUP5 ADD PUSH2 0x6DF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x811 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 PC STATICCALL DIFFICULTY 0x4C PUSH29 0xF00DA355D2ED3F078DEDF9BEB433EDD2B3EAC17381F85836517464736F PUSH13 0x634300080D0033000000000000 ",
							"sourceMap": "17160:147:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6422:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8708:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;8708:197:0;1053:187:1;7519:106:0;7606:12;;7519:106;;;1391:25:1;;;1379:2;1364:18;7519:106:0;1245:177:1;9467:256:0;;;;;;:::i;:::-;;:::i;7368:91::-;;;7450:2;1902:36:1;;1890:2;1875:18;7368:91:0;1760:184:1;10118:234:0;;;;;;:::i;:::-;;:::i;7683:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7783:18:0;7757:7;7783:18;;;;;;;;;;;;7683:125;6633:102;;;:::i;10839:427::-;;;;;;:::i;:::-;;:::i;8004:189::-;;;;;;:::i;:::-;;:::i;8251:149::-;;;;;;:::i;:::-;;:::i;6422:98::-;6476:13;6508:5;6501:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6422:98;:::o;8708:197::-;8791:4;741:10;8845:32;741:10;8861:7;8870:6;8845:8;:32::i;:::-;-1:-1:-1;8894:4:0;;8708:197;-1:-1:-1;;;8708:197:0:o;9467:256::-;9564:4;741:10;9620:38;9636:4;741:10;9651:6;9620:15;:38::i;:::-;9668:27;9678:4;9684:2;9688:6;9668:9;:27::i;:::-;-1:-1:-1;9712:4:0;;9467:256;-1:-1:-1;;;;9467:256:0:o;10118:234::-;10206:4;741:10;10260:64;741:10;10276:7;10313:10;10285:25;741:10;10276:7;10285:9;:25::i;:::-;:38;;;;:::i;:::-;10260:8;:64::i;6633:102::-;6689:13;6721:7;6714:14;;;;;:::i;10839:427::-;10932:4;741:10;10932:4;11013:25;741:10;11030:7;11013:9;:25::i;:::-;10986:52;;11076:15;11056:16;:35;;11048:85;;;;-1:-1:-1;;;11048:85:0;;3222:2:1;11048:85:0;;;3204:21:1;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:1;;;3344:35;3396:19;;11048:85:0;;;;;;;;;11167:60;11176:5;11183:7;11211:15;11192:16;:34;11167:8;:60::i;8004:189::-;8083:4;741:10;8137:28;741:10;8154:2;8158:6;8137:9;:28::i;8251:149::-;-1:-1:-1;;;;;8366:18:0;;;8340:7;8366:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8251:149::o;14721:340::-;-1:-1:-1;;;;;14822:19:0;;14814:68;;;;-1:-1:-1;;;14814:68:0;;3628:2:1;14814:68:0;;;3610:21:1;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:1;;;3750:34;3801:19;;14814:68:0;3426:400:1;14814:68:0;-1:-1:-1;;;;;14900:21:0;;14892:68;;;;-1:-1:-1;;;14892:68:0;;4033:2:1;14892:68:0;;;4015:21:1;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:1;;;4155:32;4204:19;;14892:68:0;3831:398:1;14892:68:0;-1:-1:-1;;;;;14971:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15022:32;;1391:25:1;;;15022:32:0;;1364:18:1;15022:32:0;;;;;;;14721:340;;;:::o;15342:411::-;15442:24;15469:25;15479:5;15486:7;15469:9;:25::i;:::-;15442:52;;-1:-1:-1;;15508:16:0;:37;15504:243;;15589:6;15569:16;:26;;15561:68;;;;-1:-1:-1;;;15561:68:0;;4436:2:1;15561:68:0;;;4418:21:1;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;15561:68:0;4234:353:1;15561:68:0;15671:51;15680:5;15687:7;15715:6;15696:16;:25;15671:8;:51::i;:::-;15432:321;15342:411;;;:::o;11720:788::-;-1:-1:-1;;;;;11816:18:0;;11808:68;;;;-1:-1:-1;;;11808:68:0;;4794:2:1;11808:68:0;;;4776:21:1;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:1;;;4916:35;4968:19;;11808:68:0;4592:401:1;11808:68:0;-1:-1:-1;;;;;11894:16:0;;11886:64;;;;-1:-1:-1;;;11886:64:0;;5200:2:1;11886:64:0;;;5182:21:1;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:1;;;5322:33;5372:19;;11886:64:0;4998:399:1;11886:64:0;-1:-1:-1;;;;;12032:15:0;;12010:19;12032:15;;;;;;;;;;;12065:21;;;;12057:72;;;;-1:-1:-1;;;12057:72:0;;5604:2:1;12057:72:0;;;5586:21:1;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:1;;;5726:36;5779:19;;12057:72:0;5402:402:1;12057:72:0;-1:-1:-1;;;;;12163:15:0;;;:9;:15;;;;;;;;;;;12181:20;;;12163:38;;12378:13;;;;;;;;;;:23;;;;;;12427:26;;1391:25:1;;;12378:13:0;;12427:26;;1364:18:1;12427:26:0;;;;;;;12464:37;16337:91;14:597:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:1:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:1;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "424800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22501",
								"balanceOf(address)": "750",
								"decimals()": "243",
								"decreaseAllowance(address,uint256)": "23104",
								"increaseAllowance(address,uint256)": "23066",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "403",
								"transfer(address,uint256)": "43222",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17305,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17305,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17192,
									"end": 17305,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17192,
									"end": 17305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17305,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17305,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17192,
									"end": 17305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17305,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "4D79546F6B656E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "PUSH",
									"source": 0,
									"value": "4D544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6318,
									"end": 6323,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6315,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6310,
									"end": 6323,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6340,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6333,
									"end": 6340,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17240,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 17246,
									"end": 17256,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17297,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 17287,
									"end": 17295,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 17287,
									"end": 17295,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17287,
									"end": 17295,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17297,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17287,
									"end": 17297,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 17287,
									"end": 17297,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 17287,
									"end": 17297,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 17287,
									"end": 17297,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17281,
									"end": 17297,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 17281,
									"end": 17297,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17281,
									"end": 17283,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 17281,
									"end": 17297,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 17281,
									"end": 17297,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 17281,
									"end": 17297,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 17281,
									"end": 17297,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17258,
									"end": 17297,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 17258,
									"end": 17297,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17258,
									"end": 17278,
									"name": "PUSH",
									"source": 0,
									"value": "4E1003B28D9280000"
								},
								{
									"begin": 17258,
									"end": 17297,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 17258,
									"end": 17297,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 17258,
									"end": 17297,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 17258,
									"end": 17297,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17240,
									"end": 17245,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 17240,
									"end": 17298,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 17240,
									"end": 17298,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 17240,
									"end": 17298,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7368,
									"end": 7459,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7368,
									"end": 7459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7450,
									"end": 7452,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7450,
									"end": 7452,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7368,
									"end": 7459,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 12784,
									"end": 13319,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 12784,
									"end": 13319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12867,
									"end": 12888,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12867,
									"end": 12888,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1961,
									"end": 1963,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1943,
									"end": 1964,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2000,
									"end": 2002,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 2003,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2039,
									"end": 2072,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 2019,
									"end": 2037,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2019,
									"end": 2037,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2019,
									"end": 2037,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2073,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2090,
									"end": 2108,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2090,
									"end": 2108,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12859,
									"end": 12924,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13011,
									"end": 13017,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12995,
									"end": 13007,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12995,
									"end": 13007,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12995,
									"end": 13017,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12995,
									"end": 13017,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12995,
									"end": 13017,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12995,
									"end": 13017,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 12995,
									"end": 13017,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12995,
									"end": 13017,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12995,
									"end": 13017,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 12995,
									"end": 13017,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12995,
									"end": 13017,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 12995,
									"end": 13017,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12995,
									"end": 13017,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12995,
									"end": 13017,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12995,
									"end": 13017,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13163,
									"end": 13181,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13172,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13163,
									"end": 13181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13181,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13181,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13163,
									"end": 13181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13181,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13181,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13163,
									"end": 13181,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13181,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13181,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13191,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13191,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13191,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13163,
									"end": 13191,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13216,
									"end": 13253,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2398,
									"end": 2423,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2398,
									"end": 2423,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2398,
									"end": 2423,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13216,
									"end": 13253,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 13216,
									"end": 13253,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2371,
									"end": 2389,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13216,
									"end": 13253,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13216,
									"end": 13253,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13216,
									"end": 13253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13216,
									"end": 13253,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13216,
									"end": 13253,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13216,
									"end": 13253,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13216,
									"end": 13253,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 13319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 13319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12784,
									"end": 13319,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 66,
									"end": 143,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 144,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 163,
									"end": 167,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 160,
									"end": 161,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 153,
									"end": 168,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 187,
									"end": 191,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 192,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 203,
									"end": 625,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 203,
									"end": 625,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 292,
									"end": 293,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 335,
									"end": 340,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 292,
									"end": 293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 349,
									"end": 619,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 349,
									"end": 619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 370,
									"end": 377,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 360,
									"end": 368,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 357,
									"end": 378,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 349,
									"end": 619,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 349,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 349,
									"end": 619,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 429,
									"end": 433,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 425,
									"end": 426,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 421,
									"end": 427,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 417,
									"end": 434,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 411,
									"end": 415,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 408,
									"end": 435,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 405,
									"end": 458,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 405,
									"end": 458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 405,
									"end": 458,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 438,
									"end": 456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 438,
									"end": 456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 438,
									"end": 456,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 438,
									"end": 456,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 438,
									"end": 456,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 488,
									"end": 495,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 478,
									"end": 486,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 474,
									"end": 496,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 471,
									"end": 526,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 471,
									"end": 526,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 471,
									"end": 526,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 508,
									"end": 524,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 508,
									"end": 524,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 508,
									"end": 524,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 508,
									"end": 524,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 471,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 471,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 587,
									"end": 609,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 587,
									"end": 609,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 587,
									"end": 609,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 587,
									"end": 609,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 547,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 547,
									"end": 562,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 547,
									"end": 562,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 547,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 349,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 349,
									"end": 619,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 349,
									"end": 619,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 349,
									"end": 619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 353,
									"end": 356,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 203,
									"end": 625,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 625,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 203,
									"end": 625,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 625,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 203,
									"end": 625,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 203,
									"end": 625,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 630,
									"end": 1436,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 630,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 679,
									"end": 684,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 709,
									"end": 717,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 699,
									"end": 779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 699,
									"end": 779,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 750,
									"end": 751,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 699,
									"end": 779,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 699,
									"end": 779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 798,
									"end": 802,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 788,
									"end": 864,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 788,
									"end": 864,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 835,
									"end": 836,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 849,
									"end": 854,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 849,
									"end": 854,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 788,
									"end": 864,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 788,
									"end": 864,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 898,
									"end": 899,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 893,
									"end": 952,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 893,
									"end": 952,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 893,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 893,
									"end": 952,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 966,
									"end": 967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 873,
									"end": 1091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 873,
									"end": 1091,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 893,
									"end": 952,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 893,
									"end": 952,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 923,
									"end": 924,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 914,
									"end": 924,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 914,
									"end": 924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 937,
									"end": 942,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 937,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 937,
									"end": 942,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 998,
									"end": 1001,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 988,
									"end": 996,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 985,
									"end": 1002,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 982,
									"end": 1025,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 982,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 982,
									"end": 1025,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1061,
									"end": 1062,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1047,
									"end": 1063,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1063,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1076,
									"end": 1081,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1076,
									"end": 1081,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 873,
									"end": 1091,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 873,
									"end": 1091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 873,
									"end": 1091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1165,
									"end": 1173,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1178,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1156,
									"end": 1159,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 1150,
									"end": 1154,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1160,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1143,
									"end": 1179,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1137,
									"end": 1139,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 1127,
									"end": 1135,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1124,
									"end": 1140,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1121,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 1113,
									"end": 1117,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1110,
									"end": 1122,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 1141,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1103,
									"end": 1180,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1259,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1259,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1100,
									"end": 1259,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1212,
									"end": 1231,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1231,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1231,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1244,
									"end": 1249,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1244,
									"end": 1249,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1259,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1100,
									"end": 1259,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1291,
									"end": 1325,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1316,
									"end": 1324,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1314,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1291,
									"end": 1325,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1291,
									"end": 1325,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1291,
									"end": 1325,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1291,
									"end": 1325,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1367,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1357,
									"end": 1358,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1349,
									"end": 1368,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1340,
									"end": 1347,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1337,
									"end": 1369,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1334,
									"end": 1392,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1334,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1334,
									"end": 1392,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1410,
									"end": 1430,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1410,
									"end": 1430,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 630,
									"end": 1436,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 630,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 630,
									"end": 1436,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 1436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 630,
									"end": 1436,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 630,
									"end": 1436,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 630,
									"end": 1436,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1441,
									"end": 1581,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1441,
									"end": 1581,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1528,
									"end": 1575,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1569,
									"end": 1573,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1559,
									"end": 1567,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1574,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1549,
									"end": 1553,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1575,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1528,
									"end": 1575,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1528,
									"end": 1575,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1528,
									"end": 1575,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1519,
									"end": 1575,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1581,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1441,
									"end": 1581,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1586,
									"end": 1754,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1586,
									"end": 1754,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1633,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1689,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1684,
									"end": 1690,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1694,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1677,
									"end": 1678,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1674,
									"end": 1695,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1669,
									"end": 1670,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1662,
									"end": 1671,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1655,
									"end": 1672,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1696,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1719,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1719,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1648,
									"end": 1719,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1699,
									"end": 1717,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1699,
									"end": 1717,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1699,
									"end": 1717,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1699,
									"end": 1717,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1699,
									"end": 1717,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1739,
									"end": 1748,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1739,
									"end": 1748,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1754,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2119,
									"end": 2247,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2119,
									"end": 2247,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2162,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2190,
									"end": 2191,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2183,
									"end": 2184,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2180,
									"end": 2193,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2177,
									"end": 2216,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2177,
									"end": 2216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2177,
									"end": 2216,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2196,
									"end": 2214,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2196,
									"end": 2214,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2196,
									"end": 2214,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2196,
									"end": 2214,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2196,
									"end": 2214,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2232,
									"end": 2241,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2232,
									"end": 2241,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2119,
									"end": 2247,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2434,
									"end": 2871,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2434,
									"end": 2871,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2513,
									"end": 2514,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2509,
									"end": 2521,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2509,
									"end": 2521,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2509,
									"end": 2521,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2509,
									"end": 2521,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2556,
									"end": 2568,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2556,
									"end": 2568,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2556,
									"end": 2568,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2577,
									"end": 2638,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 2577,
									"end": 2638,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2631,
									"end": 2635,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 2623,
									"end": 2629,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2619,
									"end": 2636,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2609,
									"end": 2636,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2609,
									"end": 2636,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2577,
									"end": 2638,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 2577,
									"end": 2638,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2684,
									"end": 2686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2676,
									"end": 2682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2673,
									"end": 2687,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2653,
									"end": 2671,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2650,
									"end": 2688,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2647,
									"end": 2865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2647,
									"end": 2865,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2798,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2718,
									"end": 2719,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2711,
									"end": 2799,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2826,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2819,
									"end": 2820,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2812,
									"end": 2827,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2850,
									"end": 2854,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2847,
									"end": 2848,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2840,
									"end": 2855,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2647,
									"end": 2865,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2647,
									"end": 2865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2647,
									"end": 2865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2434,
									"end": 2871,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2434,
									"end": 2871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2434,
									"end": 2871,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2434,
									"end": 2871,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2434,
									"end": 2871,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2434,
									"end": 2871,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17160,
									"end": 17307,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202458fa444c7cf00da355d2ed3f078dedf9beb433edd2b3eac17381f85836517464736f6c634300080d0033",
									".code": [
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7606,
											"end": 7618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7368,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7452,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7368,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7683,
											"end": 7808,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6489,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6508,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6501,
											"end": 6513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6520,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8791,
											"end": 8795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8845,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8861,
											"end": 8868,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8870,
											"end": 8876,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8845,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8845,
											"end": 8877,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8845,
											"end": 8877,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8845,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8894,
											"end": 8898,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8894,
											"end": 8898,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8708,
											"end": 8905,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 9568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9620,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9636,
											"end": 9640,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9651,
											"end": 9657,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9620,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9620,
											"end": 9658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9620,
											"end": 9658,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9620,
											"end": 9658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9678,
											"end": 9682,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9684,
											"end": 9686,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9694,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9668,
											"end": 9695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9668,
											"end": 9695,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9668,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9712,
											"end": 9716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9712,
											"end": 9716,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9467,
											"end": 9723,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10118,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10260,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10283,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10313,
											"end": 10323,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10285,
											"end": 10310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10285,
											"end": 10310,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 10285,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10260,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10260,
											"end": 10324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6633,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6689,
											"end": 6702,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6714,
											"end": 6728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 6728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6714,
											"end": 6728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6714,
											"end": 6728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10839,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10932,
											"end": 10936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10932,
											"end": 10936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11030,
											"end": 11037,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10986,
											"end": 11038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10986,
											"end": 11038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11076,
											"end": 11091,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 11072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 11091,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 11091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11048,
											"end": 11133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11167,
											"end": 11227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11176,
											"end": 11181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11183,
											"end": 11190,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11211,
											"end": 11226,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11208,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11226,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11167,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11167,
											"end": 11227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8004,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8083,
											"end": 8087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8156,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8164,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8137,
											"end": 8165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8377,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8400,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14721,
											"end": 15061,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14721,
											"end": 15061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14822,
											"end": 14841,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14822,
											"end": 14841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14814,
											"end": 14882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14900,
											"end": 14921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14900,
											"end": 14921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14892,
											"end": 14960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14998,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 15007,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 15007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 15007,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15022,
											"end": 15054,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14721,
											"end": 15061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14721,
											"end": 15061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14721,
											"end": 15061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14721,
											"end": 15061,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15342,
											"end": 15753,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15342,
											"end": 15753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15442,
											"end": 15466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15469,
											"end": 15494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15479,
											"end": 15484,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15486,
											"end": 15493,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15469,
											"end": 15478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15469,
											"end": 15494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15469,
											"end": 15494,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15469,
											"end": 15494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15442,
											"end": 15494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15442,
											"end": 15494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15508,
											"end": 15524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15508,
											"end": 15545,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15504,
											"end": 15747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15504,
											"end": 15747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15595,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15561,
											"end": 15629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15671,
											"end": 15722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15680,
											"end": 15685,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15687,
											"end": 15694,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15715,
											"end": 15721,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15712,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15671,
											"end": 15679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 15671,
											"end": 15722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15671,
											"end": 15722,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15671,
											"end": 15722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15432,
											"end": 15753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15342,
											"end": 15753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15342,
											"end": 15753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15342,
											"end": 15753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15342,
											"end": 15753,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11720,
											"end": 12508,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11720,
											"end": 12508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11816,
											"end": 11834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11816,
											"end": 11834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11894,
											"end": 11910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11894,
											"end": 11910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11886,
											"end": 11950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12010,
											"end": 12029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12047,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12065,
											"end": 12086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12065,
											"end": 12086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12065,
											"end": 12086,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12065,
											"end": 12086,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12057,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12181,
											"end": 12201,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12201,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12401,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12401,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12401,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12378,
											"end": 12391,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12427,
											"end": 12453,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12464,
											"end": 12501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16337,
											"end": 16428,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc20cic_flattened.sol\":\"MyToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"erc20cic_flattened.sol\":{\"keccak256\":\"0x4f1463a499a78795af353a1bc16839b265fcb8aa66d0a42c0e9d44870f064f75\",\"urls\":[\"bzz-raw://44933ed4824b6b5d5a2a86a13ddd566319bc68fd86f953e8d2d24ccbece4706e\",\"dweb:/ipfs/QmcbK2hq4DQW7WqgnAHUkGfYG9UjSZ54ooLHAGacBfRgzJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "erc20cic_flattened.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "erc20cic_flattened.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "erc20cic_flattened.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "erc20cic_flattened.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "erc20cic_flattened.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> erc20cic_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "erc20cic_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"erc20cic_flattened.sol": {
				"ast": {
					"absolutePath": "erc20cic_flattened.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							704
						],
						"IERC20": [
							98
						],
						"IERC20Metadata": [
							121
						],
						"MyToken": [
							727
						]
					},
					"id": 728,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "133:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "648:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "724:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "741:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "741:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "734:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "715:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:9:0"
									},
									"scope": 21,
									"src": "662:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "831:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "848:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "848:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "841:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "773:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "781:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "815:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "815:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:16:0"
									},
									"scope": 21,
									"src": "764:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 728,
							"src": "630:235:0",
							"usedErrors": []
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "999:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "1024:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 98,
							"linearizedBaseContracts": [
								98
							],
							"name": "IERC20",
							"nameLocation": "1105:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "1118:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 32,
									"name": "Transfer",
									"nameLocation": "1287:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1312:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1296:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1334:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1318:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1346:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1338:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1295:57:0"
									},
									"src": "1281:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1359:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 41,
									"name": "Approval",
									"nameLocation": "1518:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1543:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1527:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1566:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1550:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1583:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1575:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:63:0"
									},
									"src": "1512:78:0"
								},
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1596:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1676:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1687:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1713:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1712:9:0"
									},
									"scope": 98,
									"src": "1667:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1728:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1814:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1832:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1824:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:17:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1864:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:9:0"
									},
									"scope": 98,
									"src": "1805:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1879:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 65,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2095:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2112:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2104:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:28:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2150:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 62,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2150:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2149:6:0"
									},
									"scope": 98,
									"src": "2086:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "2162:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 75,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2440:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2458:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2450:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2473:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2465:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2449:32:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2505:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2504:9:0"
									},
									"scope": 98,
									"src": "2431:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "2520:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 85,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3176:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3192:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3184:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3209:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3201:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3183:33:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3235:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 82,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3235:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3234:6:0"
									},
									"scope": 98,
									"src": "3167:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "3247:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 97,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3548:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3569:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3561:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3583:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3575:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3595:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3587:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3560:42:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3621:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 94,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3621:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3620:6:0"
									},
									"scope": 98,
									"src": "3539:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 728,
							"src": "1095:2534:0",
							"usedErrors": []
						},
						{
							"id": 99,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3786:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 101,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 98,
										"src": "3957:6:0"
									},
									"id": 102,
									"nodeType": "InheritanceSpecifier",
									"src": "3957:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 100,
								"nodeType": "StructuredDocumentation",
								"src": "3812:116:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 121,
							"linearizedBaseContracts": [
								121,
								98
							],
							"name": "IERC20Metadata",
							"nameLocation": "3939:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "3970:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4038:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4042:2:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4068:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 105,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4068:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4067:15:0"
									},
									"scope": 121,
									"src": "4029:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4089:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4159:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4165:2:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4191:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 111,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4191:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4190:15:0"
									},
									"scope": 121,
									"src": "4150:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "4212:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4291:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4299:2:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4325:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 117,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4325:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4324:7:0"
									},
									"scope": 121,
									"src": "4282:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 728,
							"src": "3929:405:0",
							"usedErrors": []
						},
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4466:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 124,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "5814:7:0"
									},
									"id": 125,
									"nodeType": "InheritanceSpecifier",
									"src": "5814:7:0"
								},
								{
									"baseName": {
										"id": 126,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 98,
										"src": "5823:6:0"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "5823:6:0"
								},
								{
									"baseName": {
										"id": 128,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "5831:14:0"
									},
									"id": 129,
									"nodeType": "InheritanceSpecifier",
									"src": "5831:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 123,
								"nodeType": "StructuredDocumentation",
								"src": "4494:1301:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 704,
							"linearizedBaseContracts": [
								704,
								121,
								98,
								21
							],
							"name": "ERC20",
							"nameLocation": "5805:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "5888:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "5852:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 132,
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5860:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5852:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 131,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5871:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "5960:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "5904:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 138,
										"keyType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5912:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5904:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 137,
											"keyType": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5931:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5923:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5942:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "5994:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "5978:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5978:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "6028:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "6013:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 142,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6013:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 145,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "6054:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "6039:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 144,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6039:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6300:57:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 153,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "6310:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 154,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "6318:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6310:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "6310:13:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "6333:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6333:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "6333:17:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "6068:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 162,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6270:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6256:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6256:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6291:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6277:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6277:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:44:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:0"
									},
									"scope": 704,
									"src": "6244:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										108
									],
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "6491:29:0",
										"statements": [
											{
												"expression": {
													"id": 169,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 143,
													"src": "6508:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 168,
												"id": 170,
												"nodeType": "Return",
												"src": "6501:12:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6363:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6431:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6458:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6435:2:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6476:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6476:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6475:15:0"
									},
									"scope": 704,
									"src": "6422:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6704:31:0",
										"statements": [
											{
												"expression": {
													"id": 179,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "6721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 178,
												"id": 180,
												"nodeType": "Return",
												"src": "6714:14:0"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "6526:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6642:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6671:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6648:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6689:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6689:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6688:15:0"
									},
									"scope": 704,
									"src": "6633:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										120
									],
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "7433:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7450:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 188,
												"id": 190,
												"nodeType": "Return",
												"src": "7443:9:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6741:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7377:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7408:8:0"
									},
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7385:2:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "7426:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 186,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7426:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7425:7:0"
									},
									"scope": 704,
									"src": "7368:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										47
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "7589:36:0",
										"statements": [
											{
												"expression": {
													"id": 199,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "7606:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 198,
												"id": 200,
												"nodeType": "Return",
												"src": "7599:19:0"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "7465:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7528:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7562:8:0"
									},
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7539:2:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "7580:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7579:9:0"
									},
									"scope": 704,
									"src": "7519:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										55
									],
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "7766:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 211,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "7783:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 213,
													"indexExpression": {
														"id": 212,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "7793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7783:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 210,
												"id": 214,
												"nodeType": "Return",
												"src": "7776:25:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "7631:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7692:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 207,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7739:8:0"
									},
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7710:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7702:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7701:17:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7757:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7756:9:0"
									},
									"scope": 704,
									"src": "7683:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										65
									],
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "8089:104:0",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8107:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 240,
														"src": "8099:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 227,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8099:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 231,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 229,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "8115:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8115:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8099:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "8147:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 234,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "8154:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "8158:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 232,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "8137:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8137:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "8137:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8182:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 226,
												"id": 239,
												"nodeType": "Return",
												"src": "8175:11:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "7814:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8013:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8065:8:0"
									},
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8030:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8022:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8022:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8042:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8034:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8021:28:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8083:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8083:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8082:6:0"
									},
									"scope": 704,
									"src": "8004:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										75
									],
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "8349:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 252,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "8366:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 254,
														"indexExpression": {
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "8378:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8366:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 256,
													"indexExpression": {
														"id": 255,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "8385:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8366:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 251,
												"id": 257,
												"nodeType": "Return",
												"src": "8359:34:0"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "8199:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8260:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 248,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8322:8:0"
									},
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8278:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "8270:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8293:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "8285:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8269:32:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "8340:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8339:9:0"
									},
									"scope": 704,
									"src": "8251:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										85
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "8797:108:0",
										"statements": [
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8815:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 283,
														"src": "8807:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 270,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8807:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 272,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "8823:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8823:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8807:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "8854:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8861:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "8870:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 275,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "8845:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8845:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "8845:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8894:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 269,
												"id": 282,
												"nodeType": "Return",
												"src": "8887:11:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "8406:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8717:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 266,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8773:8:0"
									},
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8733:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8725:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8750:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8742:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:33:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8791:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8791:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8790:6:0"
									},
									"scope": 704,
									"src": "8708:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										97
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "9570:153:0",
										"statements": [
											{
												"assignments": [
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "9588:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "9580:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 297,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9580:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 301,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 299,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "9598:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9598:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9580:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 303,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "9636:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 304,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "9642:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 305,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "9651:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 302,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "9620:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9620:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "9620:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 309,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "9678:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 310,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "9684:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 311,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "9688:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 308,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "9668:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9668:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "9668:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 296,
												"id": 315,
												"nodeType": "Return",
												"src": "9705:11:0"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "8911:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9476:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 293,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9546:8:0"
									},
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9497:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "9489:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9511:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "9503:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9523:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "9515:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9488:42:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "9564:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9564:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9563:6:0"
									},
									"scope": 704,
									"src": "9467:256:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "10212:140:0",
										"statements": [
											{
												"assignments": [
													328
												],
												"declarations": [
													{
														"constant": false,
														"id": 328,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10230:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "10222:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 327,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10222:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 331,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 329,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "10238:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10238:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10222:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 333,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "10269:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 334,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "10276:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 336,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "10295:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 337,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "10302:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 335,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "10285:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10285:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 339,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "10313:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10285:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 332,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "10260:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10260:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "10260:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10341:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 326,
												"id": 344,
												"nodeType": "Return",
												"src": "10334:11:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "9729:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "10127:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10153:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "10145:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "10170:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "10162:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10144:37:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "10206:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10206:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10205:6:0"
									},
									"scope": 704,
									"src": "10118:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "10938:328:0",
										"statements": [
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10956:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "10948:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 356,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10948:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 360,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 358,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "10964:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10964:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10948:28:0"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10994:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "10986:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"arguments": [
														{
															"id": 364,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "11023:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "11030:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 363,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "11013:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11013:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10986:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 369,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "11056:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 370,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "11076:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11056:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11093:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11048:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "11048:85:0"
											},
											{
												"id": 383,
												"nodeType": "UncheckedBlock",
												"src": "11143:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 376,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "11176:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "11183:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 378,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "11192:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 379,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 351,
																		"src": "11211:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11192:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 375,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "11167:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11167:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "11167:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 355,
												"id": 385,
												"nodeType": "Return",
												"src": "11248:11:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "10358:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "10848:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10874:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "10866:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "10891:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "10883:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10865:42:0"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "10932:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10932:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10931:6:0"
									},
									"scope": 704,
									"src": "10839:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "11798:710:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 398,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "11816:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11832:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11824:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 399,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11824:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11824:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11816:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11836:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11808:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11808:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "11808:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "11894:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11908:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11900:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 409,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11900:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11900:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11894:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11912:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11886:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11886:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "11886:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "11982:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "11988:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "11992:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "11961:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11961:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "11961:38:0"
											},
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "12018:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "12010:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 423,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12010:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 428,
												"initialValue": {
													"baseExpression": {
														"id": 425,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "12032:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 427,
													"indexExpression": {
														"id": 426,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "12042:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12032:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12010:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 430,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "12065:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 431,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "12080:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12065:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12088:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12057:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12057:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "12057:72:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "12139:273:0",
												"statements": [
													{
														"expression": {
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 436,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "12163:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 438,
																"indexExpression": {
																	"id": 437,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "12173:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12163:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 439,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "12181:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 440,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "12195:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12181:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12163:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 443,
														"nodeType": "ExpressionStatement",
														"src": "12163:38:0"
													},
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 444,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "12378:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 446,
																"indexExpression": {
																	"id": 445,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "12388:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12378:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "12395:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12378:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "12378:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "12436:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "12442:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "12446:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "12427:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12427:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "12422:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 458,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "12484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 459,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "12490:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 460,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "12494:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 457,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "12464:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12464:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "12464:37:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "11272:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11729:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11747:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "11739:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11761:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "11753:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11773:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "11765:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11738:42:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11798:0:0"
									},
									"scope": 704,
									"src": "11720:788:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "12849:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 473,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "12867:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12886:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12878:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 474,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12878:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12878:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12867:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12890:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12859:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12859:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "12859:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12964:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12956:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 483,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12956:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12956:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "12968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "12977:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 482,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "12935:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12935:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "12935:49:0"
											},
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 491,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "12995:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 492,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "13011:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12995:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "12995:22:0"
											},
											{
												"id": 501,
												"nodeType": "UncheckedBlock",
												"src": "13027:175:0",
												"statements": [
													{
														"expression": {
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 495,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "13163:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 497,
																"indexExpression": {
																	"id": 496,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "13173:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13163:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 498,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "13185:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13163:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 500,
														"nodeType": "ExpressionStatement",
														"src": "13163:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13233:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13225:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 503,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13225:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13225:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 507,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "13237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "13246:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 502,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "13216:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13216:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "EmitStatement",
												"src": "13211:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13292:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13284:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 512,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13284:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13284:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "13296:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "13305:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "13264:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13264:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "13264:48:0"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "12514:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12793:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "12799:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12824:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "12816:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12798:33:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12849:0:0"
									},
									"scope": 704,
									"src": "12784:535:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "13704:594:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 530,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "13722:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13741:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13733:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 531,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13733:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13733:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13722:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13745:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13714:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13714:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "13714:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "13813:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13830:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13822:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13822:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13822:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "13834:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "13792:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13792:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "13792:49:0"
											},
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "13860:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "13852:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13852:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"baseExpression": {
														"id": 550,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "13877:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "13887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13877:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13852:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 555,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "13913:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 556,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "13931:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13913:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13939:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13905:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13905:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "13905:71:0"
											},
											{
												"id": 573,
												"nodeType": "UncheckedBlock",
												"src": "13986:194:0",
												"statements": [
													{
														"expression": {
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 561,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "14010:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 563,
																"indexExpression": {
																	"id": 562,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "14020:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "14010:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 564,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "14031:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 565,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "14048:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14031:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14010:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 568,
														"nodeType": "ExpressionStatement",
														"src": "14010:44:0"
													},
													{
														"expression": {
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 569,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "14147:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 570,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "14163:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14147:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 572,
														"nodeType": "ExpressionStatement",
														"src": "14147:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 575,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "14204:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14221:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14213:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 576,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14213:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14213:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 580,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14225:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 574,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "14195:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14195:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "EmitStatement",
												"src": "14190:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 584,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "14263:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14280:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14272:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 585,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14272:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14272:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14284:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 583,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "14243:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14243:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "14243:48:0"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "13325:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13648:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13662:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "13654:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13679:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "13671:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13653:33:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13704:0:0"
									},
									"scope": 704,
									"src": "13639:659:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "14804:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 604,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "14822:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14839:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14831:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 605,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14831:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14831:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14822:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14843:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14814:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "14814:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 614,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "14900:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14919:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14911:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14911:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14911:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14900:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14923:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14892:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14892:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "14892:68:0"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 623,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "14971:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 626,
															"indexExpression": {
																"id": 624,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "14983:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14971:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 627,
														"indexExpression": {
															"id": 625,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "14990:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14971:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 628,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "15001:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14971:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "14971:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "15031:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "15038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "15047:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "15022:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15022:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "EmitStatement",
												"src": "15017:37:0"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "14304:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14730:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14747:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "14739:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14762:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "14754:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14779:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "14771:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14738:48:0"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14804:0:0"
									},
									"scope": 704,
									"src": "14721:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "15432:321:0",
										"statements": [
											{
												"assignments": [
													649
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "15450:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "15442:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 648,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15442:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 654,
												"initialValue": {
													"arguments": [
														{
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "15479:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "15486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 650,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "15469:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15469:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15442:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 655,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "15508:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15533:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 657,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15533:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 656,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15528:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15528:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15508:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "15504:243:0",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "15547:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 663,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 649,
																			"src": "15569:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 664,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "15589:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15569:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15597:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 662,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "15561:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15561:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 668,
															"nodeType": "ExpressionStatement",
															"src": "15561:68:0"
														},
														{
															"id": 677,
															"nodeType": "UncheckedBlock",
															"src": "15643:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 670,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "15680:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 671,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 643,
																				"src": "15687:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 672,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 649,
																					"src": "15696:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 673,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 645,
																					"src": "15715:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15696:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 669,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "15671:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15671:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 676,
																	"nodeType": "ExpressionStatement",
																	"src": "15671:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "15067:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "15351:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15375:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15367:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15390:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15382:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15407:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15399:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15366:48:0"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15432:0:0"
									},
									"scope": 704,
									"src": "15342:411:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "16426:2:0",
										"statements": []
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "15759:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "16346:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16375:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "16367:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16389:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "16381:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16401:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "16393:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16366:42:0"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16426:0:0"
									},
									"scope": 704,
									"src": "16337:91:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "17104:2:0",
										"statements": []
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "16434:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "17025:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17053:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "17045:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17067:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "17059:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17079:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "17071:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17044:42:0"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17104:0:0"
									},
									"scope": 704,
									"src": "17016:90:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 728,
							"src": "5796:11312:0",
							"usedErrors": []
						},
						{
							"id": 705,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "17134:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 706,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 704,
										"src": "17180:5:0"
									},
									"id": 707,
									"nodeType": "InheritanceSpecifier",
									"src": "17180:5:0"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 727,
							"linearizedBaseContracts": [
								727,
								704,
								121,
								98,
								21
							],
							"name": "MyToken",
							"nameLocation": "17169:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "17230:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 715,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17246:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17246:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3930303030303030303030303030303030303030",
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17258:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_90000000000000000000_by_1",
																	"typeString": "int_const 90000000000000000000"
																},
																"value": "90000000000000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17281:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 719,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "17287:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17287:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "17281:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17258:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 714,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "17240:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17240:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "17240:58:0"
											}
										]
									},
									"id": 726,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17212:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17223:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 712,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 709,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 704,
												"src": "17206:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "17206:23:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17203:2:0"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17230:0:0"
									},
									"scope": 727,
									"src": "17192:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 728,
							"src": "17160:147:0",
							"usedErrors": []
						}
					],
					"src": "108:17199:0"
				},
				"id": 0
			}
		}
	}
}